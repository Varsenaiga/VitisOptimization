// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution2_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_0_0_0_0_address0,
        m_0_0_0_0_ce0,
        m_0_0_0_0_q0,
        m_0_0_0_0_address1,
        m_0_0_0_0_ce1,
        m_0_0_0_0_q1,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        grp_fu_1176_p_din0,
        grp_fu_1176_p_din1,
        grp_fu_1176_p_dout0,
        grp_fu_1176_p_ce
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] m_0_0_0_0_address0;
output   m_0_0_0_0_ce0;
input  [35:0] m_0_0_0_0_q0;
output  [8:0] m_0_0_0_0_address1;
output   m_0_0_0_0_ce1;
input  [35:0] m_0_0_0_0_q1;
output  [9:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [35:0] out_0_d0;
output  [20:0] grp_fu_1176_p_din0;
output  [35:0] grp_fu_1176_p_din1;
input  [54:0] grp_fu_1176_p_dout0;
output   grp_fu_1176_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] m_0_0_0_0_address0;
reg m_0_0_0_0_ce0;
reg m_0_0_0_0_ce1;
reg out_0_ce0;
reg out_0_we0;
reg[35:0] out_0_d0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] secondBias_f_V_address0;
reg    secondBias_f_V_ce0;
wire   [20:0] secondBias_f_V_q0;
wire   [6:0] secondKernel_f_V_1_address0;
reg    secondKernel_f_V_1_ce0;
wire   [19:0] secondKernel_f_V_1_q0;
wire   [6:0] secondKernel_f_V_0_address0;
reg    secondKernel_f_V_0_ce0;
wire   [19:0] secondKernel_f_V_0_q0;
reg   [6:0] secondKernel_f_V_2_address0;
reg    secondKernel_f_V_2_ce0;
wire   [20:0] secondKernel_f_V_2_q0;
wire   [6:0] secondKernel_f_V_3_address0;
reg    secondKernel_f_V_3_ce0;
wire   [20:0] secondKernel_f_V_3_q0;
reg  signed [35:0] reg_360;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
reg  signed [20:0] reg_365;
wire   [9:0] zext_ln1171_fu_382_p1;
reg   [9:0] zext_ln1171_reg_1051;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_cast_fu_390_p3;
reg   [6:0] tmp_cast_reg_1056;
wire   [4:0] add_ln332_fu_404_p2;
reg   [4:0] add_ln332_reg_1067;
wire   [0:0] icmp_ln332_fu_398_p2;
wire  signed [35:0] sext_ln334_fu_410_p1;
reg  signed [35:0] sext_ln334_reg_1077;
wire    ap_CS_fsm_state3;
wire   [8:0] tmp_s_fu_414_p3;
reg   [8:0] tmp_s_reg_1082;
wire    ap_CS_fsm_state4;
reg   [9:0] out_0_addr_reg_1087;
wire   [5:0] indvars_iv_next20_fu_446_p2;
reg   [5:0] indvars_iv_next20_reg_1095;
wire    ap_CS_fsm_state5;
wire   [3:0] add_ln340_fu_490_p2;
reg   [3:0] add_ln340_reg_1115;
wire   [8:0] tmp_10_fu_502_p3;
reg   [8:0] tmp_10_reg_1120;
wire   [0:0] icmp_ln340_fu_484_p2;
wire   [0:0] cmp50_fu_510_p2;
reg   [0:0] cmp50_reg_1125;
wire   [8:0] tmp_11_fu_516_p3;
reg   [8:0] tmp_11_reg_1129;
wire   [0:0] cmp27_fu_523_p2;
reg   [0:0] cmp27_reg_1135;
wire   [0:0] cmp87_fu_529_p2;
reg   [0:0] cmp87_reg_1139;
wire   [8:0] tmp_12_fu_540_p3;
reg   [8:0] tmp_12_reg_1143;
reg  signed [19:0] secondKernel_f_V_1_load_reg_1148;
wire    ap_CS_fsm_state7;
wire   [54:0] grp_fu_555_p2;
reg   [54:0] r_V_15_reg_1163;
wire    ap_CS_fsm_state8;
wire   [17:0] trunc_ln727_fu_561_p1;
reg   [17:0] trunc_ln727_reg_1168;
wire   [35:0] add_ln415_fu_625_p2;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [3:0] add_ln345_fu_665_p2;
reg   [3:0] add_ln345_reg_1191;
reg  signed [19:0] secondKernel_f_V_0_load_reg_1196;
wire    ap_CS_fsm_state12;
wire   [54:0] grp_fu_678_p2;
reg   [54:0] r_V_16_reg_1211;
wire    ap_CS_fsm_state13;
wire   [17:0] trunc_ln727_2_fu_684_p1;
reg   [17:0] trunc_ln727_2_reg_1216;
wire   [35:0] add_ln415_2_fu_748_p2;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [3:0] add_ln354_fu_788_p2;
reg   [3:0] add_ln354_reg_1239;
wire  signed [54:0] sext_ln1168_4_fu_794_p1;
wire  signed [54:0] sext_ln1171_5_fu_798_p1;
reg   [54:0] r_V_19_reg_1254;
wire    ap_CS_fsm_state18;
wire   [17:0] trunc_ln727_3_fu_808_p1;
reg   [17:0] trunc_ln727_3_reg_1259;
wire   [35:0] add_ln415_4_fu_872_p2;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire   [3:0] add_ln350_fu_923_p2;
reg   [3:0] add_ln350_reg_1292;
reg  signed [35:0] r_V_11_reg_1297;
reg  signed [20:0] secondKernel_f_V_3_load_reg_1302;
wire    ap_CS_fsm_state22;
wire   [54:0] grp_fu_937_p2;
reg   [54:0] r_V_17_reg_1327;
wire    ap_CS_fsm_state23;
wire   [17:0] trunc_ln1168_fu_955_p1;
reg   [17:0] trunc_ln1168_reg_1332;
wire   [54:0] grp_fu_949_p2;
reg   [54:0] r_V_18_reg_1337;
wire   [17:0] trunc_ln1168_1_fu_959_p1;
reg   [17:0] trunc_ln1168_1_reg_1342;
wire   [54:0] ret_V_4_fu_963_p2;
reg   [54:0] ret_V_4_reg_1347;
wire    ap_CS_fsm_state24;
wire   [0:0] r_3_fu_972_p2;
reg   [0:0] r_3_reg_1353;
wire   [35:0] add_ln415_3_fu_1030_p2;
wire    ap_CS_fsm_state25;
reg   [0:0] tmp_reg_1363;
wire    ap_CS_fsm_state26;
reg   [5:0] i_reg_231;
wire    ap_CS_fsm_state27;
reg   [3:0] h_reg_243;
wire   [0:0] exitcond238_fu_440_p2;
reg   [35:0] lhs_reg_254;
reg   [3:0] h_1_reg_265;
reg   [35:0] lhs_5_reg_276;
reg   [35:0] ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4;
reg   [35:0] V1_i_i_i_i_i67280_promoted_reg_288;
wire   [0:0] icmp_ln345_fu_659_p2;
reg   [3:0] h_3_reg_300;
reg   [35:0] lhs_10_reg_311;
reg   [3:0] h_2_reg_323;
reg   [35:0] lhs_8_reg_334;
reg   [35:0] empty_63_reg_346;
wire   [0:0] icmp_ln350_fu_917_p2;
wire   [0:0] icmp_ln354_fu_782_p2;
wire   [63:0] zext_ln332_fu_377_p1;
wire   [63:0] zext_ln339_fu_435_p1;
wire   [63:0] zext_ln1171_9_fu_469_p1;
wire   [63:0] zext_ln1169_fu_479_p1;
wire   [63:0] zext_ln1171_12_fu_644_p1;
wire   [63:0] zext_ln1169_1_fu_654_p1;
wire   [63:0] zext_ln1171_18_fu_767_p1;
wire   [63:0] zext_ln1169_4_fu_777_p1;
wire   [63:0] zext_ln1171_15_fu_891_p1;
wire   [63:0] zext_ln1169_2_fu_902_p1;
wire   [63:0] zext_ln1169_3_fu_912_p1;
reg   [4:0] d_fu_92;
wire   [3:0] trunc_ln1171_fu_386_p1;
wire   [9:0] tmp_9_fu_422_p3;
wire   [9:0] add_ln339_fu_430_p2;
wire   [6:0] zext_ln1171_8_fu_460_p1;
wire   [6:0] add_ln1171_fu_464_p2;
wire   [8:0] zext_ln1171_7_fu_456_p1;
wire   [8:0] add_ln1169_1_fu_474_p2;
wire   [5:0] empty_59_fu_496_p2;
wire   [5:0] add_ln1169_fu_534_p2;
wire   [54:0] lhs_4_fu_565_p3;
wire   [54:0] ret_V_fu_573_p2;
wire   [0:0] p_Result_s_fu_588_p3;
wire   [0:0] r_fu_604_p2;
wire   [0:0] or_ln412_fu_609_p2;
wire   [0:0] p_Result_19_fu_596_p3;
wire   [0:0] and_ln412_fu_615_p2;
wire   [35:0] p_Val2_6_fu_578_p4;
wire   [35:0] zext_ln415_fu_621_p1;
wire   [6:0] zext_ln1171_11_fu_635_p1;
wire   [6:0] add_ln1171_3_fu_639_p2;
wire   [8:0] zext_ln1171_10_fu_631_p1;
wire   [8:0] add_ln1169_2_fu_649_p2;
wire   [54:0] lhs_6_fu_688_p3;
wire   [54:0] ret_V_3_fu_696_p2;
wire   [0:0] p_Result_14_fu_711_p3;
wire   [0:0] r_2_fu_727_p2;
wire   [0:0] or_ln412_2_fu_732_p2;
wire   [0:0] p_Result_20_fu_719_p3;
wire   [0:0] and_ln412_2_fu_738_p2;
wire   [35:0] p_Val2_8_fu_701_p4;
wire   [35:0] zext_ln415_2_fu_744_p1;
wire   [6:0] zext_ln1171_17_fu_758_p1;
wire   [6:0] add_ln1171_5_fu_762_p2;
wire   [8:0] zext_ln1171_16_fu_754_p1;
wire   [8:0] add_ln1169_5_fu_772_p2;
wire   [54:0] lhs_11_fu_812_p3;
wire   [54:0] ret_V_6_fu_820_p2;
wire   [0:0] p_Result_18_fu_835_p3;
wire   [0:0] r_4_fu_851_p2;
wire   [0:0] or_ln412_4_fu_856_p2;
wire   [0:0] p_Result_22_fu_843_p3;
wire   [0:0] and_ln412_4_fu_862_p2;
wire   [35:0] p_Val2_12_fu_825_p4;
wire   [35:0] zext_ln415_4_fu_868_p1;
wire   [6:0] zext_ln1171_14_fu_882_p1;
wire   [6:0] add_ln1171_4_fu_886_p2;
wire   [8:0] zext_ln1171_13_fu_878_p1;
wire   [8:0] add_ln1169_3_fu_897_p2;
wire   [8:0] add_ln1169_4_fu_907_p2;
wire   [17:0] sub_ln727_fu_967_p2;
wire   [54:0] lhs_9_fu_977_p3;
wire   [54:0] ret_V_5_fu_985_p2;
wire   [0:0] p_Result_16_fu_1000_p3;
wire   [0:0] or_ln412_3_fu_1015_p2;
wire   [0:0] p_Result_21_fu_1008_p3;
wire   [0:0] and_ln412_3_fu_1020_p2;
wire   [35:0] p_Val2_10_fu_990_p4;
wire   [35:0] zext_ln415_3_fu_1026_p1;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
end

master_fix_convolution2_fix_secondBias_f_V #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
secondBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondBias_f_V_address0),
    .ce0(secondBias_f_V_ce0),
    .q0(secondBias_f_V_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_1 #(
    .DataWidth( 20 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_1_address0),
    .ce0(secondKernel_f_V_1_ce0),
    .q0(secondKernel_f_V_1_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_0 #(
    .DataWidth( 20 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_0_address0),
    .ce0(secondKernel_f_V_0_ce0),
    .q0(secondKernel_f_V_0_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_2 #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_2_address0),
    .ce0(secondKernel_f_V_2_ce0),
    .q0(secondKernel_f_V_2_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_3 #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_3_address0),
    .ce0(secondKernel_f_V_3_ce0),
    .q0(secondKernel_f_V_3_q0)
);

master_fix_mul_20s_36s_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 55 ))
mul_20s_36s_55_2_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(secondKernel_f_V_1_load_reg_1148),
    .din1(reg_360),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

master_fix_mul_20s_36s_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 55 ))
mul_20s_36s_55_2_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(secondKernel_f_V_0_load_reg_1196),
    .din1(reg_360),
    .ce(1'b1),
    .dout(grp_fu_678_p2)
);

master_fix_mul_21s_36s_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 55 ))
mul_21s_36s_55_2_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_365),
    .din1(reg_360),
    .ce(1'b1),
    .dout(grp_fu_937_p2)
);

master_fix_mul_21s_36s_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 55 ))
mul_21s_36s_55_2_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(secondKernel_f_V_3_load_reg_1302),
    .din1(r_V_11_reg_1297),
    .ce(1'b1),
    .dout(grp_fu_949_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_523_p2 == 1'd1) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
        V1_i_i_i_i_i67280_promoted_reg_288 <= lhs_reg_254;
    end else if (((icmp_ln345_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (cmp27_reg_1135 == 1'd0))) begin
        V1_i_i_i_i_i67280_promoted_reg_288 <= lhs_5_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_92 <= 5'd0;
    end else if (((exitcond238_fu_440_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        d_fu_92 <= add_ln332_reg_1067;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((cmp87_reg_1139 == 1'd0) & (cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd0)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp87_reg_1139 == 1'd0) & (cmp50_reg_1125 == 1'd0))))) begin
        empty_63_reg_346 <= ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4;
    end else if (((icmp_ln354_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        empty_63_reg_346 <= lhs_10_reg_311;
    end else if (((icmp_ln350_fu_917_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        empty_63_reg_346 <= lhs_8_reg_334;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_523_p2 == 1'd0) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
        h_1_reg_265 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        h_1_reg_265 <= add_ln345_reg_1191;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd1)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp50_reg_1125 == 1'd1))))) begin
        h_2_reg_323 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        h_2_reg_323 <= add_ln350_reg_1292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((cmp87_reg_1139 == 1'd1) & (cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd0)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp87_reg_1139 == 1'd1) & (cmp50_reg_1125 == 1'd0))))) begin
        h_3_reg_300 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_3_reg_300 <= add_ln354_reg_1239;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        h_reg_243 <= add_ln340_reg_1115;
    end else if (((exitcond238_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        h_reg_243 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_231 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_reg_231 <= indvars_iv_next20_reg_1095;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((cmp87_reg_1139 == 1'd1) & (cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd0)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp87_reg_1139 == 1'd1) & (cmp50_reg_1125 == 1'd0))))) begin
        lhs_10_reg_311 <= ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs_10_reg_311 <= add_ln415_4_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_523_p2 == 1'd0) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
        lhs_5_reg_276 <= lhs_reg_254;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs_5_reg_276 <= add_ln415_2_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (((cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd1)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp50_reg_1125 == 1'd1))))) begin
        lhs_8_reg_334 <= ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        lhs_8_reg_334 <= add_ln415_3_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        lhs_reg_254 <= add_ln415_fu_625_p2;
    end else if (((exitcond238_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        lhs_reg_254 <= sext_ln334_reg_1077;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_360 <= m_0_0_0_0_q1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_360 <= m_0_0_0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln332_reg_1067 <= add_ln332_fu_404_p2;
        tmp_cast_reg_1056[6 : 3] <= tmp_cast_fu_390_p3[6 : 3];
        zext_ln1171_reg_1051[4 : 0] <= zext_ln1171_fu_382_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln340_reg_1115 <= add_ln340_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (cmp27_reg_1135 == 1'd0))) begin
        add_ln345_reg_1191 <= add_ln345_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln350_reg_1292 <= add_ln350_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln354_reg_1239 <= add_ln354_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
        cmp27_reg_1135 <= cmp27_fu_523_p2;
        cmp50_reg_1125 <= cmp50_fu_510_p2;
        cmp87_reg_1139 <= cmp87_fu_529_p2;
        tmp_10_reg_1120[8 : 3] <= tmp_10_fu_502_p3[8 : 3];
        tmp_11_reg_1129[8 : 3] <= tmp_11_fu_516_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvars_iv_next20_reg_1095 <= indvars_iv_next20_fu_446_p2;
        out_0_addr_reg_1087 <= zext_ln339_fu_435_p1;
        tmp_s_reg_1082[8 : 3] <= tmp_s_fu_414_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        r_3_reg_1353 <= r_3_fu_972_p2;
        ret_V_4_reg_1347 <= ret_V_4_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        r_V_11_reg_1297 <= m_0_0_0_0_q0;
        secondKernel_f_V_3_load_reg_1302 <= secondKernel_f_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_V_15_reg_1163 <= grp_fu_555_p2;
        trunc_ln727_reg_1168 <= trunc_ln727_fu_561_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_16_reg_1211 <= grp_fu_678_p2;
        trunc_ln727_2_reg_1216 <= trunc_ln727_2_fu_684_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        r_V_17_reg_1327 <= grp_fu_937_p2;
        r_V_18_reg_1337 <= grp_fu_949_p2;
        trunc_ln1168_1_reg_1342 <= trunc_ln1168_1_fu_959_p1;
        trunc_ln1168_reg_1332 <= trunc_ln1168_fu_955_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_V_19_reg_1254 <= grp_fu_1176_p_dout0;
        trunc_ln727_3_reg_1259 <= trunc_ln727_3_fu_808_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_365 <= secondKernel_f_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        secondKernel_f_V_0_load_reg_1196 <= secondKernel_f_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        secondKernel_f_V_1_load_reg_1148 <= secondKernel_f_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln334_reg_1077 <= sext_ln334_fu_410_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_523_p2 == 1'd0) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
        tmp_12_reg_1143[8 : 3] <= tmp_12_fu_540_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_reg_1363 <= empty_63_reg_346[32'd35];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln332_fu_398_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln345_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (cmp27_reg_1135 == 1'd0))) begin
        ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4 = lhs_5_reg_276;
    end else begin
        ap_phi_mux_V1_i_i_i_i_i67280_promoted_phi_fu_291_p4 = V1_i_i_i_i_i67280_promoted_reg_288;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln332_fu_398_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        m_0_0_0_0_address0 = zext_ln1169_3_fu_912_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        m_0_0_0_0_address0 = zext_ln1169_4_fu_777_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        m_0_0_0_0_address0 = zext_ln1169_1_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        m_0_0_0_0_address0 = zext_ln1169_fu_479_p1;
    end else begin
        m_0_0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        m_0_0_0_0_ce0 = 1'b1;
    end else begin
        m_0_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        m_0_0_0_0_ce1 = 1'b1;
    end else begin
        m_0_0_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        out_0_d0 = 36'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        out_0_d0 = lhs_8_reg_334;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_0_d0 = lhs_10_reg_311;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        out_0_d0 = lhs_5_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_0_d0 = lhs_reg_254;
    end else begin
        out_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_1363 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((icmp_ln354_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln350_fu_917_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (cmp27_reg_1135 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln340_fu_484_p2 == 1'd1)))) begin
        out_0_we0 = 1'b1;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        secondBias_f_V_ce0 = 1'b1;
    end else begin
        secondBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        secondKernel_f_V_0_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        secondKernel_f_V_1_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        secondKernel_f_V_2_address0 = zext_ln1171_15_fu_891_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        secondKernel_f_V_2_address0 = zext_ln1171_18_fu_767_p1;
    end else begin
        secondKernel_f_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15))) begin
        secondKernel_f_V_2_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        secondKernel_f_V_3_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln332_fu_398_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond238_fu_440_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln340_fu_484_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (((cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd1)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp50_reg_1125 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((1'b1 == ap_CS_fsm_state10) & (((cmp87_reg_1139 == 1'd1) & (cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd0)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp87_reg_1139 == 1'd1) & (cmp50_reg_1125 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state10) & (((cmp87_reg_1139 == 1'd0) & (cmp27_reg_1135 == 1'd1) & (cmp50_reg_1125 == 1'd0)) | ((icmp_ln345_fu_659_p2 == 1'd1) & (cmp87_reg_1139 == 1'd0) & (cmp50_reg_1125 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln354_fu_782_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln350_fu_917_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_1_fu_474_p2 = (tmp_s_reg_1082 + zext_ln1171_7_fu_456_p1);

assign add_ln1169_2_fu_649_p2 = (tmp_12_reg_1143 + zext_ln1171_10_fu_631_p1);

assign add_ln1169_3_fu_897_p2 = (tmp_11_reg_1129 + zext_ln1171_13_fu_878_p1);

assign add_ln1169_4_fu_907_p2 = (tmp_10_reg_1120 + zext_ln1171_13_fu_878_p1);

assign add_ln1169_5_fu_772_p2 = (tmp_11_reg_1129 + zext_ln1171_16_fu_754_p1);

assign add_ln1169_fu_534_p2 = ($signed(i_reg_231) + $signed(6'd63));

assign add_ln1171_3_fu_639_p2 = (tmp_cast_reg_1056 + zext_ln1171_11_fu_635_p1);

assign add_ln1171_4_fu_886_p2 = (tmp_cast_reg_1056 + zext_ln1171_14_fu_882_p1);

assign add_ln1171_5_fu_762_p2 = (tmp_cast_reg_1056 + zext_ln1171_17_fu_758_p1);

assign add_ln1171_fu_464_p2 = (tmp_cast_reg_1056 + zext_ln1171_8_fu_460_p1);

assign add_ln332_fu_404_p2 = (d_fu_92 + 5'd1);

assign add_ln339_fu_430_p2 = (tmp_9_fu_422_p3 + zext_ln1171_reg_1051);

assign add_ln340_fu_490_p2 = (h_reg_243 + 4'd1);

assign add_ln345_fu_665_p2 = (h_1_reg_265 + 4'd1);

assign add_ln350_fu_923_p2 = (h_2_reg_323 + 4'd1);

assign add_ln354_fu_788_p2 = (h_3_reg_300 + 4'd1);

assign add_ln415_2_fu_748_p2 = (p_Val2_8_fu_701_p4 + zext_ln415_2_fu_744_p1);

assign add_ln415_3_fu_1030_p2 = (p_Val2_10_fu_990_p4 + zext_ln415_3_fu_1026_p1);

assign add_ln415_4_fu_872_p2 = (p_Val2_12_fu_825_p4 + zext_ln415_4_fu_868_p1);

assign add_ln415_fu_625_p2 = (p_Val2_6_fu_578_p4 + zext_ln415_fu_621_p1);

assign and_ln412_2_fu_738_p2 = (p_Result_20_fu_719_p3 & or_ln412_2_fu_732_p2);

assign and_ln412_3_fu_1020_p2 = (p_Result_21_fu_1008_p3 & or_ln412_3_fu_1015_p2);

assign and_ln412_4_fu_862_p2 = (p_Result_22_fu_843_p3 & or_ln412_4_fu_856_p2);

assign and_ln412_fu_615_p2 = (p_Result_19_fu_596_p3 & or_ln412_fu_609_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign cmp27_fu_523_p2 = ((i_reg_231 == 6'd0) ? 1'b1 : 1'b0);

assign cmp50_fu_510_p2 = ((empty_59_fu_496_p2 < 6'd42) ? 1'b1 : 1'b0);

assign cmp87_fu_529_p2 = ((indvars_iv_next20_reg_1095 < 6'd42) ? 1'b1 : 1'b0);

assign empty_59_fu_496_p2 = (i_reg_231 + 6'd2);

assign exitcond238_fu_440_p2 = ((i_reg_231 == 6'd42) ? 1'b1 : 1'b0);

assign grp_fu_1176_p_ce = 1'b1;

assign grp_fu_1176_p_din0 = sext_ln1171_5_fu_798_p1;

assign grp_fu_1176_p_din1 = sext_ln1168_4_fu_794_p1;

assign icmp_ln332_fu_398_p2 = ((d_fu_92 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln340_fu_484_p2 = ((h_reg_243 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln345_fu_659_p2 = ((h_1_reg_265 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_917_p2 = ((h_2_reg_323 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln354_fu_782_p2 = ((h_3_reg_300 == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_next20_fu_446_p2 = (i_reg_231 + 6'd1);

assign lhs_11_fu_812_p3 = {{lhs_10_reg_311}, {19'd0}};

assign lhs_4_fu_565_p3 = {{lhs_reg_254}, {19'd0}};

assign lhs_6_fu_688_p3 = {{lhs_5_reg_276}, {19'd0}};

assign lhs_9_fu_977_p3 = {{lhs_8_reg_334}, {19'd0}};

assign m_0_0_0_0_address1 = zext_ln1169_2_fu_902_p1;

assign or_ln412_2_fu_732_p2 = (r_2_fu_727_p2 | p_Result_14_fu_711_p3);

assign or_ln412_3_fu_1015_p2 = (r_3_reg_1353 | p_Result_16_fu_1000_p3);

assign or_ln412_4_fu_856_p2 = (r_4_fu_851_p2 | p_Result_18_fu_835_p3);

assign or_ln412_fu_609_p2 = (r_fu_604_p2 | p_Result_s_fu_588_p3);

assign out_0_address0 = out_0_addr_reg_1087;

assign p_Result_14_fu_711_p3 = ret_V_3_fu_696_p2[32'd19];

assign p_Result_16_fu_1000_p3 = ret_V_5_fu_985_p2[32'd19];

assign p_Result_18_fu_835_p3 = ret_V_6_fu_820_p2[32'd19];

assign p_Result_19_fu_596_p3 = ret_V_fu_573_p2[32'd18];

assign p_Result_20_fu_719_p3 = ret_V_3_fu_696_p2[32'd18];

assign p_Result_21_fu_1008_p3 = ret_V_4_reg_1347[32'd18];

assign p_Result_22_fu_843_p3 = ret_V_6_fu_820_p2[32'd18];

assign p_Result_s_fu_588_p3 = ret_V_fu_573_p2[32'd19];

assign p_Val2_10_fu_990_p4 = {{ret_V_5_fu_985_p2[54:19]}};

assign p_Val2_12_fu_825_p4 = {{ret_V_6_fu_820_p2[54:19]}};

assign p_Val2_6_fu_578_p4 = {{ret_V_fu_573_p2[54:19]}};

assign p_Val2_8_fu_701_p4 = {{ret_V_3_fu_696_p2[54:19]}};

assign r_2_fu_727_p2 = ((trunc_ln727_2_reg_1216 != 18'd0) ? 1'b1 : 1'b0);

assign r_3_fu_972_p2 = ((trunc_ln1168_1_reg_1342 != sub_ln727_fu_967_p2) ? 1'b1 : 1'b0);

assign r_4_fu_851_p2 = ((trunc_ln727_3_reg_1259 != 18'd0) ? 1'b1 : 1'b0);

assign r_fu_604_p2 = ((trunc_ln727_reg_1168 != 18'd0) ? 1'b1 : 1'b0);

assign ret_V_3_fu_696_p2 = (lhs_6_fu_688_p3 + r_V_16_reg_1211);

assign ret_V_4_fu_963_p2 = (r_V_18_reg_1337 + r_V_17_reg_1327);

assign ret_V_5_fu_985_p2 = (lhs_9_fu_977_p3 + ret_V_4_reg_1347);

assign ret_V_6_fu_820_p2 = (lhs_11_fu_812_p3 + r_V_19_reg_1254);

assign ret_V_fu_573_p2 = (lhs_4_fu_565_p3 + r_V_15_reg_1163);

assign secondBias_f_V_address0 = zext_ln332_fu_377_p1;

assign secondKernel_f_V_0_address0 = zext_ln1171_12_fu_644_p1;

assign secondKernel_f_V_1_address0 = zext_ln1171_9_fu_469_p1;

assign secondKernel_f_V_3_address0 = zext_ln1171_15_fu_891_p1;

assign sext_ln1168_4_fu_794_p1 = reg_360;

assign sext_ln1171_5_fu_798_p1 = reg_365;

assign sext_ln334_fu_410_p1 = $signed(secondBias_f_V_q0);

assign sub_ln727_fu_967_p2 = (18'd0 - trunc_ln1168_reg_1332);

assign tmp_10_fu_502_p3 = {{empty_59_fu_496_p2}, {3'd0}};

assign tmp_11_fu_516_p3 = {{indvars_iv_next20_reg_1095}, {3'd0}};

assign tmp_12_fu_540_p3 = {{add_ln1169_fu_534_p2}, {3'd0}};

assign tmp_9_fu_422_p3 = {{i_reg_231}, {4'd0}};

assign tmp_cast_fu_390_p3 = {{trunc_ln1171_fu_386_p1}, {3'd0}};

assign tmp_s_fu_414_p3 = {{i_reg_231}, {3'd0}};

assign trunc_ln1168_1_fu_959_p1 = grp_fu_949_p2[17:0];

assign trunc_ln1168_fu_955_p1 = grp_fu_937_p2[17:0];

assign trunc_ln1171_fu_386_p1 = d_fu_92[3:0];

assign trunc_ln727_2_fu_684_p1 = grp_fu_678_p2[17:0];

assign trunc_ln727_3_fu_808_p1 = grp_fu_1176_p_dout0[17:0];

assign trunc_ln727_fu_561_p1 = grp_fu_555_p2[17:0];

assign zext_ln1169_1_fu_654_p1 = add_ln1169_2_fu_649_p2;

assign zext_ln1169_2_fu_902_p1 = add_ln1169_3_fu_897_p2;

assign zext_ln1169_3_fu_912_p1 = add_ln1169_4_fu_907_p2;

assign zext_ln1169_4_fu_777_p1 = add_ln1169_5_fu_772_p2;

assign zext_ln1169_fu_479_p1 = add_ln1169_1_fu_474_p2;

assign zext_ln1171_10_fu_631_p1 = h_1_reg_265;

assign zext_ln1171_11_fu_635_p1 = h_1_reg_265;

assign zext_ln1171_12_fu_644_p1 = add_ln1171_3_fu_639_p2;

assign zext_ln1171_13_fu_878_p1 = h_2_reg_323;

assign zext_ln1171_14_fu_882_p1 = h_2_reg_323;

assign zext_ln1171_15_fu_891_p1 = add_ln1171_4_fu_886_p2;

assign zext_ln1171_16_fu_754_p1 = h_3_reg_300;

assign zext_ln1171_17_fu_758_p1 = h_3_reg_300;

assign zext_ln1171_18_fu_767_p1 = add_ln1171_5_fu_762_p2;

assign zext_ln1171_7_fu_456_p1 = h_reg_243;

assign zext_ln1171_8_fu_460_p1 = h_reg_243;

assign zext_ln1171_9_fu_469_p1 = add_ln1171_fu_464_p2;

assign zext_ln1171_fu_382_p1 = d_fu_92;

assign zext_ln332_fu_377_p1 = d_fu_92;

assign zext_ln339_fu_435_p1 = add_ln339_fu_430_p2;

assign zext_ln415_2_fu_744_p1 = and_ln412_2_fu_738_p2;

assign zext_ln415_3_fu_1026_p1 = and_ln412_3_fu_1020_p2;

assign zext_ln415_4_fu_868_p1 = and_ln412_4_fu_862_p2;

assign zext_ln415_fu_621_p1 = and_ln412_fu_615_p2;

always @ (posedge ap_clk) begin
    zext_ln1171_reg_1051[9:5] <= 5'b00000;
    tmp_cast_reg_1056[2:0] <= 3'b000;
    tmp_s_reg_1082[2:0] <= 3'b000;
    tmp_10_reg_1120[2:0] <= 3'b000;
    tmp_11_reg_1129[2:0] <= 3'b000;
    tmp_12_reg_1143[2:0] <= 3'b000;
end

endmodule //master_fix_convolution2_fix
