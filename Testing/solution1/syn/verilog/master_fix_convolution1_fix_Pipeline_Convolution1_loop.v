// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution1_fix_Pipeline_Convolution1_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp1_V_11_0_reload,
        tmp1_V_10_0_reload,
        tmp1_V_9,
        tmp1_V_11_4_reload,
        tmp1_V_11_6_reload,
        tmp1_V_11_9_reload,
        tmp1_V_5_0_reload,
        tmp1_V_4_0_reload,
        tmp1_V_11_11_reload,
        tmp1_V_2_0_reload,
        tmp1_V_1_0_reload,
        tmp1_V_0_0_reload,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] tmp1_V_11_0_reload;
input  [11:0] tmp1_V_10_0_reload;
input  [11:0] tmp1_V_9;
input  [11:0] tmp1_V_11_4_reload;
input  [11:0] tmp1_V_11_6_reload;
input  [11:0] tmp1_V_11_9_reload;
input  [11:0] tmp1_V_5_0_reload;
input  [11:0] tmp1_V_4_0_reload;
input  [11:0] tmp1_V_11_11_reload;
input  [11:0] tmp1_V_2_0_reload;
input  [11:0] tmp1_V_1_0_reload;
input  [11:0] tmp1_V_0_0_reload;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [34:0] out_r_d0;

reg ap_idle;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln36_fu_652_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] firstKernel_f_V_0_0_address0;
reg    firstKernel_f_V_0_0_ce0;
wire   [18:0] firstKernel_f_V_0_0_q0;
wire   [2:0] firstKernel_f_V_0_1_address0;
reg    firstKernel_f_V_0_1_ce0;
wire   [18:0] firstKernel_f_V_0_1_q0;
wire   [2:0] firstKernel_f_V_0_2_address0;
reg    firstKernel_f_V_0_2_ce0;
wire   [19:0] firstKernel_f_V_0_2_q0;
wire   [2:0] firstKernel_f_V_1_0_address0;
reg    firstKernel_f_V_1_0_ce0;
wire   [17:0] firstKernel_f_V_1_0_q0;
wire   [2:0] firstKernel_f_V_1_1_address0;
reg    firstKernel_f_V_1_1_ce0;
wire   [17:0] firstKernel_f_V_1_1_q0;
wire   [2:0] firstKernel_f_V_1_2_address0;
reg    firstKernel_f_V_1_2_ce0;
wire   [17:0] firstKernel_f_V_1_2_q0;
wire   [2:0] firstKernel_f_V_2_0_address0;
reg    firstKernel_f_V_2_0_ce0;
wire   [17:0] firstKernel_f_V_2_0_q0;
wire   [2:0] firstKernel_f_V_2_1_address0;
reg    firstKernel_f_V_2_1_ce0;
wire   [17:0] firstKernel_f_V_2_1_q0;
wire   [2:0] firstKernel_f_V_2_2_address0;
reg    firstKernel_f_V_2_2_ce0;
wire   [17:0] firstKernel_f_V_2_2_q0;
wire   [2:0] firstKernel_f_V_3_0_address0;
reg    firstKernel_f_V_3_0_ce0;
wire   [17:0] firstKernel_f_V_3_0_q0;
wire   [2:0] firstKernel_f_V_3_1_address0;
reg    firstKernel_f_V_3_1_ce0;
wire   [18:0] firstKernel_f_V_3_1_q0;
wire   [2:0] firstKernel_f_V_3_2_address0;
reg    firstKernel_f_V_3_2_ce0;
wire   [18:0] firstKernel_f_V_3_2_q0;
wire   [2:0] firstBias_f_V_address0;
reg    firstBias_f_V_ce0;
wire   [21:0] firstBias_f_V_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln36_reg_2810;
reg   [0:0] icmp_ln36_reg_2810_pp0_iter2_reg;
reg   [0:0] icmp_ln36_reg_2810_pp0_iter3_reg;
wire   [1:0] trunc_ln9_fu_667_p1;
reg   [1:0] trunc_ln9_reg_2814;
reg   [1:0] trunc_ln9_reg_2814_pp0_iter2_reg;
reg   [1:0] trunc_ln9_reg_2814_pp0_iter3_reg;
reg   [1:0] trunc_ln9_reg_2814_pp0_iter4_reg;
reg   [1:0] trunc_ln9_reg_2814_pp0_iter5_reg;
reg   [1:0] trunc_ln9_reg_2814_pp0_iter6_reg;
wire   [0:0] icmp_ln49_fu_740_p2;
reg   [0:0] icmp_ln49_reg_2825;
reg   [0:0] icmp_ln49_reg_2825_pp0_iter2_reg;
reg   [0:0] icmp_ln49_reg_2825_pp0_iter3_reg;
reg   [0:0] icmp_ln49_reg_2825_pp0_iter4_reg;
reg   [0:0] icmp_ln49_reg_2825_pp0_iter5_reg;
reg   [0:0] icmp_ln49_reg_2825_pp0_iter6_reg;
wire   [8:0] trunc_ln123_2_fu_779_p1;
reg   [8:0] trunc_ln123_2_reg_2829;
wire   [0:0] icmp_ln76_fu_801_p2;
reg   [0:0] icmp_ln76_reg_2834;
reg   [0:0] icmp_ln76_reg_2834_pp0_iter3_reg;
reg   [0:0] icmp_ln76_reg_2834_pp0_iter4_reg;
wire   [1:0] t_fu_812_p3;
reg   [1:0] t_reg_2844;
reg   [1:0] t_reg_2844_pp0_iter3_reg;
wire   [0:0] icmp_ln76_4_fu_844_p2;
reg   [0:0] icmp_ln76_4_reg_2850;
reg   [0:0] icmp_ln76_4_reg_2850_pp0_iter3_reg;
reg   [0:0] icmp_ln76_4_reg_2850_pp0_iter4_reg;
wire   [0:0] icmp_ln76_1_fu_850_p2;
reg   [0:0] icmp_ln76_1_reg_2859;
reg   [0:0] icmp_ln76_1_reg_2859_pp0_iter3_reg;
wire   [8:0] newSecond76_fu_882_p2;
reg   [8:0] newSecond76_reg_2865;
wire   [0:0] icmp_ln77_fu_904_p2;
reg   [0:0] icmp_ln77_reg_2870;
reg   [0:0] icmp_ln77_reg_2870_pp0_iter3_reg;
wire   [8:0] newSecond78_fu_932_p2;
reg   [8:0] newSecond78_reg_2876;
wire   [8:0] add_ln78_1_fu_962_p2;
reg   [8:0] add_ln78_1_reg_2881;
wire   [8:0] newSecond_fu_992_p2;
reg   [8:0] newSecond_reg_2886;
wire   [0:0] icmp_ln82_fu_998_p2;
reg   [0:0] icmp_ln82_reg_2891;
reg   [0:0] icmp_ln82_reg_2891_pp0_iter3_reg;
reg   [0:0] icmp_ln82_reg_2891_pp0_iter4_reg;
wire   [0:0] icmp_ln107_fu_1020_p2;
reg   [0:0] icmp_ln107_reg_2899;
reg   [0:0] icmp_ln107_reg_2899_pp0_iter3_reg;
reg   [0:0] icmp_ln107_reg_2899_pp0_iter4_reg;
wire   [8:0] add_ln123_fu_1048_p2;
reg   [8:0] add_ln123_reg_2905;
reg   [8:0] add_ln123_reg_2905_pp0_iter3_reg;
reg   [8:0] add_ln123_reg_2905_pp0_iter4_reg;
wire   [63:0] idxprom87_fu_1210_p1;
reg   [63:0] idxprom87_reg_2930;
wire   [11:0] tmp1_V_11_30_fu_1316_p3;
reg   [11:0] tmp1_V_11_30_reg_2955;
wire   [11:0] tmp1_V_11_32_fu_1332_p3;
reg   [11:0] tmp1_V_11_32_reg_2962;
wire   [11:0] tmp1_V_11_34_fu_1340_p3;
reg   [11:0] tmp1_V_11_34_reg_2969;
wire   [11:0] tmp1_V_11_36_fu_1429_p3;
reg  signed [11:0] tmp1_V_11_36_reg_3032;
wire   [11:0] select_ln84_fu_1450_p3;
reg   [11:0] select_ln84_reg_3037;
reg  signed [11:0] select_ln84_reg_3037_pp0_iter6_reg;
wire   [11:0] select_ln94_fu_1653_p3;
reg  signed [11:0] select_ln94_reg_3042;
wire   [11:0] select_ln94_2_fu_1723_p3;
reg   [11:0] select_ln94_2_reg_3047;
reg  signed [11:0] select_ln94_2_reg_3047_pp0_iter6_reg;
wire   [11:0] select_ln94_4_fu_1779_p3;
reg   [11:0] select_ln94_4_reg_3052;
reg  signed [11:0] select_ln94_4_reg_3052_pp0_iter6_reg;
wire   [11:0] select_ln94_8_fu_1851_p3;
reg   [11:0] select_ln94_8_reg_3057;
reg  signed [11:0] select_ln94_8_reg_3057_pp0_iter6_reg;
wire   [11:0] select_ln110_fu_2049_p3;
reg   [11:0] select_ln110_reg_3062;
reg  signed [11:0] select_ln110_reg_3062_pp0_iter6_reg;
wire   [11:0] select_ln110_1_fu_2081_p3;
reg   [11:0] select_ln110_1_reg_3067;
reg  signed [11:0] select_ln110_1_reg_3067_pp0_iter6_reg;
wire   [11:0] select_ln110_2_fu_2113_p3;
reg   [11:0] select_ln110_2_reg_3072;
reg  signed [11:0] select_ln110_2_reg_3072_pp0_iter6_reg;
wire   [11:0] select_ln110_5_fu_2160_p3;
reg   [11:0] select_ln110_5_reg_3077;
reg  signed [11:0] select_ln110_5_reg_3077_pp0_iter6_reg;
wire   [11:0] select_ln110_8_fu_2192_p3;
reg   [11:0] select_ln110_8_reg_3082;
reg  signed [11:0] select_ln110_8_reg_3082_pp0_iter6_reg;
wire   [11:0] select_ln110_11_fu_2224_p3;
reg   [11:0] select_ln110_11_reg_3087;
reg  signed [11:0] select_ln110_11_reg_3087_pp0_iter6_reg;
wire   [11:0] add_ln123_1_fu_2243_p2;
reg   [11:0] add_ln123_1_reg_3092;
reg   [11:0] add_ln123_1_reg_3092_pp0_iter6_reg;
reg   [11:0] add_ln123_1_reg_3092_pp0_iter7_reg;
reg   [11:0] add_ln123_1_reg_3092_pp0_iter8_reg;
reg   [11:0] add_ln123_1_reg_3092_pp0_iter9_reg;
reg   [11:0] add_ln123_1_reg_3092_pp0_iter10_reg;
reg   [21:0] firstBias_f_V_load_reg_3097;
wire   [35:0] grp_fu_2348_p2;
reg   [35:0] mul_ln712_2_reg_3182;
wire   [35:0] grp_fu_2357_p2;
reg   [35:0] mul_ln712_4_reg_3192;
wire   [35:0] grp_fu_2404_p2;
reg   [35:0] mul_ln712_reg_3232;
wire   [35:0] grp_fu_2413_p2;
reg   [35:0] mul_ln712_1_reg_3237;
wire   [35:0] grp_fu_2422_p2;
reg   [35:0] mul_ln712_3_reg_3242;
wire   [35:0] grp_fu_2431_p2;
reg   [35:0] mul_ln712_5_reg_3247;
wire   [35:0] grp_fu_2440_p2;
reg   [35:0] mul_ln712_6_reg_3252;
wire   [35:0] grp_fu_2449_p2;
reg   [35:0] mul_ln712_7_reg_3257;
wire   [35:0] grp_fu_2458_p2;
reg   [35:0] mul_ln712_8_reg_3262;
wire   [35:0] grp_fu_2467_p2;
reg   [35:0] mul_ln712_9_reg_3267;
wire   [35:0] grp_fu_2476_p2;
reg   [35:0] mul_ln712_10_reg_3272;
wire   [35:0] grp_fu_2485_p2;
reg   [35:0] mul_ln712_11_reg_3277;
wire   [35:0] add_ln712_6_fu_2499_p2;
reg   [35:0] add_ln712_6_reg_3282;
wire   [34:0] trunc_ln712_4_fu_2504_p1;
reg   [34:0] trunc_ln712_4_reg_3287;
wire   [35:0] add_ln712_1_fu_2512_p2;
reg   [35:0] add_ln712_1_reg_3292;
wire   [35:0] add_ln712_3_fu_2521_p2;
reg   [35:0] add_ln712_3_reg_3297;
wire   [34:0] trunc_ln712_fu_2526_p1;
reg   [34:0] trunc_ln712_reg_3302;
wire   [34:0] trunc_ln712_1_fu_2530_p1;
reg   [34:0] trunc_ln712_1_reg_3307;
wire   [35:0] add_ln712_11_fu_2562_p2;
reg   [35:0] add_ln712_11_reg_3312;
wire   [34:0] add_ln712_13_fu_2567_p2;
reg   [34:0] add_ln712_13_reg_3317;
wire   [34:0] num_V_4_fu_2598_p3;
reg   [34:0] num_V_4_reg_3322;
reg    ap_condition_exit_pp0_iter4_stage0;
wire   [63:0] zext_ln76_1_fu_1053_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln77_fu_1057_p1;
wire   [63:0] zext_ln78_1_fu_1061_p1;
wire   [63:0] zext_ln79_1_fu_1065_p1;
wire   [63:0] zext_ln123_fu_2606_p1;
reg   [11:0] j_fu_162;
wire   [11:0] select_ln75_fu_771_p3;
wire    ap_loop_init;
reg   [11:0] id_fu_166;
wire   [11:0] id_4_fu_658_p2;
reg   [35:0] b_fu_170;
wire  signed [35:0] sext_ln63_fu_2363_p1;
reg   [15:0] d_fu_174;
wire  signed [15:0] sext_ln50_1_fu_1206_p1;
reg  signed [35:0] empty_fu_178;
wire  signed [35:0] sext_ln60_fu_2249_p1;
reg  signed [35:0] empty_38_fu_182;
wire  signed [35:0] sext_ln60_1_fu_2253_p1;
reg  signed [35:0] empty_39_fu_186;
wire  signed [35:0] sext_ln60_2_fu_1363_p1;
reg  signed [35:0] empty_40_fu_190;
wire  signed [35:0] sext_ln60_3_fu_2257_p1;
reg  signed [35:0] empty_41_fu_194;
wire  signed [35:0] sext_ln60_4_fu_1367_p1;
reg  signed [35:0] empty_42_fu_198;
wire  signed [35:0] sext_ln60_5_fu_2261_p1;
reg  signed [35:0] empty_43_fu_202;
wire  signed [35:0] sext_ln60_6_fu_2265_p1;
reg  signed [35:0] empty_44_fu_206;
wire  signed [35:0] sext_ln60_7_fu_2269_p1;
reg  signed [35:0] empty_45_fu_210;
wire  signed [35:0] sext_ln60_8_fu_2273_p1;
reg  signed [35:0] empty_46_fu_214;
wire  signed [35:0] sext_ln60_9_fu_2277_p1;
reg  signed [35:0] empty_47_fu_218;
wire  signed [35:0] sext_ln60_10_fu_2281_p1;
reg  signed [35:0] empty_48_fu_222;
wire  signed [35:0] sext_ln61_fu_2285_p1;
reg   [11:0] tmp1_V_3_fu_226;
reg   [11:0] tmp1_V_0_fu_230;
reg   [11:0] tmp1_V_0_1_fu_234;
reg   [15:0] i_fu_238;
wire  signed [15:0] sext_ln40_1_fu_736_p1;
reg   [11:0] tmp1_V_4_fu_242;
reg   [11:0] tmp1_V_1_fu_246;
reg   [11:0] tmp1_V_1_1_fu_250;
reg   [11:0] tmp1_V_5_fu_254;
reg   [11:0] tmp1_V_2_fu_258;
reg   [11:0] tmp1_V_2_1_fu_262;
reg   [11:0] tmp1_V_7_fu_266;
reg   [11:0] tmp1_V_8_fu_270;
reg   [11:0] tmp1_V_6_fu_274;
wire  signed [15:0] sext_ln40_fu_674_p0;
wire  signed [15:0] trunc_ln40_fu_678_p0;
wire  signed [16:0] sext_ln40_fu_674_p1;
wire   [16:0] add_ln40_fu_682_p2;
wire   [6:0] trunc_ln40_fu_678_p1;
wire   [6:0] xor_ln40_fu_700_p2;
wire   [7:0] p_and_t3_cast_fu_706_p3;
wire   [6:0] trunc_ln40_1_fu_696_p1;
wire   [0:0] tmp_564_fu_688_p3;
wire   [7:0] sub_ln40_fu_714_p2;
wire   [7:0] tmp_s_fu_720_p3;
wire  signed [7:0] i_6_fu_728_p3;
wire   [11:0] add_ln75_1_fu_759_p2;
wire   [0:0] icmp_ln75_fu_765_p2;
wire   [1:0] add_ln75_fu_796_p2;
wire   [1:0] xor_ln76_2_fu_807_p2;
wire  signed [15:0] trunc_ln76_fu_820_p0;
wire  signed [15:0] sext_ln76_fu_824_p0;
wire  signed [16:0] sext_ln76_fu_824_p1;
wire   [16:0] add_ln76_fu_828_p2;
wire   [9:0] tmp_566_fu_834_p4;
wire   [6:0] trunc_ln76_2_fu_864_p1;
wire   [8:0] zext_ln76_fu_856_p1;
wire   [8:0] trunc_ln76_1_fu_860_p1;
wire   [8:0] tmp_64_cast_fu_868_p3;
wire   [8:0] newFirst75_fu_876_p2;
wire   [16:0] add_ln77_fu_888_p2;
wire   [9:0] tmp_567_fu_894_p4;
wire   [6:0] trunc_ln77_1_fu_914_p1;
wire   [8:0] trunc_ln77_fu_910_p1;
wire   [8:0] tmp_65_cast_fu_918_p3;
wire   [8:0] newFirst77_fu_926_p2;
wire   [6:0] trunc_ln76_fu_820_p1;
wire   [6:0] add_ln78_fu_938_p2;
wire   [8:0] tmp_26_fu_948_p3;
wire   [8:0] zext_ln78_fu_944_p1;
wire   [8:0] sub_ln78_fu_956_p2;
wire   [6:0] add_ln79_fu_968_p2;
wire   [8:0] tmp_27_fu_978_p3;
wire   [8:0] newFirst_fu_986_p2;
wire   [8:0] zext_ln79_fu_974_p1;
wire  signed [15:0] icmp_ln82_fu_998_p0;
wire   [16:0] add_ln107_fu_1004_p2;
wire   [9:0] tmp_568_fu_1010_p4;
wire  signed [15:0] trunc_ln123_fu_1026_p0;
wire  signed [15:0] trunc_ln123_1_fu_1030_p0;
wire   [6:0] trunc_ln123_1_fu_1030_p1;
wire   [8:0] tmp_72_cast_fu_1034_p3;
wire   [8:0] trunc_ln123_fu_1026_p1;
wire   [8:0] sub_ln123_fu_1042_p2;
wire  signed [15:0] sext_ln50_fu_1144_p0;
wire  signed [15:0] trunc_ln50_fu_1148_p0;
wire  signed [16:0] sext_ln50_fu_1144_p1;
wire   [16:0] add_ln50_fu_1152_p2;
wire   [2:0] trunc_ln50_fu_1148_p1;
wire   [2:0] xor_ln50_fu_1170_p2;
wire   [3:0] p_and_t7_cast_fu_1176_p3;
wire   [2:0] trunc_ln50_1_fu_1166_p1;
wire   [0:0] tmp_565_fu_1158_p3;
wire   [3:0] sub_ln50_fu_1184_p2;
wire   [3:0] tmp_25_fu_1190_p3;
wire  signed [3:0] d_5_fu_1198_p3;
wire   [0:0] and_ln76_fu_1221_p2;
wire   [0:0] xor_ln76_fu_1225_p2;
wire   [0:0] or_ln77_fu_1236_p2;
wire   [0:0] xor_ln77_fu_1241_p2;
wire   [0:0] and_ln76_1_fu_1247_p2;
wire   [0:0] and_ln77_fu_1231_p2;
wire   [11:0] trunc_ln76_3_fu_1258_p1;
wire   [11:0] trunc_ln76_4_fu_1262_p1;
wire   [11:0] trunc_ln76_5_fu_1274_p1;
wire   [11:0] trunc_ln76_6_fu_1278_p1;
wire   [0:0] or_ln76_fu_1252_p2;
wire   [11:0] select_ln76_fu_1266_p3;
wire   [11:0] select_ln76_1_fu_1282_p3;
wire   [0:0] icmp_ln76_2_fu_1298_p2;
wire   [11:0] tmp1_V_11_45_fu_1290_p3;
wire   [0:0] icmp_ln76_3_fu_1311_p2;
wire   [11:0] tmp1_V_11_fu_1303_p3;
wire   [11:0] tmp1_V_11_31_fu_1324_p3;
wire   [0:0] icmp_ln81_fu_1411_p2;
wire   [0:0] icmp_ln81_1_fu_1424_p2;
wire   [11:0] tmp1_V_11_35_fu_1416_p3;
wire   [0:0] icmp_ln84_fu_1437_p2;
wire   [11:0] select_ln93_fu_1442_p3;
wire   [11:0] tmp1_V_11_37_fu_1458_p3;
wire   [11:0] select_ln85_fu_1481_p3;
wire   [2:0] or_ln_fu_1474_p3;
wire   [0:0] icmp_ln90_fu_1509_p2;
wire   [0:0] icmp_ln90_1_fu_1515_p2;
wire   [0:0] and_ln88_fu_1505_p2;
wire   [0:0] icmp_ln90_2_fu_1521_p2;
wire   [0:0] and_ln90_1_fu_1533_p2;
wire   [0:0] and_ln90_fu_1527_p2;
wire   [0:0] and_ln90_2_fu_1539_p2;
wire   [11:0] select_ln89_fu_1497_p3;
wire   [0:0] icmp_ln90_3_fu_1553_p2;
wire   [0:0] and_ln90_3_fu_1559_p2;
wire   [11:0] select_ln90_fu_1545_p3;
wire   [0:0] icmp_ln90_4_fu_1573_p2;
wire   [0:0] and_ln90_4_fu_1579_p2;
wire   [11:0] select_ln90_1_fu_1565_p3;
wire   [0:0] icmp_ln90_5_fu_1593_p2;
wire   [0:0] and_ln90_5_fu_1599_p2;
wire   [11:0] select_ln90_2_fu_1585_p3;
wire   [0:0] xor_ln82_fu_1613_p2;
wire   [0:0] and_ln94_fu_1618_p2;
wire   [0:0] and_ln94_3_fu_1635_p2;
wire   [0:0] and_ln94_2_fu_1629_p2;
wire   [0:0] or_ln94_fu_1641_p2;
wire   [0:0] and_ln94_1_fu_1623_p2;
wire   [0:0] or_ln94_1_fu_1647_p2;
wire   [11:0] select_ln90_3_fu_1605_p3;
wire   [0:0] xor_ln88_fu_1661_p2;
wire   [0:0] and_ln88_1_fu_1666_p2;
wire   [11:0] select_ln84_1_fu_1489_p3;
wire   [0:0] or_ln94_2_fu_1679_p2;
wire   [11:0] select_ln88_fu_1671_p3;
wire   [11:0] select_ln94_1_fu_1683_p3;
wire   [11:0] select_ln90_4_fu_1691_p3;
wire   [11:0] select_ln90_5_fu_1699_p3;
wire   [11:0] select_ln90_6_fu_1707_p3;
wire   [11:0] select_ln90_7_fu_1715_p3;
wire   [11:0] tmp1_V_11_38_fu_1466_p3;
wire   [11:0] select_ln88_1_fu_1731_p3;
wire   [11:0] select_ln94_3_fu_1739_p3;
wire   [11:0] select_ln90_8_fu_1747_p3;
wire   [11:0] select_ln90_9_fu_1755_p3;
wire   [11:0] select_ln90_10_fu_1763_p3;
wire   [11:0] select_ln90_11_fu_1771_p3;
wire   [11:0] select_ln88_2_fu_1787_p3;
wire   [11:0] select_ln94_5_fu_1795_p3;
wire   [11:0] select_ln90_12_fu_1803_p3;
wire   [11:0] select_ln90_13_fu_1811_p3;
wire   [11:0] select_ln90_14_fu_1819_p3;
wire   [11:0] select_ln90_15_fu_1827_p3;
wire   [11:0] select_ln94_6_fu_1835_p3;
wire   [11:0] select_ln94_7_fu_1843_p3;
wire   [11:0] tmp1_V_11_39_fu_1859_p3;
wire   [11:0] tmp1_V_11_41_fu_1875_p3;
wire   [11:0] select_ln109_fu_1888_p3;
wire   [3:0] tmp_fu_1911_p13;
wire   [11:0] tmp_fu_1911_p14;
wire   [11:0] tmp1_V_11_43_fu_1946_p3;
wire   [0:0] and_ln103_fu_1967_p2;
wire   [11:0] select_ln105_fu_1961_p3;
wire   [0:0] and_ln103_1_fu_1979_p2;
wire   [11:0] select_ln103_fu_1971_p3;
wire   [0:0] or_ln107_fu_1992_p2;
wire   [11:0] select_ln103_1_fu_1984_p3;
wire   [0:0] xor_ln76_1_fu_2004_p2;
wire   [0:0] and_ln107_fu_2009_p2;
wire   [0:0] and_ln110_1_fu_2020_p2;
wire   [0:0] and_ln110_3_fu_2031_p2;
wire   [0:0] and_ln110_2_fu_2025_p2;
wire   [0:0] or_ln110_fu_2037_p2;
wire   [0:0] and_ln110_fu_2014_p2;
wire   [0:0] or_ln110_1_fu_2043_p2;
wire   [11:0] select_ln107_fu_1996_p3;
wire   [11:0] select_ln84_3_fu_1938_p3;
wire   [11:0] select_ln103_2_fu_2057_p3;
wire   [11:0] select_ln103_3_fu_2065_p3;
wire   [11:0] select_ln107_1_fu_2073_p3;
wire   [11:0] tmp1_V_11_42_fu_1881_p3;
wire   [11:0] select_ln103_4_fu_2089_p3;
wire   [11:0] select_ln103_5_fu_2097_p3;
wire   [11:0] select_ln107_2_fu_2105_p3;
wire   [11:0] tmp1_V_11_44_fu_1953_p3;
wire   [11:0] select_ln103_6_fu_2121_p3;
wire   [11:0] select_ln103_7_fu_2128_p3;
wire   [11:0] select_ln107_3_fu_2136_p3;
wire   [11:0] select_ln110_3_fu_2144_p3;
wire   [11:0] select_ln110_4_fu_2152_p3;
wire   [11:0] select_ln84_2_fu_1896_p3;
wire   [11:0] select_ln107_4_fu_2168_p3;
wire   [11:0] select_ln110_6_fu_2176_p3;
wire   [11:0] select_ln110_7_fu_2184_p3;
wire   [11:0] tmp1_V_11_40_fu_1867_p3;
wire   [11:0] select_ln107_5_fu_2200_p3;
wire   [11:0] select_ln110_9_fu_2208_p3;
wire   [11:0] select_ln110_10_fu_2216_p3;
wire   [11:0] tmp_74_cast_fu_2232_p3;
wire   [11:0] trunc_ln123_3_fu_2239_p1;
wire   [35:0] add_ln712_5_fu_2494_p2;
wire   [35:0] add_ln712_fu_2508_p2;
wire   [35:0] add_ln712_2_fu_2517_p2;
wire   [35:0] add_ln712_7_fu_2534_p2;
wire   [35:0] add_ln712_8_fu_2538_p2;
wire   [34:0] trunc_ln712_3_fu_2546_p1;
wire   [34:0] trunc_ln712_2_fu_2542_p1;
wire   [35:0] add_ln712_9_fu_2550_p2;
wire   [34:0] add_ln712_10_fu_2556_p2;
wire   [35:0] add_ln712_4_fu_2572_p2;
wire   [34:0] add_ln712_12_fu_2576_p2;
wire   [35:0] num_V_3_fu_2580_p2;
wire   [0:0] tmp_569_fu_2590_p3;
wire   [34:0] add_ln10_fu_2585_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2101;
reg    ap_condition_2105;
reg    ap_condition_2109;
reg    ap_condition_888;
reg    ap_condition_898;
reg    ap_condition_904;
reg    ap_condition_908;
reg    ap_condition_2125;
reg    ap_condition_2128;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_0 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_0_address0),
    .ce0(firstKernel_f_V_0_0_ce0),
    .q0(firstKernel_f_V_0_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_1_address0),
    .ce0(firstKernel_f_V_0_1_ce0),
    .q0(firstKernel_f_V_0_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_2 #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_2_address0),
    .ce0(firstKernel_f_V_0_2_ce0),
    .q0(firstKernel_f_V_0_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_0_address0),
    .ce0(firstKernel_f_V_1_0_ce0),
    .q0(firstKernel_f_V_1_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_1_address0),
    .ce0(firstKernel_f_V_1_1_ce0),
    .q0(firstKernel_f_V_1_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_2_address0),
    .ce0(firstKernel_f_V_1_2_ce0),
    .q0(firstKernel_f_V_1_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_0_address0),
    .ce0(firstKernel_f_V_2_0_ce0),
    .q0(firstKernel_f_V_2_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_1_address0),
    .ce0(firstKernel_f_V_2_1_ce0),
    .q0(firstKernel_f_V_2_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_2_address0),
    .ce0(firstKernel_f_V_2_2_ce0),
    .q0(firstKernel_f_V_2_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_0_address0),
    .ce0(firstKernel_f_V_3_0_ce0),
    .q0(firstKernel_f_V_3_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_1_address0),
    .ce0(firstKernel_f_V_3_1_ce0),
    .q0(firstKernel_f_V_3_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_2 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_2_address0),
    .ce0(firstKernel_f_V_3_2_ce0),
    .q0(firstKernel_f_V_3_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstBias_f_V #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstBias_f_V_address0),
    .ce0(firstBias_f_V_ce0),
    .q0(firstBias_f_V_q0)
);

master_fix_mux_124_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
mux_124_12_1_1_U13(
    .din0(tmp1_V_0_1_fu_234),
    .din1(tmp1_V_1_1_fu_250),
    .din2(tmp1_V_2_1_fu_262),
    .din3(tmp1_V_0_fu_230),
    .din4(tmp1_V_1_fu_246),
    .din5(tmp1_V_2_fu_258),
    .din6(tmp1_V_3_fu_226),
    .din7(tmp1_V_4_fu_242),
    .din8(tmp1_V_5_fu_254),
    .din9(tmp1_V_11_34_reg_2969),
    .din10(tmp1_V_11_32_reg_2962),
    .din11(tmp1_V_11_30_reg_2955),
    .din12(tmp_fu_1911_p13),
    .dout(tmp_fu_1911_p14)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_39_fu_186),
    .din1(select_ln94_reg_3042),
    .ce(1'b1),
    .dout(grp_fu_2348_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_41_fu_194),
    .din1(tmp1_V_11_36_reg_3032),
    .ce(1'b1),
    .dout(grp_fu_2357_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_fu_178),
    .din1(select_ln94_2_reg_3047_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2404_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_38_fu_182),
    .din1(select_ln94_4_reg_3052_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2413_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_40_fu_190),
    .din1(select_ln84_reg_3037_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2422_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_42_fu_198),
    .din1(select_ln94_8_reg_3057_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2431_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_43_fu_202),
    .din1(select_ln110_8_reg_3082_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2440_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_44_fu_206),
    .din1(select_ln110_11_reg_3087_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2449_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_45_fu_210),
    .din1(select_ln110_5_reg_3077_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2458_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_46_fu_214),
    .din1(select_ln110_1_reg_3067_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2467_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_47_fu_218),
    .din1(select_ln110_2_reg_3072_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2476_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_48_fu_222),
    .din1(select_ln110_reg_3062_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2485_p2)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter4_stage0)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            d_fu_174 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2101)) begin
            d_fu_174 <= sext_ln50_1_fu_1206_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_238 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2109)) begin
            i_fu_238 <= 16'd0;
        end else if ((1'b1 == ap_condition_2105)) begin
            i_fu_238 <= sext_ln40_1_fu_736_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            id_fu_166 <= 12'd0;
        end else if (((icmp_ln36_fu_652_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            id_fu_166 <= id_4_fu_658_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_162 <= 12'd0;
        end else if (((icmp_ln36_fu_652_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_162 <= select_ln75_fu_771_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_1_fu_234 <= tmp1_V_0_0_reload;
        end else if ((1'b1 == ap_condition_2125)) begin
            tmp1_V_0_1_fu_234 <= tmp1_V_0_fu_230;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_fu_230 <= tmp1_V_11_11_reload;
        end else if ((1'b1 == ap_condition_2125)) begin
            tmp1_V_0_fu_230 <= tmp1_V_3_fu_226;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_1_fu_250 <= tmp1_V_1_0_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_1_1_fu_250 <= tmp1_V_1_fu_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_fu_246 <= tmp1_V_4_0_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_1_fu_246 <= tmp1_V_4_fu_242;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_1_fu_262 <= tmp1_V_2_0_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_2_1_fu_262 <= tmp1_V_2_fu_258;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_fu_258 <= tmp1_V_5_0_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_2_fu_258 <= tmp1_V_5_fu_254;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_3_fu_226 <= tmp1_V_11_9_reload;
        end else if ((1'b1 == ap_condition_2125)) begin
            tmp1_V_3_fu_226 <= tmp1_V_6_fu_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_4_fu_242 <= tmp1_V_11_6_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_4_fu_242 <= tmp1_V_7_fu_266;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_5_fu_254 <= tmp1_V_11_4_reload;
        end else if ((1'b1 == ap_condition_2128)) begin
            tmp1_V_5_fu_254 <= tmp1_V_8_fu_270;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_6_fu_274 <= tmp1_V_9;
        end else if (((icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_6_fu_274 <= tmp1_V_11_34_fu_1340_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_7_fu_266 <= tmp1_V_10_0_reload;
        end else if (((icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_7_fu_266 <= tmp1_V_11_32_fu_1332_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_8_fu_270 <= tmp1_V_11_0_reload;
        end else if (((icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_8_fu_270 <= tmp1_V_11_30_fu_1316_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln123_1_reg_3092 <= add_ln123_1_fu_2243_p2;
        add_ln123_1_reg_3092_pp0_iter10_reg <= add_ln123_1_reg_3092_pp0_iter9_reg;
        add_ln123_1_reg_3092_pp0_iter6_reg <= add_ln123_1_reg_3092;
        add_ln123_1_reg_3092_pp0_iter7_reg <= add_ln123_1_reg_3092_pp0_iter6_reg;
        add_ln123_1_reg_3092_pp0_iter8_reg <= add_ln123_1_reg_3092_pp0_iter7_reg;
        add_ln123_1_reg_3092_pp0_iter9_reg <= add_ln123_1_reg_3092_pp0_iter8_reg;
        add_ln123_reg_2905_pp0_iter3_reg <= add_ln123_reg_2905;
        add_ln123_reg_2905_pp0_iter4_reg <= add_ln123_reg_2905_pp0_iter3_reg;
        add_ln712_11_reg_3312 <= add_ln712_11_fu_2562_p2;
        add_ln712_13_reg_3317 <= add_ln712_13_fu_2567_p2;
        add_ln712_1_reg_3292 <= add_ln712_1_fu_2512_p2;
        add_ln712_3_reg_3297 <= add_ln712_3_fu_2521_p2;
        add_ln712_6_reg_3282 <= add_ln712_6_fu_2499_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln107_reg_2899_pp0_iter3_reg <= icmp_ln107_reg_2899;
        icmp_ln107_reg_2899_pp0_iter4_reg <= icmp_ln107_reg_2899_pp0_iter3_reg;
        icmp_ln36_reg_2810_pp0_iter2_reg <= icmp_ln36_reg_2810;
        icmp_ln36_reg_2810_pp0_iter3_reg <= icmp_ln36_reg_2810_pp0_iter2_reg;
        icmp_ln49_reg_2825_pp0_iter2_reg <= icmp_ln49_reg_2825;
        icmp_ln49_reg_2825_pp0_iter3_reg <= icmp_ln49_reg_2825_pp0_iter2_reg;
        icmp_ln49_reg_2825_pp0_iter4_reg <= icmp_ln49_reg_2825_pp0_iter3_reg;
        icmp_ln49_reg_2825_pp0_iter5_reg <= icmp_ln49_reg_2825_pp0_iter4_reg;
        icmp_ln49_reg_2825_pp0_iter6_reg <= icmp_ln49_reg_2825_pp0_iter5_reg;
        icmp_ln76_1_reg_2859_pp0_iter3_reg <= icmp_ln76_1_reg_2859;
        icmp_ln76_4_reg_2850_pp0_iter3_reg <= icmp_ln76_4_reg_2850;
        icmp_ln76_4_reg_2850_pp0_iter4_reg <= icmp_ln76_4_reg_2850_pp0_iter3_reg;
        icmp_ln76_reg_2834_pp0_iter3_reg <= icmp_ln76_reg_2834;
        icmp_ln76_reg_2834_pp0_iter4_reg <= icmp_ln76_reg_2834_pp0_iter3_reg;
        icmp_ln77_reg_2870_pp0_iter3_reg <= icmp_ln77_reg_2870;
        icmp_ln82_reg_2891_pp0_iter3_reg <= icmp_ln82_reg_2891;
        icmp_ln82_reg_2891_pp0_iter4_reg <= icmp_ln82_reg_2891_pp0_iter3_reg;
        mul_ln712_10_reg_3272 <= grp_fu_2476_p2;
        mul_ln712_11_reg_3277 <= grp_fu_2485_p2;
        mul_ln712_1_reg_3237 <= grp_fu_2413_p2;
        mul_ln712_2_reg_3182 <= grp_fu_2348_p2;
        mul_ln712_3_reg_3242 <= grp_fu_2422_p2;
        mul_ln712_4_reg_3192 <= grp_fu_2357_p2;
        mul_ln712_5_reg_3247 <= grp_fu_2431_p2;
        mul_ln712_6_reg_3252 <= grp_fu_2440_p2;
        mul_ln712_7_reg_3257 <= grp_fu_2449_p2;
        mul_ln712_8_reg_3262 <= grp_fu_2458_p2;
        mul_ln712_9_reg_3267 <= grp_fu_2467_p2;
        mul_ln712_reg_3232 <= grp_fu_2404_p2;
        num_V_4_reg_3322 <= num_V_4_fu_2598_p3;
        select_ln110_11_reg_3087 <= select_ln110_11_fu_2224_p3;
        select_ln110_11_reg_3087_pp0_iter6_reg <= select_ln110_11_reg_3087;
        select_ln110_1_reg_3067 <= select_ln110_1_fu_2081_p3;
        select_ln110_1_reg_3067_pp0_iter6_reg <= select_ln110_1_reg_3067;
        select_ln110_2_reg_3072 <= select_ln110_2_fu_2113_p3;
        select_ln110_2_reg_3072_pp0_iter6_reg <= select_ln110_2_reg_3072;
        select_ln110_5_reg_3077 <= select_ln110_5_fu_2160_p3;
        select_ln110_5_reg_3077_pp0_iter6_reg <= select_ln110_5_reg_3077;
        select_ln110_8_reg_3082 <= select_ln110_8_fu_2192_p3;
        select_ln110_8_reg_3082_pp0_iter6_reg <= select_ln110_8_reg_3082;
        select_ln110_reg_3062 <= select_ln110_fu_2049_p3;
        select_ln110_reg_3062_pp0_iter6_reg <= select_ln110_reg_3062;
        select_ln84_reg_3037 <= select_ln84_fu_1450_p3;
        select_ln84_reg_3037_pp0_iter6_reg <= select_ln84_reg_3037;
        select_ln94_2_reg_3047 <= select_ln94_2_fu_1723_p3;
        select_ln94_2_reg_3047_pp0_iter6_reg <= select_ln94_2_reg_3047;
        select_ln94_4_reg_3052 <= select_ln94_4_fu_1779_p3;
        select_ln94_4_reg_3052_pp0_iter6_reg <= select_ln94_4_reg_3052;
        select_ln94_8_reg_3057 <= select_ln94_8_fu_1851_p3;
        select_ln94_8_reg_3057_pp0_iter6_reg <= select_ln94_8_reg_3057;
        select_ln94_reg_3042 <= select_ln94_fu_1653_p3;
        t_reg_2844_pp0_iter3_reg <= t_reg_2844;
        tmp1_V_11_36_reg_3032 <= tmp1_V_11_36_fu_1429_p3;
        trunc_ln712_1_reg_3307 <= trunc_ln712_1_fu_2530_p1;
        trunc_ln712_4_reg_3287 <= trunc_ln712_4_fu_2504_p1;
        trunc_ln712_reg_3302 <= trunc_ln712_fu_2526_p1;
        trunc_ln9_reg_2814_pp0_iter2_reg <= trunc_ln9_reg_2814;
        trunc_ln9_reg_2814_pp0_iter3_reg <= trunc_ln9_reg_2814_pp0_iter2_reg;
        trunc_ln9_reg_2814_pp0_iter4_reg <= trunc_ln9_reg_2814_pp0_iter3_reg;
        trunc_ln9_reg_2814_pp0_iter5_reg <= trunc_ln9_reg_2814_pp0_iter4_reg;
        trunc_ln9_reg_2814_pp0_iter6_reg <= trunc_ln9_reg_2814_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln36_reg_2810 == 1'd0))) begin
        add_ln123_reg_2905 <= add_ln123_fu_1048_p2;
        add_ln78_1_reg_2881 <= add_ln78_1_fu_962_p2;
        icmp_ln107_reg_2899 <= icmp_ln107_fu_1020_p2;
        icmp_ln76_1_reg_2859 <= icmp_ln76_1_fu_850_p2;
        icmp_ln76_4_reg_2850 <= icmp_ln76_4_fu_844_p2;
        icmp_ln76_reg_2834 <= icmp_ln76_fu_801_p2;
        icmp_ln77_reg_2870 <= icmp_ln77_fu_904_p2;
        icmp_ln82_reg_2891 <= icmp_ln82_fu_998_p2;
        newSecond76_reg_2865 <= newSecond76_fu_882_p2;
        newSecond78_reg_2876 <= newSecond78_fu_932_p2;
        newSecond_reg_2886 <= newSecond_fu_992_p2;
        t_reg_2844 <= t_fu_812_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln36_reg_2810 <= icmp_ln36_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_2825_pp0_iter6_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter6_reg == 2'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        b_fu_170 <= sext_ln63_fu_2363_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_2825_pp0_iter5_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter5_reg == 2'd0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        empty_38_fu_182 <= sext_ln60_1_fu_2253_p1;
        empty_40_fu_190 <= sext_ln60_3_fu_2257_p1;
        empty_42_fu_198 <= sext_ln60_5_fu_2261_p1;
        empty_43_fu_202 <= sext_ln60_6_fu_2265_p1;
        empty_44_fu_206 <= sext_ln60_7_fu_2269_p1;
        empty_45_fu_210 <= sext_ln60_8_fu_2273_p1;
        empty_46_fu_214 <= sext_ln60_9_fu_2277_p1;
        empty_47_fu_218 <= sext_ln60_10_fu_2281_p1;
        empty_48_fu_222 <= sext_ln61_fu_2285_p1;
        empty_fu_178 <= sext_ln60_fu_2249_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_2825_pp0_iter4_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter4_reg == 2'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        empty_39_fu_186 <= sext_ln60_2_fu_1363_p1;
        empty_41_fu_194 <= sext_ln60_4_fu_1367_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_2825_pp0_iter5_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter5_reg == 2'd0))) begin
        firstBias_f_V_load_reg_3097 <= firstBias_f_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_652_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln9_fu_667_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln49_reg_2825 <= icmp_ln49_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_2825_pp0_iter3_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter3_reg == 2'd0) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0))) begin
        idxprom87_reg_2930[3 : 0] <= idxprom87_fu_1210_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0))) begin
        tmp1_V_11_30_reg_2955 <= tmp1_V_11_30_fu_1316_p3;
        tmp1_V_11_32_reg_2962 <= tmp1_V_11_32_fu_1332_p3;
        tmp1_V_11_34_reg_2969 <= tmp1_V_11_34_fu_1340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_652_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln123_2_reg_2829 <= trunc_ln123_2_fu_779_p1;
        trunc_ln9_reg_2814 <= trunc_ln9_fu_667_p1;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_652_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstBias_f_V_ce0 = 1'b1;
    end else begin
        firstBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_0_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_0_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_0_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_1_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((1'b1 == ap_condition_908)) begin
            input_r_address0 = zext_ln79_1_fu_1065_p1;
        end else if ((1'b1 == ap_condition_904)) begin
            input_r_address0 = zext_ln78_1_fu_1061_p1;
        end else if ((1'b1 == ap_condition_898)) begin
            input_r_address0 = zext_ln77_fu_1057_p1;
        end else if ((1'b1 == ap_condition_888)) begin
            input_r_address0 = zext_ln76_1_fu_1053_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln77_reg_2870 == 1'd0) & (icmp_ln76_1_reg_2859 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln77_reg_2870 == 1'd0) & (icmp_ln76_1_reg_2859 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln76_1_reg_2859 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd1) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (((icmp_ln77_reg_2870 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0)) | ((icmp_ln77_reg_2870 == 1'd1) & (icmp_ln76_1_reg_2859 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0)))))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_fu_1004_p2 = ($signed(sext_ln76_fu_824_p1) + $signed(17'd1));

assign add_ln10_fu_2585_p2 = (add_ln712_13_reg_3317 + add_ln712_12_fu_2576_p2);

assign add_ln123_1_fu_2243_p2 = (tmp_74_cast_fu_2232_p3 + trunc_ln123_3_fu_2239_p1);

assign add_ln123_fu_1048_p2 = (sub_ln123_fu_1042_p2 + trunc_ln123_2_reg_2829);

assign add_ln40_fu_682_p2 = ($signed(sext_ln40_fu_674_p1) + $signed(17'd1));

assign add_ln50_fu_1152_p2 = ($signed(sext_ln50_fu_1144_p1) + $signed(17'd1));

assign add_ln712_10_fu_2556_p2 = (trunc_ln712_3_fu_2546_p1 + trunc_ln712_2_fu_2542_p1);

assign add_ln712_11_fu_2562_p2 = (add_ln712_9_fu_2550_p2 + add_ln712_6_reg_3282);

assign add_ln712_12_fu_2576_p2 = (trunc_ln712_1_reg_3307 + trunc_ln712_reg_3302);

assign add_ln712_13_fu_2567_p2 = (add_ln712_10_fu_2556_p2 + trunc_ln712_4_reg_3287);

assign add_ln712_1_fu_2512_p2 = (add_ln712_fu_2508_p2 + mul_ln712_8_reg_3262);

assign add_ln712_2_fu_2517_p2 = (mul_ln712_9_reg_3267 + mul_ln712_11_reg_3277);

assign add_ln712_3_fu_2521_p2 = (add_ln712_2_fu_2517_p2 + mul_ln712_3_reg_3242);

assign add_ln712_4_fu_2572_p2 = (add_ln712_3_reg_3297 + add_ln712_1_reg_3292);

assign add_ln712_5_fu_2494_p2 = (mul_ln712_2_reg_3182 + b_fu_170);

assign add_ln712_6_fu_2499_p2 = (add_ln712_5_fu_2494_p2 + mul_ln712_4_reg_3192);

assign add_ln712_7_fu_2534_p2 = (mul_ln712_reg_3232 + mul_ln712_5_reg_3247);

assign add_ln712_8_fu_2538_p2 = (mul_ln712_1_reg_3237 + mul_ln712_7_reg_3257);

assign add_ln712_9_fu_2550_p2 = (add_ln712_8_fu_2538_p2 + add_ln712_7_fu_2534_p2);

assign add_ln712_fu_2508_p2 = (mul_ln712_6_reg_3252 + mul_ln712_10_reg_3272);

assign add_ln75_1_fu_759_p2 = (j_fu_162 + 12'd1);

assign add_ln75_fu_796_p2 = (trunc_ln9_reg_2814 + 2'd1);

assign add_ln76_fu_828_p2 = ($signed(sext_ln76_fu_824_p1) + $signed(17'd2));

assign add_ln77_fu_888_p2 = ($signed(sext_ln76_fu_824_p1) + $signed(17'd3));

assign add_ln78_1_fu_962_p2 = (sub_ln78_fu_956_p2 + zext_ln76_fu_856_p1);

assign add_ln78_fu_938_p2 = (trunc_ln76_fu_820_p1 + 7'd2);

assign add_ln79_fu_968_p2 = (trunc_ln76_fu_820_p1 + 7'd3);

assign and_ln103_1_fu_1979_p2 = (xor_ln88_fu_1661_p2 & icmp_ln76_4_reg_2850_pp0_iter4_reg);

assign and_ln103_fu_1967_p2 = (icmp_ln76_reg_2834_pp0_iter4_reg & icmp_ln76_4_reg_2850_pp0_iter4_reg);

assign and_ln107_fu_2009_p2 = (xor_ln76_1_fu_2004_p2 & icmp_ln107_reg_2899_pp0_iter4_reg);

assign and_ln110_1_fu_2020_p2 = (icmp_ln76_reg_2834_pp0_iter4_reg & and_ln107_fu_2009_p2);

assign and_ln110_2_fu_2025_p2 = (icmp_ln81_1_fu_1424_p2 & and_ln110_1_fu_2020_p2);

assign and_ln110_3_fu_2031_p2 = (icmp_ln81_fu_1411_p2 & and_ln110_1_fu_2020_p2);

assign and_ln110_fu_2014_p2 = (xor_ln88_fu_1661_p2 & and_ln107_fu_2009_p2);

assign and_ln76_1_fu_1247_p2 = (xor_ln77_fu_1241_p2 & icmp_ln76_1_reg_2859_pp0_iter3_reg);

assign and_ln76_fu_1221_p2 = (icmp_ln76_4_reg_2850_pp0_iter3_reg & icmp_ln76_1_reg_2859_pp0_iter3_reg);

assign and_ln77_fu_1231_p2 = (xor_ln76_fu_1225_p2 & icmp_ln77_reg_2870_pp0_iter3_reg);

assign and_ln88_1_fu_1666_p2 = (xor_ln88_fu_1661_p2 & icmp_ln82_reg_2891_pp0_iter4_reg);

assign and_ln88_fu_1505_p2 = (icmp_ln82_reg_2891_pp0_iter4_reg & icmp_ln76_reg_2834_pp0_iter4_reg);

assign and_ln90_1_fu_1533_p2 = (icmp_ln90_2_fu_1521_p2 & and_ln88_fu_1505_p2);

assign and_ln90_2_fu_1539_p2 = (and_ln90_fu_1527_p2 & and_ln90_1_fu_1533_p2);

assign and_ln90_3_fu_1559_p2 = (icmp_ln90_3_fu_1553_p2 & and_ln88_fu_1505_p2);

assign and_ln90_4_fu_1579_p2 = (icmp_ln90_4_fu_1573_p2 & and_ln88_fu_1505_p2);

assign and_ln90_5_fu_1599_p2 = (icmp_ln90_5_fu_1593_p2 & and_ln88_fu_1505_p2);

assign and_ln90_fu_1527_p2 = (icmp_ln90_fu_1509_p2 & icmp_ln90_1_fu_1515_p2);

assign and_ln94_1_fu_1623_p2 = (icmp_ln90_3_fu_1553_p2 & and_ln94_fu_1618_p2);

assign and_ln94_2_fu_1629_p2 = (icmp_ln90_4_fu_1573_p2 & and_ln94_fu_1618_p2);

assign and_ln94_3_fu_1635_p2 = (icmp_ln90_5_fu_1593_p2 & and_ln94_fu_1618_p2);

assign and_ln94_fu_1618_p2 = (xor_ln82_fu_1613_p2 & icmp_ln76_reg_2834_pp0_iter4_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2101 = ((icmp_ln49_reg_2825_pp0_iter3_reg == 1'd1) & (trunc_ln9_reg_2814_pp0_iter3_reg == 2'd0) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_2105 = ((icmp_ln36_fu_652_p2 == 1'd0) & (icmp_ln49_fu_740_p2 == 1'd0) & (trunc_ln9_fu_667_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_2109 = ((icmp_ln36_fu_652_p2 == 1'd0) & (icmp_ln49_fu_740_p2 == 1'd1) & (trunc_ln9_fu_667_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_2125 = ((trunc_ln9_reg_2814_pp0_iter3_reg == 2'd2) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_2128 = ((trunc_ln9_reg_2814_pp0_iter3_reg == 2'd0) & (icmp_ln36_reg_2810_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_888 = ((icmp_ln76_1_reg_2859 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd1) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_898 = (((icmp_ln77_reg_2870 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0)) | ((icmp_ln77_reg_2870 == 1'd1) & (icmp_ln76_1_reg_2859 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_904 = ((icmp_ln77_reg_2870 == 1'd0) & (icmp_ln76_1_reg_2859 == 1'd1) & (icmp_ln76_4_reg_2850 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_908 = ((icmp_ln77_reg_2870 == 1'd0) & (icmp_ln76_1_reg_2859 == 1'd0) & (icmp_ln36_reg_2810_pp0_iter2_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign d_5_fu_1198_p3 = ((tmp_565_fu_1158_p3[0:0] == 1'b1) ? sub_ln50_fu_1184_p2 : tmp_25_fu_1190_p3);

assign firstBias_f_V_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_0_0_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_0_1_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_0_2_address0 = idxprom87_fu_1210_p1;

assign firstKernel_f_V_1_0_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_1_1_address0 = idxprom87_fu_1210_p1;

assign firstKernel_f_V_1_2_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_2_0_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_2_1_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_2_2_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_3_0_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_3_1_address0 = idxprom87_reg_2930;

assign firstKernel_f_V_3_2_address0 = idxprom87_reg_2930;

assign i_6_fu_728_p3 = ((tmp_564_fu_688_p3[0:0] == 1'b1) ? sub_ln40_fu_714_p2 : tmp_s_fu_720_p3);

assign icmp_ln107_fu_1020_p2 = (($signed(tmp_568_fu_1010_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_652_p2 = ((id_fu_166 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_740_p2 = ((i_6_fu_728_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_765_p2 = ((add_ln75_1_fu_759_p2 < 12'd3) ? 1'b1 : 1'b0);

assign icmp_ln76_1_fu_850_p2 = ((t_fu_812_p3 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_2_fu_1298_p2 = ((t_reg_2844_pp0_iter3_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln76_3_fu_1311_p2 = ((t_reg_2844_pp0_iter3_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln76_4_fu_844_p2 = (($signed(tmp_566_fu_834_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_801_p2 = ((add_ln75_fu_796_p2 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_904_p2 = (($signed(tmp_567_fu_894_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln81_1_fu_1424_p2 = ((trunc_ln9_reg_2814_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1411_p2 = ((trunc_ln9_reg_2814_pp0_iter4_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_998_p0 = i_fu_238;

assign icmp_ln82_fu_998_p2 = (($signed(icmp_ln82_fu_998_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_1437_p2 = ((trunc_ln9_reg_2814_pp0_iter4_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln90_1_fu_1515_p2 = ((or_ln_fu_1474_p3 != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln90_2_fu_1521_p2 = ((or_ln_fu_1474_p3 != 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln90_3_fu_1553_p2 = ((or_ln_fu_1474_p3 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln90_4_fu_1573_p2 = ((or_ln_fu_1474_p3 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln90_5_fu_1593_p2 = ((or_ln_fu_1474_p3 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_1509_p2 = ((or_ln_fu_1474_p3 != 3'd6) ? 1'b1 : 1'b0);

assign id_4_fu_658_p2 = (id_fu_166 + 12'd1);

assign idxprom87_fu_1210_p1 = $unsigned(d_5_fu_1198_p3);

assign newFirst75_fu_876_p2 = (zext_ln76_fu_856_p1 - trunc_ln76_1_fu_860_p1);

assign newFirst77_fu_926_p2 = (zext_ln76_fu_856_p1 - trunc_ln77_fu_910_p1);

assign newFirst_fu_986_p2 = (tmp_27_fu_978_p3 + zext_ln76_fu_856_p1);

assign newSecond76_fu_882_p2 = (tmp_64_cast_fu_868_p3 + newFirst75_fu_876_p2);

assign newSecond78_fu_932_p2 = (tmp_65_cast_fu_918_p3 + newFirst77_fu_926_p2);

assign newSecond_fu_992_p2 = (newFirst_fu_986_p2 - zext_ln79_fu_974_p1);

assign num_V_3_fu_2580_p2 = (add_ln712_11_reg_3312 + add_ln712_4_fu_2572_p2);

assign num_V_4_fu_2598_p3 = ((tmp_569_fu_2590_p3[0:0] == 1'b1) ? 35'd0 : add_ln10_fu_2585_p2);

assign or_ln107_fu_1992_p2 = (icmp_ln76_4_reg_2850_pp0_iter4_reg | icmp_ln107_reg_2899_pp0_iter4_reg);

assign or_ln110_1_fu_2043_p2 = (or_ln110_fu_2037_p2 | and_ln110_fu_2014_p2);

assign or_ln110_fu_2037_p2 = (and_ln110_3_fu_2031_p2 | and_ln110_2_fu_2025_p2);

assign or_ln76_fu_1252_p2 = (and_ln77_fu_1231_p2 | and_ln76_1_fu_1247_p2);

assign or_ln77_fu_1236_p2 = (icmp_ln77_reg_2870_pp0_iter3_reg | and_ln76_fu_1221_p2);

assign or_ln94_1_fu_1647_p2 = (or_ln94_fu_1641_p2 | and_ln94_1_fu_1623_p2);

assign or_ln94_2_fu_1679_p2 = (icmp_ln82_reg_2891_pp0_iter4_reg | icmp_ln76_reg_2834_pp0_iter4_reg);

assign or_ln94_fu_1641_p2 = (and_ln94_3_fu_1635_p2 | and_ln94_2_fu_1629_p2);

assign or_ln_fu_1474_p3 = {{1'd1}, {trunc_ln9_reg_2814_pp0_iter4_reg}};

assign out_r_address0 = zext_ln123_fu_2606_p1;

assign out_r_d0 = num_V_4_reg_3322;

assign p_and_t3_cast_fu_706_p3 = {{1'd0}, {xor_ln40_fu_700_p2}};

assign p_and_t7_cast_fu_1176_p3 = {{1'd0}, {xor_ln50_fu_1170_p2}};

assign select_ln103_1_fu_1984_p3 = ((and_ln103_1_fu_1979_p2[0:0] == 1'b1) ? 12'd0 : select_ln103_fu_1971_p3);

assign select_ln103_2_fu_2057_p3 = ((and_ln103_fu_1967_p2[0:0] == 1'b1) ? select_ln84_3_fu_1938_p3 : 12'd0);

assign select_ln103_3_fu_2065_p3 = ((and_ln103_1_fu_1979_p2[0:0] == 1'b1) ? select_ln84_3_fu_1938_p3 : select_ln103_2_fu_2057_p3);

assign select_ln103_4_fu_2089_p3 = ((and_ln103_fu_1967_p2[0:0] == 1'b1) ? tmp1_V_11_42_fu_1881_p3 : 12'd0);

assign select_ln103_5_fu_2097_p3 = ((and_ln103_1_fu_1979_p2[0:0] == 1'b1) ? tmp1_V_11_42_fu_1881_p3 : select_ln103_4_fu_2089_p3);

assign select_ln103_6_fu_2121_p3 = ((and_ln103_fu_1967_p2[0:0] == 1'b1) ? tmp1_V_11_44_fu_1953_p3 : tmp1_V_11_34_reg_2969);

assign select_ln103_7_fu_2128_p3 = ((and_ln103_1_fu_1979_p2[0:0] == 1'b1) ? 12'd0 : select_ln103_6_fu_2121_p3);

assign select_ln103_fu_1971_p3 = ((and_ln103_fu_1967_p2[0:0] == 1'b1) ? select_ln105_fu_1961_p3 : 12'd0);

assign select_ln105_fu_1961_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_11_32_reg_2962 : tmp1_V_11_30_reg_2955);

assign select_ln107_1_fu_2073_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? select_ln103_3_fu_2065_p3 : 12'd0);

assign select_ln107_2_fu_2105_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? select_ln103_5_fu_2097_p3 : 12'd0);

assign select_ln107_3_fu_2136_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? select_ln103_7_fu_2128_p3 : 12'd0);

assign select_ln107_4_fu_2168_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? select_ln84_2_fu_1896_p3 : 12'd0);

assign select_ln107_5_fu_2200_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? tmp1_V_11_40_fu_1867_p3 : 12'd0);

assign select_ln107_fu_1996_p3 = ((or_ln107_fu_1992_p2[0:0] == 1'b1) ? select_ln103_1_fu_1984_p3 : 12'd0);

assign select_ln109_fu_1888_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_3_fu_226 : tmp1_V_4_fu_242);

assign select_ln110_10_fu_2216_p3 = ((and_ln110_2_fu_2025_p2[0:0] == 1'b1) ? tmp1_V_11_40_fu_1867_p3 : select_ln110_9_fu_2208_p3);

assign select_ln110_11_fu_2224_p3 = ((and_ln110_3_fu_2031_p2[0:0] == 1'b1) ? tmp1_V_11_40_fu_1867_p3 : select_ln110_10_fu_2216_p3);

assign select_ln110_1_fu_2081_p3 = ((or_ln110_1_fu_2043_p2[0:0] == 1'b1) ? 12'd0 : select_ln107_1_fu_2073_p3);

assign select_ln110_2_fu_2113_p3 = ((or_ln110_1_fu_2043_p2[0:0] == 1'b1) ? 12'd0 : select_ln107_2_fu_2105_p3);

assign select_ln110_3_fu_2144_p3 = ((and_ln110_fu_2014_p2[0:0] == 1'b1) ? 12'd0 : select_ln107_3_fu_2136_p3);

assign select_ln110_4_fu_2152_p3 = ((and_ln110_2_fu_2025_p2[0:0] == 1'b1) ? tmp1_V_5_fu_254 : select_ln110_3_fu_2144_p3);

assign select_ln110_5_fu_2160_p3 = ((and_ln110_3_fu_2031_p2[0:0] == 1'b1) ? tmp1_V_4_fu_242 : select_ln110_4_fu_2152_p3);

assign select_ln110_6_fu_2176_p3 = ((and_ln110_fu_2014_p2[0:0] == 1'b1) ? select_ln84_2_fu_1896_p3 : select_ln107_4_fu_2168_p3);

assign select_ln110_7_fu_2184_p3 = ((and_ln110_2_fu_2025_p2[0:0] == 1'b1) ? select_ln84_2_fu_1896_p3 : select_ln110_6_fu_2176_p3);

assign select_ln110_8_fu_2192_p3 = ((and_ln110_3_fu_2031_p2[0:0] == 1'b1) ? select_ln84_2_fu_1896_p3 : select_ln110_7_fu_2184_p3);

assign select_ln110_9_fu_2208_p3 = ((and_ln110_fu_2014_p2[0:0] == 1'b1) ? tmp1_V_11_40_fu_1867_p3 : select_ln107_5_fu_2200_p3);

assign select_ln110_fu_2049_p3 = ((or_ln110_1_fu_2043_p2[0:0] == 1'b1) ? 12'd0 : select_ln107_fu_1996_p3);

assign select_ln75_fu_771_p3 = ((icmp_ln75_fu_765_p2[0:0] == 1'b1) ? add_ln75_1_fu_759_p2 : 12'd0);

assign select_ln76_1_fu_1282_p3 = ((and_ln76_fu_1221_p2[0:0] == 1'b1) ? trunc_ln76_5_fu_1274_p1 : trunc_ln76_6_fu_1278_p1);

assign select_ln76_fu_1266_p3 = ((and_ln76_1_fu_1247_p2[0:0] == 1'b1) ? trunc_ln76_3_fu_1258_p1 : trunc_ln76_4_fu_1262_p1);

assign select_ln84_1_fu_1489_p3 = ((icmp_ln84_fu_1437_p2[0:0] == 1'b1) ? select_ln85_fu_1481_p3 : 12'd0);

assign select_ln84_2_fu_1896_p3 = ((icmp_ln84_fu_1437_p2[0:0] == 1'b1) ? select_ln109_fu_1888_p3 : 12'd0);

assign select_ln84_3_fu_1938_p3 = ((icmp_ln84_fu_1437_p2[0:0] == 1'b1) ? tmp_fu_1911_p14 : 12'd0);

assign select_ln84_fu_1450_p3 = ((icmp_ln84_fu_1437_p2[0:0] == 1'b1) ? select_ln93_fu_1442_p3 : 12'd0);

assign select_ln85_fu_1481_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_0_1_fu_234 : tmp1_V_1_1_fu_250);

assign select_ln88_1_fu_1731_p3 = ((and_ln88_1_fu_1666_p2[0:0] == 1'b1) ? tmp1_V_11_38_fu_1466_p3 : 12'd0);

assign select_ln88_2_fu_1787_p3 = ((and_ln88_1_fu_1666_p2[0:0] == 1'b1) ? 12'd0 : tmp1_V_4_fu_242);

assign select_ln88_fu_1671_p3 = ((and_ln88_1_fu_1666_p2[0:0] == 1'b1) ? select_ln84_1_fu_1489_p3 : 12'd0);

assign select_ln89_fu_1497_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_1_1_fu_250 : tmp1_V_2_1_fu_262);

assign select_ln90_10_fu_1763_p3 = ((and_ln90_4_fu_1579_p2[0:0] == 1'b1) ? tmp1_V_11_38_fu_1466_p3 : select_ln90_9_fu_1755_p3);

assign select_ln90_11_fu_1771_p3 = ((and_ln90_5_fu_1599_p2[0:0] == 1'b1) ? tmp1_V_11_38_fu_1466_p3 : select_ln90_10_fu_1763_p3);

assign select_ln90_12_fu_1803_p3 = ((and_ln90_2_fu_1539_p2[0:0] == 1'b1) ? tmp1_V_4_fu_242 : select_ln94_5_fu_1795_p3);

assign select_ln90_13_fu_1811_p3 = ((and_ln90_3_fu_1559_p2[0:0] == 1'b1) ? tmp1_V_3_fu_226 : select_ln90_12_fu_1803_p3);

assign select_ln90_14_fu_1819_p3 = ((and_ln90_4_fu_1579_p2[0:0] == 1'b1) ? tmp1_V_2_fu_258 : select_ln90_13_fu_1811_p3);

assign select_ln90_15_fu_1827_p3 = ((and_ln90_5_fu_1599_p2[0:0] == 1'b1) ? tmp1_V_1_fu_246 : select_ln90_14_fu_1819_p3);

assign select_ln90_1_fu_1565_p3 = ((and_ln90_3_fu_1559_p2[0:0] == 1'b1) ? select_ln89_fu_1497_p3 : select_ln90_fu_1545_p3);

assign select_ln90_2_fu_1585_p3 = ((and_ln90_4_fu_1579_p2[0:0] == 1'b1) ? select_ln89_fu_1497_p3 : select_ln90_1_fu_1565_p3);

assign select_ln90_3_fu_1605_p3 = ((and_ln90_5_fu_1599_p2[0:0] == 1'b1) ? select_ln89_fu_1497_p3 : select_ln90_2_fu_1585_p3);

assign select_ln90_4_fu_1691_p3 = ((and_ln90_2_fu_1539_p2[0:0] == 1'b1) ? select_ln84_1_fu_1489_p3 : select_ln94_1_fu_1683_p3);

assign select_ln90_5_fu_1699_p3 = ((and_ln90_3_fu_1559_p2[0:0] == 1'b1) ? select_ln84_1_fu_1489_p3 : select_ln90_4_fu_1691_p3);

assign select_ln90_6_fu_1707_p3 = ((and_ln90_4_fu_1579_p2[0:0] == 1'b1) ? select_ln84_1_fu_1489_p3 : select_ln90_5_fu_1699_p3);

assign select_ln90_7_fu_1715_p3 = ((and_ln90_5_fu_1599_p2[0:0] == 1'b1) ? select_ln84_1_fu_1489_p3 : select_ln90_6_fu_1707_p3);

assign select_ln90_8_fu_1747_p3 = ((and_ln90_2_fu_1539_p2[0:0] == 1'b1) ? tmp1_V_11_38_fu_1466_p3 : select_ln94_3_fu_1739_p3);

assign select_ln90_9_fu_1755_p3 = ((and_ln90_3_fu_1559_p2[0:0] == 1'b1) ? tmp1_V_11_38_fu_1466_p3 : select_ln90_8_fu_1747_p3);

assign select_ln90_fu_1545_p3 = ((and_ln90_2_fu_1539_p2[0:0] == 1'b1) ? select_ln89_fu_1497_p3 : 12'd0);

assign select_ln93_fu_1442_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_0_fu_230 : tmp1_V_1_fu_246);

assign select_ln94_1_fu_1683_p3 = ((or_ln94_2_fu_1679_p2[0:0] == 1'b1) ? select_ln88_fu_1671_p3 : 12'd0);

assign select_ln94_2_fu_1723_p3 = ((or_ln94_1_fu_1647_p2[0:0] == 1'b1) ? 12'd0 : select_ln90_7_fu_1715_p3);

assign select_ln94_3_fu_1739_p3 = ((or_ln94_2_fu_1679_p2[0:0] == 1'b1) ? select_ln88_1_fu_1731_p3 : 12'd0);

assign select_ln94_4_fu_1779_p3 = ((or_ln94_1_fu_1647_p2[0:0] == 1'b1) ? 12'd0 : select_ln90_11_fu_1771_p3);

assign select_ln94_5_fu_1795_p3 = ((or_ln94_2_fu_1679_p2[0:0] == 1'b1) ? select_ln88_2_fu_1787_p3 : 12'd0);

assign select_ln94_6_fu_1835_p3 = ((and_ln94_1_fu_1623_p2[0:0] == 1'b1) ? tmp1_V_3_fu_226 : select_ln90_15_fu_1827_p3);

assign select_ln94_7_fu_1843_p3 = ((and_ln94_2_fu_1629_p2[0:0] == 1'b1) ? tmp1_V_2_fu_258 : select_ln94_6_fu_1835_p3);

assign select_ln94_8_fu_1851_p3 = ((and_ln94_3_fu_1635_p2[0:0] == 1'b1) ? tmp1_V_1_fu_246 : select_ln94_7_fu_1843_p3);

assign select_ln94_fu_1653_p3 = ((or_ln94_1_fu_1647_p2[0:0] == 1'b1) ? 12'd0 : select_ln90_3_fu_1605_p3);

assign sext_ln40_1_fu_736_p1 = i_6_fu_728_p3;

assign sext_ln40_fu_674_p0 = i_fu_238;

assign sext_ln40_fu_674_p1 = sext_ln40_fu_674_p0;

assign sext_ln50_1_fu_1206_p1 = d_5_fu_1198_p3;

assign sext_ln50_fu_1144_p0 = d_fu_174;

assign sext_ln50_fu_1144_p1 = sext_ln50_fu_1144_p0;

assign sext_ln60_10_fu_2281_p1 = $signed(firstKernel_f_V_3_1_q0);

assign sext_ln60_1_fu_2253_p1 = $signed(firstKernel_f_V_0_1_q0);

assign sext_ln60_2_fu_1363_p1 = $signed(firstKernel_f_V_0_2_q0);

assign sext_ln60_3_fu_2257_p1 = $signed(firstKernel_f_V_1_0_q0);

assign sext_ln60_4_fu_1367_p1 = $signed(firstKernel_f_V_1_1_q0);

assign sext_ln60_5_fu_2261_p1 = $signed(firstKernel_f_V_1_2_q0);

assign sext_ln60_6_fu_2265_p1 = $signed(firstKernel_f_V_2_0_q0);

assign sext_ln60_7_fu_2269_p1 = $signed(firstKernel_f_V_2_1_q0);

assign sext_ln60_8_fu_2273_p1 = $signed(firstKernel_f_V_2_2_q0);

assign sext_ln60_9_fu_2277_p1 = $signed(firstKernel_f_V_3_0_q0);

assign sext_ln60_fu_2249_p1 = $signed(firstKernel_f_V_0_0_q0);

assign sext_ln61_fu_2285_p1 = $signed(firstKernel_f_V_3_2_q0);

assign sext_ln63_fu_2363_p1 = $signed(firstBias_f_V_load_reg_3097);

assign sext_ln76_fu_824_p0 = i_fu_238;

assign sext_ln76_fu_824_p1 = sext_ln76_fu_824_p0;

assign sub_ln123_fu_1042_p2 = (tmp_72_cast_fu_1034_p3 - trunc_ln123_fu_1026_p1);

assign sub_ln40_fu_714_p2 = (8'd0 - p_and_t3_cast_fu_706_p3);

assign sub_ln50_fu_1184_p2 = (4'd0 - p_and_t7_cast_fu_1176_p3);

assign sub_ln78_fu_956_p2 = (tmp_26_fu_948_p3 - zext_ln78_fu_944_p1);

assign t_fu_812_p3 = ((icmp_ln76_fu_801_p2[0:0] == 1'b1) ? add_ln75_fu_796_p2 : xor_ln76_2_fu_807_p2);

assign tmp1_V_11_30_fu_1316_p3 = ((icmp_ln76_3_fu_1311_p2[0:0] == 1'b1) ? tmp1_V_8_fu_270 : tmp1_V_11_fu_1303_p3);

assign tmp1_V_11_31_fu_1324_p3 = ((icmp_ln76_2_fu_1298_p2[0:0] == 1'b1) ? tmp1_V_11_45_fu_1290_p3 : tmp1_V_7_fu_266);

assign tmp1_V_11_32_fu_1332_p3 = ((icmp_ln76_3_fu_1311_p2[0:0] == 1'b1) ? tmp1_V_7_fu_266 : tmp1_V_11_31_fu_1324_p3);

assign tmp1_V_11_34_fu_1340_p3 = ((icmp_ln76_3_fu_1311_p2[0:0] == 1'b1) ? tmp1_V_11_45_fu_1290_p3 : tmp1_V_6_fu_274);

assign tmp1_V_11_35_fu_1416_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_0_fu_230 : tmp1_V_2_fu_258);

assign tmp1_V_11_36_fu_1429_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_1_fu_246 : tmp1_V_11_35_fu_1416_p3);

assign tmp1_V_11_37_fu_1458_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_0_1_fu_234 : tmp1_V_2_1_fu_262);

assign tmp1_V_11_38_fu_1466_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_1_1_fu_250 : tmp1_V_11_37_fu_1458_p3);

assign tmp1_V_11_39_fu_1859_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_3_fu_226 : tmp1_V_5_fu_254);

assign tmp1_V_11_40_fu_1867_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_4_fu_242 : tmp1_V_11_39_fu_1859_p3);

assign tmp1_V_11_41_fu_1875_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_11_34_reg_2969 : tmp1_V_11_30_reg_2955);

assign tmp1_V_11_42_fu_1881_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_11_32_reg_2962 : tmp1_V_11_41_fu_1875_p3);

assign tmp1_V_11_43_fu_1946_p3 = ((icmp_ln81_fu_1411_p2[0:0] == 1'b1) ? tmp1_V_4_fu_242 : tmp1_V_11_34_reg_2969);

assign tmp1_V_11_44_fu_1953_p3 = ((icmp_ln81_1_fu_1424_p2[0:0] == 1'b1) ? tmp1_V_5_fu_254 : tmp1_V_11_43_fu_1946_p3);

assign tmp1_V_11_45_fu_1290_p3 = ((or_ln76_fu_1252_p2[0:0] == 1'b1) ? select_ln76_fu_1266_p3 : select_ln76_1_fu_1282_p3);

assign tmp1_V_11_fu_1303_p3 = ((icmp_ln76_2_fu_1298_p2[0:0] == 1'b1) ? tmp1_V_8_fu_270 : tmp1_V_11_45_fu_1290_p3);

assign tmp_25_fu_1190_p3 = {{1'd0}, {trunc_ln50_1_fu_1166_p1}};

assign tmp_26_fu_948_p3 = {{add_ln78_fu_938_p2}, {2'd0}};

assign tmp_27_fu_978_p3 = {{add_ln79_fu_968_p2}, {2'd0}};

assign tmp_564_fu_688_p3 = add_ln40_fu_682_p2[32'd16];

assign tmp_565_fu_1158_p3 = add_ln50_fu_1152_p2[32'd16];

assign tmp_566_fu_834_p4 = {{add_ln76_fu_828_p2[16:7]}};

assign tmp_567_fu_894_p4 = {{add_ln77_fu_888_p2[16:7]}};

assign tmp_568_fu_1010_p4 = {{add_ln107_fu_1004_p2[16:7]}};

assign tmp_569_fu_2590_p3 = num_V_3_fu_2580_p2[32'd35];

assign tmp_64_cast_fu_868_p3 = {{trunc_ln76_2_fu_864_p1}, {2'd0}};

assign tmp_65_cast_fu_918_p3 = {{trunc_ln77_1_fu_914_p1}, {2'd0}};

assign tmp_72_cast_fu_1034_p3 = {{trunc_ln123_1_fu_1030_p1}, {2'd0}};

assign tmp_74_cast_fu_2232_p3 = {{add_ln123_reg_2905_pp0_iter4_reg}, {3'd0}};

assign tmp_fu_1911_p13 = {{2'd2}, {trunc_ln9_reg_2814_pp0_iter4_reg}};

assign tmp_s_fu_720_p3 = {{1'd0}, {trunc_ln40_1_fu_696_p1}};

assign trunc_ln123_1_fu_1030_p0 = i_fu_238;

assign trunc_ln123_1_fu_1030_p1 = trunc_ln123_1_fu_1030_p0[6:0];

assign trunc_ln123_2_fu_779_p1 = j_fu_162[8:0];

assign trunc_ln123_3_fu_2239_p1 = d_fu_174[11:0];

assign trunc_ln123_fu_1026_p0 = i_fu_238;

assign trunc_ln123_fu_1026_p1 = trunc_ln123_fu_1026_p0[8:0];

assign trunc_ln40_1_fu_696_p1 = add_ln40_fu_682_p2[6:0];

assign trunc_ln40_fu_678_p0 = i_fu_238;

assign trunc_ln40_fu_678_p1 = trunc_ln40_fu_678_p0[6:0];

assign trunc_ln50_1_fu_1166_p1 = add_ln50_fu_1152_p2[2:0];

assign trunc_ln50_fu_1148_p0 = d_fu_174;

assign trunc_ln50_fu_1148_p1 = trunc_ln50_fu_1148_p0[2:0];

assign trunc_ln712_1_fu_2530_p1 = add_ln712_3_fu_2521_p2[34:0];

assign trunc_ln712_2_fu_2542_p1 = add_ln712_7_fu_2534_p2[34:0];

assign trunc_ln712_3_fu_2546_p1 = add_ln712_8_fu_2538_p2[34:0];

assign trunc_ln712_4_fu_2504_p1 = add_ln712_6_fu_2499_p2[34:0];

assign trunc_ln712_fu_2526_p1 = add_ln712_1_fu_2512_p2[34:0];

assign trunc_ln76_1_fu_860_p1 = add_ln76_fu_828_p2[8:0];

assign trunc_ln76_2_fu_864_p1 = add_ln76_fu_828_p2[6:0];

assign trunc_ln76_3_fu_1258_p1 = input_r_q0[11:0];

assign trunc_ln76_4_fu_1262_p1 = input_r_q0[11:0];

assign trunc_ln76_5_fu_1274_p1 = input_r_q0[11:0];

assign trunc_ln76_6_fu_1278_p1 = input_r_q0[11:0];

assign trunc_ln76_fu_820_p0 = i_fu_238;

assign trunc_ln76_fu_820_p1 = trunc_ln76_fu_820_p0[6:0];

assign trunc_ln77_1_fu_914_p1 = add_ln77_fu_888_p2[6:0];

assign trunc_ln77_fu_910_p1 = add_ln77_fu_888_p2[8:0];

assign trunc_ln9_fu_667_p1 = j_fu_162[1:0];

assign xor_ln40_fu_700_p2 = (trunc_ln40_fu_678_p1 ^ 7'd127);

assign xor_ln50_fu_1170_p2 = (trunc_ln50_fu_1148_p1 ^ 3'd7);

assign xor_ln76_1_fu_2004_p2 = (icmp_ln76_4_reg_2850_pp0_iter4_reg ^ 1'd1);

assign xor_ln76_2_fu_807_p2 = (trunc_ln9_reg_2814 ^ 2'd2);

assign xor_ln76_fu_1225_p2 = (1'd1 ^ and_ln76_fu_1221_p2);

assign xor_ln77_fu_1241_p2 = (or_ln77_fu_1236_p2 ^ 1'd1);

assign xor_ln82_fu_1613_p2 = (icmp_ln82_reg_2891_pp0_iter4_reg ^ 1'd1);

assign xor_ln88_fu_1661_p2 = (icmp_ln76_reg_2834_pp0_iter4_reg ^ 1'd1);

assign zext_ln123_fu_2606_p1 = add_ln123_1_reg_3092_pp0_iter10_reg;

assign zext_ln76_1_fu_1053_p1 = newSecond76_reg_2865;

assign zext_ln76_fu_856_p1 = t_fu_812_p3;

assign zext_ln77_fu_1057_p1 = newSecond78_reg_2876;

assign zext_ln78_1_fu_1061_p1 = add_ln78_1_reg_2881;

assign zext_ln78_fu_944_p1 = add_ln78_fu_938_p2;

assign zext_ln79_1_fu_1065_p1 = newSecond_reg_2886;

assign zext_ln79_fu_974_p1 = add_ln79_fu_968_p2;

always @ (posedge ap_clk) begin
    idxprom87_reg_2930[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //master_fix_convolution1_fix_Pipeline_Convolution1_loop
