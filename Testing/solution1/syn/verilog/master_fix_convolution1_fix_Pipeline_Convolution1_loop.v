// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution1_fix_Pipeline_Convolution1_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp1_V_11_0_reload,
        tmp1_V_10_0_reload,
        tmp1_V_9,
        tmp1_V_11_4_reload,
        tmp1_V_11_6_reload,
        tmp1_V_11_9_reload,
        tmp1_V_5_0_reload,
        tmp1_V_4_0_reload,
        tmp1_V_11_11_reload,
        tmp1_V_2_0_reload,
        tmp1_V_1_0_reload,
        tmp1_V_0_0_reload,
        tmp2_V_11_0_reload,
        tmp2_V_10_0_reload,
        tmp2_V_9_0_reload,
        tmp2_V_8_0_reload,
        tmp2_V_7_0_reload,
        tmp2_V_6_0_reload,
        tmp2_V_5_0_reload,
        tmp2_V_3_0_reload,
        tmp2_V_2_0_reload,
        tmp2_V_1_0_reload,
        tmp2_V_0_0_reload,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] tmp1_V_11_0_reload;
input  [11:0] tmp1_V_10_0_reload;
input  [11:0] tmp1_V_9;
input  [11:0] tmp1_V_11_4_reload;
input  [11:0] tmp1_V_11_6_reload;
input  [11:0] tmp1_V_11_9_reload;
input  [11:0] tmp1_V_5_0_reload;
input  [11:0] tmp1_V_4_0_reload;
input  [11:0] tmp1_V_11_11_reload;
input  [11:0] tmp1_V_2_0_reload;
input  [11:0] tmp1_V_1_0_reload;
input  [11:0] tmp1_V_0_0_reload;
input  [11:0] tmp2_V_11_0_reload;
input  [11:0] tmp2_V_10_0_reload;
input  [11:0] tmp2_V_9_0_reload;
input  [11:0] tmp2_V_8_0_reload;
input  [11:0] tmp2_V_7_0_reload;
input  [11:0] tmp2_V_6_0_reload;
input  [11:0] tmp2_V_5_0_reload;
input  [11:0] tmp2_V_3_0_reload;
input  [11:0] tmp2_V_2_0_reload;
input  [11:0] tmp2_V_1_0_reload;
input  [11:0] tmp2_V_0_0_reload;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [34:0] out_r_d0;

reg ap_idle;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln36_fu_839_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] firstKernel_f_V_0_0_address0;
reg    firstKernel_f_V_0_0_ce0;
wire   [18:0] firstKernel_f_V_0_0_q0;
wire   [2:0] firstKernel_f_V_0_1_address0;
reg    firstKernel_f_V_0_1_ce0;
wire   [18:0] firstKernel_f_V_0_1_q0;
wire   [2:0] firstKernel_f_V_0_2_address0;
reg    firstKernel_f_V_0_2_ce0;
wire   [19:0] firstKernel_f_V_0_2_q0;
wire   [2:0] firstKernel_f_V_1_0_address0;
reg    firstKernel_f_V_1_0_ce0;
wire   [17:0] firstKernel_f_V_1_0_q0;
wire   [2:0] firstKernel_f_V_1_1_address0;
reg    firstKernel_f_V_1_1_ce0;
wire   [17:0] firstKernel_f_V_1_1_q0;
wire   [2:0] firstKernel_f_V_1_2_address0;
reg    firstKernel_f_V_1_2_ce0;
wire   [17:0] firstKernel_f_V_1_2_q0;
wire   [2:0] firstKernel_f_V_2_0_address0;
reg    firstKernel_f_V_2_0_ce0;
wire   [17:0] firstKernel_f_V_2_0_q0;
wire   [2:0] firstKernel_f_V_2_1_address0;
reg    firstKernel_f_V_2_1_ce0;
wire   [17:0] firstKernel_f_V_2_1_q0;
wire   [2:0] firstKernel_f_V_2_2_address0;
reg    firstKernel_f_V_2_2_ce0;
wire   [17:0] firstKernel_f_V_2_2_q0;
wire   [2:0] firstKernel_f_V_3_0_address0;
reg    firstKernel_f_V_3_0_ce0;
wire   [17:0] firstKernel_f_V_3_0_q0;
wire   [2:0] firstKernel_f_V_3_1_address0;
reg    firstKernel_f_V_3_1_ce0;
wire   [18:0] firstKernel_f_V_3_1_q0;
wire   [2:0] firstKernel_f_V_3_2_address0;
reg    firstKernel_f_V_3_2_ce0;
wire   [18:0] firstKernel_f_V_3_2_q0;
wire   [2:0] firstBias_f_V_address0;
reg    firstBias_f_V_ce0;
wire   [21:0] firstBias_f_V_q0;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln9_fu_854_p1;
reg   [1:0] trunc_ln9_reg_3222;
reg   [1:0] trunc_ln9_reg_3222_pp0_iter2_reg;
reg   [1:0] trunc_ln9_reg_3222_pp0_iter3_reg;
reg   [1:0] trunc_ln9_reg_3222_pp0_iter4_reg;
wire   [0:0] icmp_ln39_fu_858_p2;
reg   [0:0] icmp_ln39_reg_3233;
reg   [0:0] icmp_ln39_reg_3233_pp0_iter2_reg;
reg   [0:0] icmp_ln39_reg_3233_pp0_iter3_reg;
reg   [0:0] icmp_ln39_reg_3233_pp0_iter4_reg;
reg   [0:0] icmp_ln39_reg_3233_pp0_iter5_reg;
reg   [0:0] icmp_ln39_reg_3233_pp0_iter6_reg;
wire   [0:0] icmp_ln48_fu_933_p2;
reg   [0:0] icmp_ln48_reg_3245;
reg   [0:0] icmp_ln48_reg_3245_pp0_iter2_reg;
reg   [0:0] icmp_ln48_reg_3245_pp0_iter3_reg;
reg   [0:0] icmp_ln48_reg_3245_pp0_iter4_reg;
reg   [0:0] icmp_ln48_reg_3245_pp0_iter5_reg;
reg   [0:0] icmp_ln48_reg_3245_pp0_iter6_reg;
wire   [8:0] trunc_ln119_2_fu_972_p1;
reg   [8:0] trunc_ln119_2_reg_3249;
wire   [0:0] icmp_ln73_fu_994_p2;
reg   [0:0] icmp_ln73_reg_3254;
reg   [0:0] icmp_ln73_reg_3254_pp0_iter3_reg;
reg   [0:0] icmp_ln73_reg_3254_pp0_iter4_reg;
wire   [1:0] t_fu_1005_p3;
reg   [1:0] t_reg_3264;
reg   [1:0] t_reg_3264_pp0_iter3_reg;
wire   [0:0] icmp_ln73_4_fu_1037_p2;
reg   [0:0] icmp_ln73_4_reg_3270;
reg   [0:0] icmp_ln73_4_reg_3270_pp0_iter3_reg;
reg   [0:0] icmp_ln73_4_reg_3270_pp0_iter4_reg;
wire   [0:0] icmp_ln73_1_fu_1043_p2;
reg   [0:0] icmp_ln73_1_reg_3279;
reg   [0:0] icmp_ln73_1_reg_3279_pp0_iter3_reg;
wire   [8:0] newSecond75_fu_1075_p2;
reg   [8:0] newSecond75_reg_3285;
wire   [0:0] icmp_ln74_fu_1097_p2;
reg   [0:0] icmp_ln74_reg_3290;
reg   [0:0] icmp_ln74_reg_3290_pp0_iter3_reg;
wire   [8:0] newSecond77_fu_1125_p2;
reg   [8:0] newSecond77_reg_3296;
wire   [8:0] add_ln75_1_fu_1155_p2;
reg   [8:0] add_ln75_1_reg_3301;
wire   [8:0] newSecond_fu_1185_p2;
reg   [8:0] newSecond_reg_3306;
wire   [0:0] icmp_ln79_fu_1191_p2;
reg   [0:0] icmp_ln79_reg_3311;
reg   [0:0] icmp_ln79_reg_3311_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_3311_pp0_iter4_reg;
wire   [0:0] icmp_ln104_fu_1213_p2;
reg   [0:0] icmp_ln104_reg_3319;
reg   [0:0] icmp_ln104_reg_3319_pp0_iter3_reg;
reg   [0:0] icmp_ln104_reg_3319_pp0_iter4_reg;
wire   [8:0] add_ln119_fu_1241_p2;
reg   [8:0] add_ln119_reg_3325;
reg   [8:0] add_ln119_reg_3325_pp0_iter3_reg;
reg   [8:0] add_ln119_reg_3325_pp0_iter4_reg;
wire   [63:0] idxprom87_fu_1379_p1;
reg   [63:0] idxprom87_reg_3350;
wire   [11:0] tmp1_V_11_35_fu_1465_p3;
reg   [11:0] tmp1_V_11_35_reg_3375;
wire   [0:0] icmp_ln73_3_fu_1486_p2;
reg   [0:0] icmp_ln73_3_reg_3380;
wire   [11:0] tmp1_V_11_25_fu_1491_p3;
reg   [11:0] tmp1_V_11_25_reg_3385;
wire   [11:0] tmp1_V_11_29_fu_1507_p3;
reg   [11:0] tmp1_V_11_29_reg_3392;
wire   [11:0] select_ln78_1_fu_1656_p3;
reg   [11:0] select_ln78_1_reg_3454;
reg  signed [11:0] select_ln78_1_reg_3454_pp0_iter6_reg;
wire   [11:0] select_ln81_fu_1677_p3;
reg   [11:0] select_ln81_reg_3459;
reg  signed [11:0] select_ln81_reg_3459_pp0_iter6_reg;
wire   [11:0] select_ln91_3_fu_1912_p3;
reg   [11:0] select_ln91_3_reg_3464;
reg  signed [11:0] select_ln91_3_reg_3464_pp0_iter6_reg;
wire   [11:0] select_ln91_7_fu_1976_p3;
reg   [11:0] select_ln91_7_reg_3469;
reg  signed [11:0] select_ln91_7_reg_3469_pp0_iter6_reg;
wire   [11:0] select_ln91_11_fu_2048_p3;
reg  signed [11:0] select_ln91_11_reg_3474;
wire   [11:0] select_ln91_15_fu_2120_p3;
reg  signed [11:0] select_ln91_15_reg_3479;
wire   [11:0] select_ln104_fu_2320_p3;
reg   [11:0] select_ln104_reg_3484;
reg  signed [11:0] select_ln104_reg_3484_pp0_iter6_reg;
wire   [11:0] select_ln104_1_fu_2368_p3;
reg   [11:0] select_ln104_1_reg_3489;
reg  signed [11:0] select_ln104_1_reg_3489_pp0_iter6_reg;
wire   [11:0] select_ln104_2_fu_2416_p3;
reg   [11:0] select_ln104_2_reg_3494;
reg  signed [11:0] select_ln104_2_reg_3494_pp0_iter6_reg;
wire   [11:0] select_ln104_3_fu_2464_p3;
reg   [11:0] select_ln104_3_reg_3499;
reg  signed [11:0] select_ln104_3_reg_3499_pp0_iter6_reg;
wire   [11:0] tmp2_V_7_1_fu_2472_p3;
reg   [11:0] tmp2_V_7_1_reg_3504;
reg  signed [11:0] tmp2_V_7_1_reg_3504_pp0_iter6_reg;
wire   [11:0] select_ln104_5_fu_2480_p3;
reg   [11:0] select_ln104_5_reg_3509;
reg  signed [11:0] select_ln104_5_reg_3509_pp0_iter6_reg;
wire   [11:0] add_ln119_1_fu_2499_p2;
reg   [11:0] add_ln119_1_reg_3514;
reg   [11:0] add_ln119_1_reg_3514_pp0_iter6_reg;
reg   [11:0] add_ln119_1_reg_3514_pp0_iter7_reg;
reg   [11:0] add_ln119_1_reg_3514_pp0_iter8_reg;
reg   [11:0] add_ln119_1_reg_3514_pp0_iter9_reg;
reg   [11:0] add_ln119_1_reg_3514_pp0_iter10_reg;
reg   [21:0] firstBias_f_V_load_reg_3519;
wire   [35:0] grp_fu_2679_p2;
reg   [35:0] mul_ln712_reg_3594;
wire   [35:0] grp_fu_2688_p2;
reg   [35:0] mul_ln712_1_reg_3599;
wire   [35:0] grp_fu_2735_p2;
reg   [35:0] mul_ln712_2_reg_3654;
wire   [35:0] grp_fu_2744_p2;
reg   [35:0] mul_ln712_3_reg_3659;
wire   [35:0] grp_fu_2753_p2;
reg   [35:0] mul_ln712_4_reg_3664;
wire   [35:0] grp_fu_2762_p2;
reg   [35:0] mul_ln712_5_reg_3669;
wire   [35:0] grp_fu_2771_p2;
reg   [35:0] mul_ln712_6_reg_3674;
wire   [35:0] grp_fu_2780_p2;
reg   [35:0] mul_ln712_7_reg_3679;
wire   [35:0] grp_fu_2789_p2;
reg   [35:0] mul_ln712_8_reg_3684;
wire   [35:0] grp_fu_2798_p2;
reg   [35:0] mul_ln712_9_reg_3689;
wire   [35:0] grp_fu_2807_p2;
reg   [35:0] mul_ln712_10_reg_3694;
wire   [35:0] grp_fu_2816_p2;
reg   [35:0] mul_ln712_11_reg_3699;
wire   [35:0] add_ln712_6_fu_2830_p2;
reg   [35:0] add_ln712_6_reg_3704;
wire   [34:0] trunc_ln712_4_fu_2835_p1;
reg   [34:0] trunc_ln712_4_reg_3709;
wire   [35:0] add_ln712_1_fu_2843_p2;
reg   [35:0] add_ln712_1_reg_3714;
wire   [35:0] add_ln712_3_fu_2852_p2;
reg   [35:0] add_ln712_3_reg_3719;
wire   [34:0] trunc_ln712_fu_2857_p1;
reg   [34:0] trunc_ln712_reg_3724;
wire   [34:0] trunc_ln712_1_fu_2861_p1;
reg   [34:0] trunc_ln712_1_reg_3729;
wire   [35:0] add_ln712_12_fu_2893_p2;
reg   [35:0] add_ln712_12_reg_3734;
wire   [34:0] add_ln712_14_fu_2898_p2;
reg   [34:0] add_ln712_14_reg_3739;
wire   [34:0] num_V_3_fu_2929_p3;
reg   [34:0] num_V_3_reg_3744;
wire   [63:0] zext_ln73_1_fu_1246_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln74_fu_1250_p1;
wire   [63:0] zext_ln75_1_fu_1254_p1;
wire   [63:0] zext_ln76_1_fu_1258_p1;
wire   [63:0] zext_ln119_fu_2937_p1;
reg   [11:0] j_fu_184;
wire   [11:0] select_ln64_fu_964_p3;
wire    ap_loop_init;
reg   [11:0] id_fu_188;
wire   [11:0] id_4_fu_845_p2;
reg   [11:0] tmp2_V_0_2_fu_192;
reg   [11:0] tmp2_V_1_2_fu_196;
reg   [11:0] tmp2_V_2_2_fu_200;
reg   [11:0] tmp2_V_3_2_fu_204;
reg   [11:0] tmp2_V_5_2_fu_208;
reg   [11:0] tmp2_V_6_2_fu_212;
reg   [11:0] tmp2_V_7_2_fu_216;
reg   [11:0] tmp2_V_8_2_fu_220;
reg   [11:0] tmp2_V_9_2_fu_224;
reg   [11:0] tmp2_V_10_2_fu_228;
reg   [11:0] tmp2_V_11_2_fu_232;
reg   [11:0] tmp1_V_0_2_fu_236;
wire   [11:0] tmp1_V_0_3_fu_1630_p3;
reg   [11:0] tmp1_V_0_fu_240;
wire   [11:0] tmp1_V_3_1_fu_1622_p3;
reg   [11:0] tmp1_V_3_fu_244;
wire   [11:0] tmp1_V_6_fu_1614_p3;
reg   [11:0] tmp1_V_11_fu_248;
wire   [11:0] tmp1_V_11_30_fu_1638_p3;
reg   [11:0] tmp1_V_7_fu_252;
reg   [11:0] tmp1_V_8_fu_256;
reg   [35:0] b_fu_260;
wire  signed [35:0] sext_ln64_fu_2694_p1;
reg   [15:0] d_fu_264;
wire  signed [15:0] sext_ln49_1_fu_1375_p1;
reg  signed [35:0] kr_V_0_01126_fu_268;
wire  signed [35:0] sext_ln58_fu_1525_p1;
reg  signed [35:0] kr_V_1_01127_fu_272;
wire  signed [35:0] sext_ln58_1_fu_1529_p1;
reg  signed [35:0] kr_V_2_01128_fu_276;
wire  signed [35:0] sext_ln58_2_fu_2580_p1;
reg  signed [35:0] kr_V_3_01129_fu_280;
wire  signed [35:0] sext_ln58_3_fu_2584_p1;
reg  signed [35:0] kr_V_4_01130_fu_284;
wire  signed [35:0] sext_ln58_4_fu_2588_p1;
reg  signed [35:0] kr_V_5_01131_fu_288;
wire  signed [35:0] sext_ln58_5_fu_2592_p1;
reg  signed [35:0] kr_V_6_01132_fu_292;
wire  signed [35:0] sext_ln58_6_fu_2596_p1;
reg  signed [35:0] kr_V_7_01133_fu_296;
wire  signed [35:0] sext_ln58_7_fu_2600_p1;
reg  signed [35:0] kr_V_8_01134_fu_300;
wire  signed [35:0] sext_ln58_8_fu_2604_p1;
reg  signed [35:0] kr_V_9_01135_fu_304;
wire  signed [35:0] sext_ln58_9_fu_2608_p1;
reg  signed [35:0] kr_V_10_01136_fu_308;
wire  signed [35:0] sext_ln58_10_fu_2612_p1;
reg  signed [35:0] kr_V_11_01137_fu_312;
wire  signed [35:0] sext_ln58_11_fu_2616_p1;
reg   [15:0] i_fu_316;
wire  signed [15:0] sext_ln40_1_fu_929_p1;
reg   [11:0] tmp1_V_4_fu_320;
reg   [11:0] tmp1_V_1_fu_324;
reg   [11:0] tmp1_V_1_1_fu_328;
reg   [11:0] tmp1_V_5_fu_332;
reg   [11:0] tmp1_V_2_fu_336;
reg   [11:0] tmp1_V_2_1_fu_340;
wire  signed [15:0] sext_ln40_fu_867_p0;
wire  signed [15:0] trunc_ln40_fu_871_p0;
wire  signed [16:0] sext_ln40_fu_867_p1;
wire   [16:0] add_ln40_fu_875_p2;
wire   [6:0] trunc_ln40_fu_871_p1;
wire   [6:0] xor_ln40_fu_893_p2;
wire   [7:0] p_and_t3_cast_fu_899_p3;
wire   [6:0] trunc_ln40_1_fu_889_p1;
wire   [0:0] tmp_fu_881_p3;
wire   [7:0] sub_ln40_fu_907_p2;
wire   [7:0] tmp_s_fu_913_p3;
wire  signed [7:0] i_6_fu_921_p3;
wire   [11:0] add_ln64_fu_952_p2;
wire   [0:0] icmp_ln64_1_fu_958_p2;
wire   [1:0] add_ln72_fu_989_p2;
wire   [1:0] xor_ln73_2_fu_1000_p2;
wire  signed [15:0] trunc_ln73_fu_1013_p0;
wire  signed [15:0] sext_ln73_fu_1017_p0;
wire  signed [16:0] sext_ln73_fu_1017_p1;
wire   [16:0] add_ln73_fu_1021_p2;
wire   [9:0] tmp_565_fu_1027_p4;
wire   [6:0] trunc_ln73_2_fu_1057_p1;
wire   [8:0] zext_ln73_fu_1049_p1;
wire   [8:0] trunc_ln73_1_fu_1053_p1;
wire   [8:0] tmp_63_cast_fu_1061_p3;
wire   [8:0] newFirst74_fu_1069_p2;
wire   [16:0] add_ln74_fu_1081_p2;
wire   [9:0] tmp_566_fu_1087_p4;
wire   [6:0] trunc_ln74_1_fu_1107_p1;
wire   [8:0] trunc_ln74_fu_1103_p1;
wire   [8:0] tmp_64_cast_fu_1111_p3;
wire   [8:0] newFirst76_fu_1119_p2;
wire   [6:0] trunc_ln73_fu_1013_p1;
wire   [6:0] add_ln75_fu_1131_p2;
wire   [8:0] tmp_26_fu_1141_p3;
wire   [8:0] zext_ln75_fu_1137_p1;
wire   [8:0] sub_ln75_fu_1149_p2;
wire   [6:0] add_ln76_fu_1161_p2;
wire   [8:0] tmp_27_fu_1171_p3;
wire   [8:0] newFirst_fu_1179_p2;
wire   [8:0] zext_ln76_fu_1167_p1;
wire  signed [15:0] icmp_ln79_fu_1191_p0;
wire   [16:0] add_ln104_fu_1197_p2;
wire   [9:0] tmp_567_fu_1203_p4;
wire  signed [15:0] trunc_ln119_fu_1219_p0;
wire  signed [15:0] trunc_ln119_1_fu_1223_p0;
wire   [6:0] trunc_ln119_1_fu_1223_p1;
wire   [8:0] tmp_71_cast_fu_1227_p3;
wire   [8:0] trunc_ln119_fu_1219_p1;
wire   [8:0] sub_ln119_fu_1235_p2;
wire  signed [15:0] sext_ln49_fu_1313_p0;
wire  signed [15:0] trunc_ln49_fu_1317_p0;
wire  signed [16:0] sext_ln49_fu_1313_p1;
wire   [16:0] add_ln49_fu_1321_p2;
wire   [2:0] trunc_ln49_fu_1317_p1;
wire   [2:0] xor_ln49_fu_1339_p2;
wire   [3:0] p_and_t7_cast_fu_1345_p3;
wire   [2:0] trunc_ln49_1_fu_1335_p1;
wire   [0:0] tmp_564_fu_1327_p3;
wire   [3:0] sub_ln49_fu_1353_p2;
wire   [3:0] tmp_25_fu_1359_p3;
wire  signed [3:0] d_5_fu_1367_p3;
wire   [0:0] and_ln73_fu_1396_p2;
wire   [0:0] xor_ln73_fu_1400_p2;
wire   [0:0] or_ln74_fu_1411_p2;
wire   [0:0] xor_ln74_fu_1416_p2;
wire   [0:0] and_ln73_1_fu_1422_p2;
wire   [0:0] and_ln74_fu_1406_p2;
wire   [11:0] trunc_ln73_3_fu_1433_p1;
wire   [11:0] trunc_ln73_4_fu_1437_p1;
wire   [11:0] trunc_ln73_5_fu_1449_p1;
wire   [11:0] trunc_ln73_6_fu_1453_p1;
wire   [0:0] or_ln73_fu_1427_p2;
wire   [11:0] select_ln73_fu_1441_p3;
wire   [11:0] select_ln73_1_fu_1457_p3;
wire   [0:0] icmp_ln73_2_fu_1473_p2;
wire   [11:0] tmp1_V_11_24_fu_1478_p3;
wire   [11:0] tmp1_V_11_28_fu_1499_p3;
wire   [0:0] icmp_ln64_fu_1609_p2;
wire   [0:0] icmp_ln78_fu_1651_p2;
wire   [11:0] select_ln78_fu_1644_p3;
wire   [0:0] icmp_ln81_fu_1664_p2;
wire   [11:0] tmp2_V_3_fu_1669_p3;
wire   [11:0] select_ln80_fu_1685_p3;
wire   [11:0] tmp2_V_0_fu_1707_p3;
wire   [0:0] xor_ln85_fu_1730_p2;
wire   [0:0] and_ln85_fu_1735_p2;
wire   [2:0] or_ln_fu_1700_p3;
wire   [0:0] and_ln85_1_fu_1754_p2;
wire   [0:0] icmp_ln87_fu_1748_p2;
wire   [0:0] and_ln87_fu_1758_p2;
wire   [11:0] select_ln85_fu_1740_p3;
wire   [0:0] icmp_ln87_1_fu_1772_p2;
wire   [0:0] and_ln87_1_fu_1778_p2;
wire   [11:0] select_ln87_fu_1764_p3;
wire   [0:0] icmp_ln87_2_fu_1792_p2;
wire   [0:0] and_ln87_2_fu_1798_p2;
wire   [11:0] select_ln87_1_fu_1784_p3;
wire   [0:0] icmp_ln87_3_fu_1812_p2;
wire   [0:0] icmp_ln87_4_fu_1818_p2;
wire   [0:0] icmp_ln87_5_fu_1824_p2;
wire   [0:0] and_ln87_4_fu_1836_p2;
wire   [0:0] and_ln87_3_fu_1830_p2;
wire   [0:0] and_ln87_5_fu_1842_p2;
wire   [11:0] select_ln87_2_fu_1804_p3;
wire   [0:0] or_ln91_fu_1856_p2;
wire   [11:0] select_ln87_3_fu_1848_p3;
wire   [0:0] xor_ln79_fu_1868_p2;
wire   [0:0] and_ln91_fu_1873_p2;
wire   [0:0] and_ln91_1_fu_1878_p2;
wire   [11:0] select_ln91_fu_1860_p3;
wire   [0:0] and_ln91_2_fu_1892_p2;
wire   [11:0] select_ln91_1_fu_1884_p3;
wire   [0:0] and_ln91_3_fu_1906_p2;
wire   [11:0] select_ln91_2_fu_1898_p3;
wire   [11:0] tmp2_V_2_fu_1723_p3;
wire   [11:0] select_ln87_4_fu_1920_p3;
wire   [11:0] select_ln87_5_fu_1928_p3;
wire   [11:0] select_ln87_6_fu_1936_p3;
wire   [11:0] select_ln87_7_fu_1944_p3;
wire   [11:0] select_ln91_4_fu_1952_p3;
wire   [11:0] select_ln91_5_fu_1960_p3;
wire   [11:0] select_ln91_6_fu_1968_p3;
wire   [11:0] tmp2_V_1_fu_1692_p3;
wire   [11:0] select_ln85_1_fu_1984_p3;
wire   [11:0] select_ln87_8_fu_1992_p3;
wire   [11:0] select_ln87_9_fu_2000_p3;
wire   [11:0] select_ln87_10_fu_2008_p3;
wire   [11:0] select_ln87_11_fu_2016_p3;
wire   [11:0] select_ln91_8_fu_2024_p3;
wire   [11:0] select_ln91_9_fu_2032_p3;
wire   [11:0] select_ln91_10_fu_2040_p3;
wire   [11:0] select_ln81_1_fu_1715_p3;
wire   [11:0] select_ln85_2_fu_2056_p3;
wire   [11:0] select_ln87_12_fu_2064_p3;
wire   [11:0] select_ln87_13_fu_2072_p3;
wire   [11:0] select_ln87_14_fu_2080_p3;
wire   [11:0] select_ln87_15_fu_2088_p3;
wire   [11:0] select_ln91_12_fu_2096_p3;
wire   [11:0] select_ln91_13_fu_2104_p3;
wire   [11:0] select_ln91_14_fu_2112_p3;
wire   [11:0] select_ln94_fu_2128_p3;
wire   [11:0] tmp1_V_11_31_fu_2143_p3;
wire   [11:0] tmp2_V_6_fu_2156_p3;
wire   [3:0] tmp2_V_9_fu_2179_p13;
wire   [11:0] tmp2_V_9_fu_2179_p14;
wire   [11:0] tmp1_V_11_33_fu_2215_p3;
wire   [0:0] and_ln100_fu_2235_p2;
wire   [11:0] tmp2_V_11_fu_2230_p3;
wire   [0:0] and_ln100_1_fu_2247_p2;
wire   [11:0] select_ln100_fu_2239_p3;
wire   [0:0] xor_ln73_1_fu_2260_p2;
wire   [0:0] and_ln104_fu_2265_p2;
wire   [0:0] and_ln107_fu_2270_p2;
wire   [11:0] select_ln100_1_fu_2252_p3;
wire   [0:0] and_ln107_1_fu_2284_p2;
wire   [0:0] and_ln107_2_fu_2289_p2;
wire   [11:0] select_ln107_fu_2276_p3;
wire   [0:0] and_ln107_3_fu_2303_p2;
wire   [11:0] select_ln107_1_fu_2295_p3;
wire   [0:0] or_ln104_fu_2316_p2;
wire   [11:0] select_ln107_2_fu_2308_p3;
wire   [11:0] tmp1_V_11_36_fu_2149_p3;
wire   [11:0] select_ln100_2_fu_2328_p3;
wire   [11:0] select_ln100_3_fu_2336_p3;
wire   [11:0] select_ln107_3_fu_2344_p3;
wire   [11:0] select_ln107_4_fu_2352_p3;
wire   [11:0] select_ln107_5_fu_2360_p3;
wire   [11:0] select_ln81_3_fu_2207_p3;
wire   [11:0] select_ln100_4_fu_2376_p3;
wire   [11:0] select_ln100_5_fu_2384_p3;
wire   [11:0] select_ln107_6_fu_2392_p3;
wire   [11:0] select_ln107_7_fu_2400_p3;
wire   [11:0] select_ln107_8_fu_2408_p3;
wire   [11:0] tmp1_V_11_37_fu_2222_p3;
wire   [11:0] select_ln100_6_fu_2424_p3;
wire   [11:0] select_ln100_7_fu_2432_p3;
wire   [11:0] select_ln107_9_fu_2440_p3;
wire   [11:0] select_ln107_10_fu_2448_p3;
wire   [11:0] select_ln107_11_fu_2456_p3;
wire   [11:0] tmp2_V_7_fu_2135_p3;
wire   [11:0] select_ln81_2_fu_2164_p3;
wire   [11:0] tmp_73_cast_fu_2488_p3;
wire   [11:0] trunc_ln119_3_fu_2495_p1;
wire   [35:0] add_ln712_5_fu_2825_p2;
wire   [35:0] add_ln712_fu_2839_p2;
wire   [35:0] add_ln712_2_fu_2848_p2;
wire   [35:0] add_ln712_7_fu_2865_p2;
wire   [35:0] add_ln712_8_fu_2869_p2;
wire   [34:0] trunc_ln712_3_fu_2877_p1;
wire   [34:0] trunc_ln712_2_fu_2873_p1;
wire   [35:0] add_ln712_9_fu_2881_p2;
wire   [34:0] add_ln712_10_fu_2887_p2;
wire   [35:0] add_ln712_4_fu_2903_p2;
wire   [34:0] add_ln712_13_fu_2907_p2;
wire   [35:0] add_ln712_11_fu_2911_p2;
wire   [0:0] tmp_568_fu_2921_p3;
wire   [34:0] add_ln1548_fu_2916_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2254;
reg    ap_condition_2258;
reg    ap_condition_2262;
reg    ap_condition_1008;
reg    ap_condition_1014;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_0 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_0_address0),
    .ce0(firstKernel_f_V_0_0_ce0),
    .q0(firstKernel_f_V_0_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_1_address0),
    .ce0(firstKernel_f_V_0_1_ce0),
    .q0(firstKernel_f_V_0_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_0_2 #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_2_address0),
    .ce0(firstKernel_f_V_0_2_ce0),
    .q0(firstKernel_f_V_0_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_0_address0),
    .ce0(firstKernel_f_V_1_0_ce0),
    .q0(firstKernel_f_V_1_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_1_address0),
    .ce0(firstKernel_f_V_1_1_ce0),
    .q0(firstKernel_f_V_1_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_1_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_2_address0),
    .ce0(firstKernel_f_V_1_2_ce0),
    .q0(firstKernel_f_V_1_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_0_address0),
    .ce0(firstKernel_f_V_2_0_ce0),
    .q0(firstKernel_f_V_2_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_1_address0),
    .ce0(firstKernel_f_V_2_1_ce0),
    .q0(firstKernel_f_V_2_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_2_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_2_address0),
    .ce0(firstKernel_f_V_2_2_ce0),
    .q0(firstKernel_f_V_2_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_0_address0),
    .ce0(firstKernel_f_V_3_0_ce0),
    .q0(firstKernel_f_V_3_0_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_1_address0),
    .ce0(firstKernel_f_V_3_1_ce0),
    .q0(firstKernel_f_V_3_1_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstKernel_f_V_3_2 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_2_address0),
    .ce0(firstKernel_f_V_3_2_ce0),
    .q0(firstKernel_f_V_3_2_q0)
);

master_fix_convolution1_fix_Pipeline_Convolution1_loop_firstBias_f_V #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstBias_f_V_address0),
    .ce0(firstBias_f_V_ce0),
    .q0(firstBias_f_V_q0)
);

master_fix_mux_124_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
mux_124_12_1_1_U36(
    .din0(tmp1_V_0_3_fu_1630_p3),
    .din1(tmp1_V_1_1_fu_328),
    .din2(tmp1_V_2_1_fu_340),
    .din3(tmp1_V_3_1_fu_1622_p3),
    .din4(tmp1_V_1_fu_324),
    .din5(tmp1_V_2_fu_336),
    .din6(tmp1_V_6_fu_1614_p3),
    .din7(tmp1_V_4_fu_320),
    .din8(tmp1_V_5_fu_332),
    .din9(tmp1_V_11_30_fu_1638_p3),
    .din10(tmp1_V_11_29_reg_3392),
    .din11(tmp1_V_11_25_reg_3385),
    .din12(tmp2_V_9_fu_2179_p13),
    .dout(tmp2_V_9_fu_2179_p14)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_0_01126_fu_268),
    .din1(select_ln91_15_reg_3479),
    .ce(1'b1),
    .dout(grp_fu_2679_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_1_01127_fu_272),
    .din1(select_ln91_11_reg_3474),
    .ce(1'b1),
    .dout(grp_fu_2688_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_2_01128_fu_276),
    .din1(select_ln91_7_reg_3469_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2735_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_3_01129_fu_280),
    .din1(select_ln81_reg_3459_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2744_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_4_01130_fu_284),
    .din1(select_ln78_1_reg_3454_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2753_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_5_01131_fu_288),
    .din1(select_ln91_3_reg_3464_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2762_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_6_01132_fu_292),
    .din1(select_ln104_5_reg_3509_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2771_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_7_01133_fu_296),
    .din1(tmp2_V_7_1_reg_3504_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2780_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_8_01134_fu_300),
    .din1(select_ln104_3_reg_3499_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2789_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_9_01135_fu_304),
    .din1(select_ln104_2_reg_3494_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2798_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_10_01136_fu_308),
    .din1(select_ln104_1_reg_3489_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2807_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_11_01137_fu_312),
    .din1(select_ln104_reg_3484_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2816_p2)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            d_fu_264 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2254)) begin
            d_fu_264 <= sext_ln49_1_fu_1375_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_316 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2262)) begin
            i_fu_316 <= 16'd0;
        end else if ((1'b1 == ap_condition_2258)) begin
            i_fu_316 <= sext_ln40_1_fu_929_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            id_fu_188 <= 12'd0;
        end else if (((icmp_ln36_fu_839_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            id_fu_188 <= id_4_fu_845_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_184 <= 12'd0;
        end else if (((icmp_ln36_fu_839_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_184 <= select_ln64_fu_964_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_2_fu_236 <= tmp1_V_0_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_0_2_fu_236 <= tmp1_V_0_3_fu_1630_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_fu_240 <= tmp1_V_11_11_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_0_fu_240 <= tmp1_V_3_1_fu_1622_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_11_fu_248 <= tmp1_V_9;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_11_fu_248 <= tmp1_V_11_30_fu_1638_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_1_fu_328 <= tmp1_V_1_0_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_1_1_fu_328 <= tmp1_V_1_fu_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_fu_324 <= tmp1_V_4_0_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_1_fu_324 <= tmp1_V_4_fu_320;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_1_fu_340 <= tmp1_V_2_0_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_2_1_fu_340 <= tmp1_V_2_fu_336;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_fu_336 <= tmp1_V_5_0_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_2_fu_336 <= tmp1_V_5_fu_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_3_fu_244 <= tmp1_V_11_9_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_3_fu_244 <= tmp1_V_6_fu_1614_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_4_fu_320 <= tmp1_V_11_6_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_4_fu_320 <= tmp1_V_7_fu_252;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_5_fu_332 <= tmp1_V_11_4_reload;
        end else if (((icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_5_fu_332 <= tmp1_V_8_fu_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_7_fu_252 <= tmp1_V_10_0_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            tmp1_V_7_fu_252 <= tmp1_V_11_29_fu_1507_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_8_fu_256 <= tmp1_V_11_0_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            tmp1_V_8_fu_256 <= tmp1_V_11_25_fu_1491_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_0_2_fu_192 <= tmp2_V_0_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_0_2_fu_192 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_10_2_fu_228 <= tmp2_V_10_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_10_2_fu_228 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_11_2_fu_232 <= tmp2_V_11_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_11_2_fu_232 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_1_2_fu_196 <= tmp2_V_1_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_1_2_fu_196 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_2_2_fu_200 <= tmp2_V_2_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_2_2_fu_200 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_3_2_fu_204 <= tmp2_V_3_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_3_2_fu_204 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_5_2_fu_208 <= tmp2_V_5_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_5_2_fu_208 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_6_2_fu_212 <= tmp2_V_6_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_6_2_fu_212 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_7_2_fu_216 <= tmp2_V_7_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_7_2_fu_216 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_8_2_fu_220 <= tmp2_V_8_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_8_2_fu_220 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_9_2_fu_224 <= tmp2_V_9_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_9_2_fu_224 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln119_1_reg_3514 <= add_ln119_1_fu_2499_p2;
        add_ln119_1_reg_3514_pp0_iter10_reg <= add_ln119_1_reg_3514_pp0_iter9_reg;
        add_ln119_1_reg_3514_pp0_iter6_reg <= add_ln119_1_reg_3514;
        add_ln119_1_reg_3514_pp0_iter7_reg <= add_ln119_1_reg_3514_pp0_iter6_reg;
        add_ln119_1_reg_3514_pp0_iter8_reg <= add_ln119_1_reg_3514_pp0_iter7_reg;
        add_ln119_1_reg_3514_pp0_iter9_reg <= add_ln119_1_reg_3514_pp0_iter8_reg;
        add_ln119_reg_3325 <= add_ln119_fu_1241_p2;
        add_ln119_reg_3325_pp0_iter3_reg <= add_ln119_reg_3325;
        add_ln119_reg_3325_pp0_iter4_reg <= add_ln119_reg_3325_pp0_iter3_reg;
        add_ln712_12_reg_3734 <= add_ln712_12_fu_2893_p2;
        add_ln712_14_reg_3739 <= add_ln712_14_fu_2898_p2;
        add_ln712_1_reg_3714 <= add_ln712_1_fu_2843_p2;
        add_ln712_3_reg_3719 <= add_ln712_3_fu_2852_p2;
        add_ln712_6_reg_3704 <= add_ln712_6_fu_2830_p2;
        add_ln75_1_reg_3301 <= add_ln75_1_fu_1155_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln104_reg_3319 <= icmp_ln104_fu_1213_p2;
        icmp_ln104_reg_3319_pp0_iter3_reg <= icmp_ln104_reg_3319;
        icmp_ln104_reg_3319_pp0_iter4_reg <= icmp_ln104_reg_3319_pp0_iter3_reg;
        icmp_ln39_reg_3233_pp0_iter2_reg <= icmp_ln39_reg_3233;
        icmp_ln39_reg_3233_pp0_iter3_reg <= icmp_ln39_reg_3233_pp0_iter2_reg;
        icmp_ln39_reg_3233_pp0_iter4_reg <= icmp_ln39_reg_3233_pp0_iter3_reg;
        icmp_ln39_reg_3233_pp0_iter5_reg <= icmp_ln39_reg_3233_pp0_iter4_reg;
        icmp_ln39_reg_3233_pp0_iter6_reg <= icmp_ln39_reg_3233_pp0_iter5_reg;
        icmp_ln48_reg_3245_pp0_iter2_reg <= icmp_ln48_reg_3245;
        icmp_ln48_reg_3245_pp0_iter3_reg <= icmp_ln48_reg_3245_pp0_iter2_reg;
        icmp_ln48_reg_3245_pp0_iter4_reg <= icmp_ln48_reg_3245_pp0_iter3_reg;
        icmp_ln48_reg_3245_pp0_iter5_reg <= icmp_ln48_reg_3245_pp0_iter4_reg;
        icmp_ln48_reg_3245_pp0_iter6_reg <= icmp_ln48_reg_3245_pp0_iter5_reg;
        icmp_ln73_1_reg_3279 <= icmp_ln73_1_fu_1043_p2;
        icmp_ln73_1_reg_3279_pp0_iter3_reg <= icmp_ln73_1_reg_3279;
        icmp_ln73_3_reg_3380 <= icmp_ln73_3_fu_1486_p2;
        icmp_ln73_4_reg_3270 <= icmp_ln73_4_fu_1037_p2;
        icmp_ln73_4_reg_3270_pp0_iter3_reg <= icmp_ln73_4_reg_3270;
        icmp_ln73_4_reg_3270_pp0_iter4_reg <= icmp_ln73_4_reg_3270_pp0_iter3_reg;
        icmp_ln73_reg_3254 <= icmp_ln73_fu_994_p2;
        icmp_ln73_reg_3254_pp0_iter3_reg <= icmp_ln73_reg_3254;
        icmp_ln73_reg_3254_pp0_iter4_reg <= icmp_ln73_reg_3254_pp0_iter3_reg;
        icmp_ln74_reg_3290 <= icmp_ln74_fu_1097_p2;
        icmp_ln74_reg_3290_pp0_iter3_reg <= icmp_ln74_reg_3290;
        icmp_ln79_reg_3311 <= icmp_ln79_fu_1191_p2;
        icmp_ln79_reg_3311_pp0_iter3_reg <= icmp_ln79_reg_3311;
        icmp_ln79_reg_3311_pp0_iter4_reg <= icmp_ln79_reg_3311_pp0_iter3_reg;
        mul_ln712_10_reg_3694 <= grp_fu_2807_p2;
        mul_ln712_11_reg_3699 <= grp_fu_2816_p2;
        mul_ln712_1_reg_3599 <= grp_fu_2688_p2;
        mul_ln712_2_reg_3654 <= grp_fu_2735_p2;
        mul_ln712_3_reg_3659 <= grp_fu_2744_p2;
        mul_ln712_4_reg_3664 <= grp_fu_2753_p2;
        mul_ln712_5_reg_3669 <= grp_fu_2762_p2;
        mul_ln712_6_reg_3674 <= grp_fu_2771_p2;
        mul_ln712_7_reg_3679 <= grp_fu_2780_p2;
        mul_ln712_8_reg_3684 <= grp_fu_2789_p2;
        mul_ln712_9_reg_3689 <= grp_fu_2798_p2;
        mul_ln712_reg_3594 <= grp_fu_2679_p2;
        newSecond75_reg_3285 <= newSecond75_fu_1075_p2;
        newSecond77_reg_3296 <= newSecond77_fu_1125_p2;
        newSecond_reg_3306 <= newSecond_fu_1185_p2;
        num_V_3_reg_3744 <= num_V_3_fu_2929_p3;
        select_ln104_1_reg_3489 <= select_ln104_1_fu_2368_p3;
        select_ln104_1_reg_3489_pp0_iter6_reg <= select_ln104_1_reg_3489;
        select_ln104_2_reg_3494 <= select_ln104_2_fu_2416_p3;
        select_ln104_2_reg_3494_pp0_iter6_reg <= select_ln104_2_reg_3494;
        select_ln104_3_reg_3499 <= select_ln104_3_fu_2464_p3;
        select_ln104_3_reg_3499_pp0_iter6_reg <= select_ln104_3_reg_3499;
        select_ln104_5_reg_3509 <= select_ln104_5_fu_2480_p3;
        select_ln104_5_reg_3509_pp0_iter6_reg <= select_ln104_5_reg_3509;
        select_ln104_reg_3484 <= select_ln104_fu_2320_p3;
        select_ln104_reg_3484_pp0_iter6_reg <= select_ln104_reg_3484;
        select_ln78_1_reg_3454 <= select_ln78_1_fu_1656_p3;
        select_ln78_1_reg_3454_pp0_iter6_reg <= select_ln78_1_reg_3454;
        select_ln81_reg_3459 <= select_ln81_fu_1677_p3;
        select_ln81_reg_3459_pp0_iter6_reg <= select_ln81_reg_3459;
        select_ln91_11_reg_3474 <= select_ln91_11_fu_2048_p3;
        select_ln91_15_reg_3479 <= select_ln91_15_fu_2120_p3;
        select_ln91_3_reg_3464 <= select_ln91_3_fu_1912_p3;
        select_ln91_3_reg_3464_pp0_iter6_reg <= select_ln91_3_reg_3464;
        select_ln91_7_reg_3469 <= select_ln91_7_fu_1976_p3;
        select_ln91_7_reg_3469_pp0_iter6_reg <= select_ln91_7_reg_3469;
        t_reg_3264 <= t_fu_1005_p3;
        t_reg_3264_pp0_iter3_reg <= t_reg_3264;
        tmp1_V_11_25_reg_3385 <= tmp1_V_11_25_fu_1491_p3;
        tmp1_V_11_29_reg_3392 <= tmp1_V_11_29_fu_1507_p3;
        tmp1_V_11_35_reg_3375 <= tmp1_V_11_35_fu_1465_p3;
        tmp2_V_7_1_reg_3504 <= tmp2_V_7_1_fu_2472_p3;
        tmp2_V_7_1_reg_3504_pp0_iter6_reg <= tmp2_V_7_1_reg_3504;
        trunc_ln712_1_reg_3729 <= trunc_ln712_1_fu_2861_p1;
        trunc_ln712_4_reg_3709 <= trunc_ln712_4_fu_2835_p1;
        trunc_ln712_reg_3724 <= trunc_ln712_fu_2857_p1;
        trunc_ln9_reg_3222_pp0_iter2_reg <= trunc_ln9_reg_3222;
        trunc_ln9_reg_3222_pp0_iter3_reg <= trunc_ln9_reg_3222_pp0_iter2_reg;
        trunc_ln9_reg_3222_pp0_iter4_reg <= trunc_ln9_reg_3222_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_3245_pp0_iter6_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        b_fu_260 <= sext_ln64_fu_2694_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_3245_pp0_iter5_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter5_reg == 1'd1))) begin
        firstBias_f_V_load_reg_3519 <= firstBias_f_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_839_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln39_reg_3233 <= icmp_ln39_fu_858_p2;
        trunc_ln119_2_reg_3249 <= trunc_ln119_2_fu_972_p1;
        trunc_ln9_reg_3222 <= trunc_ln9_fu_854_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_839_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln39_fu_858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln48_reg_3245 <= icmp_ln48_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_3245_pp0_iter3_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1))) begin
        idxprom87_reg_3350[3 : 0] <= idxprom87_fu_1379_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_3245_pp0_iter4_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        kr_V_0_01126_fu_268 <= sext_ln58_fu_1525_p1;
        kr_V_1_01127_fu_272 <= sext_ln58_1_fu_1529_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln48_reg_3245_pp0_iter5_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        kr_V_10_01136_fu_308 <= sext_ln58_10_fu_2612_p1;
        kr_V_11_01137_fu_312 <= sext_ln58_11_fu_2616_p1;
        kr_V_2_01128_fu_276 <= sext_ln58_2_fu_2580_p1;
        kr_V_3_01129_fu_280 <= sext_ln58_3_fu_2584_p1;
        kr_V_4_01130_fu_284 <= sext_ln58_4_fu_2588_p1;
        kr_V_5_01131_fu_288 <= sext_ln58_5_fu_2592_p1;
        kr_V_6_01132_fu_292 <= sext_ln58_6_fu_2596_p1;
        kr_V_7_01133_fu_296 <= sext_ln58_7_fu_2600_p1;
        kr_V_8_01134_fu_300 <= sext_ln58_8_fu_2604_p1;
        kr_V_9_01135_fu_304 <= sext_ln58_9_fu_2608_p1;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_839_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstBias_f_V_ce0 = 1'b1;
    end else begin
        firstBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_0_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_0_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_0_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln74_reg_3290 == 1'd0) & (icmp_ln73_1_reg_3279 == 1'd0))) begin
            input_r_address0 = zext_ln76_1_fu_1258_p1;
        end else if ((1'b1 == ap_condition_1014)) begin
            input_r_address0 = zext_ln75_1_fu_1254_p1;
        end else if ((1'b1 == ap_condition_1008)) begin
            input_r_address0 = zext_ln74_fu_1250_p1;
        end else if (((icmp_ln73_1_reg_3279 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd1))) begin
            input_r_address0 = zext_ln73_1_fu_1246_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_1_reg_3279 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (((icmp_ln74_reg_3290 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd0)) | ((icmp_ln74_reg_3290 == 1'd1) & (icmp_ln73_1_reg_3279 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln74_reg_3290 == 1'd0) & (icmp_ln73_1_reg_3279 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln74_reg_3290 == 1'd0) & (icmp_ln73_1_reg_3279 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_1197_p2 = ($signed(sext_ln73_fu_1017_p1) + $signed(17'd1));

assign add_ln119_1_fu_2499_p2 = (tmp_73_cast_fu_2488_p3 + trunc_ln119_3_fu_2495_p1);

assign add_ln119_fu_1241_p2 = (sub_ln119_fu_1235_p2 + trunc_ln119_2_reg_3249);

assign add_ln1548_fu_2916_p2 = (add_ln712_14_reg_3739 + add_ln712_13_fu_2907_p2);

assign add_ln40_fu_875_p2 = ($signed(sext_ln40_fu_867_p1) + $signed(17'd1));

assign add_ln49_fu_1321_p2 = ($signed(sext_ln49_fu_1313_p1) + $signed(17'd1));

assign add_ln64_fu_952_p2 = (j_fu_184 + 12'd1);

assign add_ln712_10_fu_2887_p2 = (trunc_ln712_3_fu_2877_p1 + trunc_ln712_2_fu_2873_p1);

assign add_ln712_11_fu_2911_p2 = (add_ln712_12_reg_3734 + add_ln712_4_fu_2903_p2);

assign add_ln712_12_fu_2893_p2 = (add_ln712_9_fu_2881_p2 + add_ln712_6_reg_3704);

assign add_ln712_13_fu_2907_p2 = (trunc_ln712_1_reg_3729 + trunc_ln712_reg_3724);

assign add_ln712_14_fu_2898_p2 = (add_ln712_10_fu_2887_p2 + trunc_ln712_4_reg_3709);

assign add_ln712_1_fu_2843_p2 = (add_ln712_fu_2839_p2 + mul_ln712_9_reg_3689);

assign add_ln712_2_fu_2848_p2 = (mul_ln712_7_reg_3679 + mul_ln712_6_reg_3674);

assign add_ln712_3_fu_2852_p2 = (add_ln712_2_fu_2848_p2 + mul_ln712_5_reg_3669);

assign add_ln712_4_fu_2903_p2 = (add_ln712_3_reg_3719 + add_ln712_1_reg_3714);

assign add_ln712_5_fu_2825_p2 = (mul_ln712_1_reg_3599 + b_fu_260);

assign add_ln712_6_fu_2830_p2 = (add_ln712_5_fu_2825_p2 + mul_ln712_reg_3594);

assign add_ln712_7_fu_2865_p2 = (mul_ln712_2_reg_3654 + mul_ln712_4_reg_3664);

assign add_ln712_8_fu_2869_p2 = (mul_ln712_3_reg_3659 + mul_ln712_11_reg_3699);

assign add_ln712_9_fu_2881_p2 = (add_ln712_8_fu_2869_p2 + add_ln712_7_fu_2865_p2);

assign add_ln712_fu_2839_p2 = (mul_ln712_10_reg_3694 + mul_ln712_8_reg_3684);

assign add_ln72_fu_989_p2 = (trunc_ln9_reg_3222 + 2'd1);

assign add_ln73_fu_1021_p2 = ($signed(sext_ln73_fu_1017_p1) + $signed(17'd2));

assign add_ln74_fu_1081_p2 = ($signed(sext_ln73_fu_1017_p1) + $signed(17'd3));

assign add_ln75_1_fu_1155_p2 = (sub_ln75_fu_1149_p2 + zext_ln73_fu_1049_p1);

assign add_ln75_fu_1131_p2 = (trunc_ln73_fu_1013_p1 + 7'd2);

assign add_ln76_fu_1161_p2 = (trunc_ln73_fu_1013_p1 + 7'd3);

assign and_ln100_1_fu_2247_p2 = (xor_ln85_fu_1730_p2 & icmp_ln73_4_reg_3270_pp0_iter4_reg);

assign and_ln100_fu_2235_p2 = (icmp_ln73_reg_3254_pp0_iter4_reg & icmp_ln73_4_reg_3270_pp0_iter4_reg);

assign and_ln104_fu_2265_p2 = (xor_ln73_1_fu_2260_p2 & icmp_ln104_reg_3319_pp0_iter4_reg);

assign and_ln107_1_fu_2284_p2 = (icmp_ln73_reg_3254_pp0_iter4_reg & and_ln104_fu_2265_p2);

assign and_ln107_2_fu_2289_p2 = (icmp_ln78_fu_1651_p2 & and_ln107_1_fu_2284_p2);

assign and_ln107_3_fu_2303_p2 = (icmp_ln39_reg_3233_pp0_iter4_reg & and_ln107_1_fu_2284_p2);

assign and_ln107_fu_2270_p2 = (xor_ln85_fu_1730_p2 & and_ln104_fu_2265_p2);

assign and_ln73_1_fu_1422_p2 = (xor_ln74_fu_1416_p2 & icmp_ln73_1_reg_3279_pp0_iter3_reg);

assign and_ln73_fu_1396_p2 = (icmp_ln73_4_reg_3270_pp0_iter3_reg & icmp_ln73_1_reg_3279_pp0_iter3_reg);

assign and_ln74_fu_1406_p2 = (xor_ln73_fu_1400_p2 & icmp_ln74_reg_3290_pp0_iter3_reg);

assign and_ln85_1_fu_1754_p2 = (icmp_ln79_reg_3311_pp0_iter4_reg & icmp_ln73_reg_3254_pp0_iter4_reg);

assign and_ln85_fu_1735_p2 = (xor_ln85_fu_1730_p2 & icmp_ln79_reg_3311_pp0_iter4_reg);

assign and_ln87_1_fu_1778_p2 = (icmp_ln87_1_fu_1772_p2 & and_ln85_1_fu_1754_p2);

assign and_ln87_2_fu_1798_p2 = (icmp_ln87_2_fu_1792_p2 & and_ln85_1_fu_1754_p2);

assign and_ln87_3_fu_1830_p2 = (icmp_ln87_4_fu_1818_p2 & icmp_ln87_3_fu_1812_p2);

assign and_ln87_4_fu_1836_p2 = (icmp_ln87_5_fu_1824_p2 & and_ln85_1_fu_1754_p2);

assign and_ln87_5_fu_1842_p2 = (and_ln87_4_fu_1836_p2 & and_ln87_3_fu_1830_p2);

assign and_ln87_fu_1758_p2 = (icmp_ln87_fu_1748_p2 & and_ln85_1_fu_1754_p2);

assign and_ln91_1_fu_1878_p2 = (icmp_ln87_fu_1748_p2 & and_ln91_fu_1873_p2);

assign and_ln91_2_fu_1892_p2 = (icmp_ln87_1_fu_1772_p2 & and_ln91_fu_1873_p2);

assign and_ln91_3_fu_1906_p2 = (icmp_ln87_2_fu_1792_p2 & and_ln91_fu_1873_p2);

assign and_ln91_fu_1873_p2 = (xor_ln79_fu_1868_p2 & icmp_ln73_reg_3254_pp0_iter4_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1008 = (((icmp_ln74_reg_3290 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd0)) | ((icmp_ln74_reg_3290 == 1'd1) & (icmp_ln73_1_reg_3279 == 1'd0)));
end

always @ (*) begin
    ap_condition_1014 = ((icmp_ln74_reg_3290 == 1'd0) & (icmp_ln73_1_reg_3279 == 1'd1) & (icmp_ln73_4_reg_3270 == 1'd0));
end

always @ (*) begin
    ap_condition_2254 = ((icmp_ln48_reg_3245_pp0_iter3_reg == 1'd1) & (icmp_ln39_reg_3233_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_2258 = ((icmp_ln36_fu_839_p2 == 1'd0) & (icmp_ln48_fu_933_p2 == 1'd0) & (icmp_ln39_fu_858_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_2262 = ((icmp_ln36_fu_839_p2 == 1'd0) & (icmp_ln48_fu_933_p2 == 1'd1) & (icmp_ln39_fu_858_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign d_5_fu_1367_p3 = ((tmp_564_fu_1327_p3[0:0] == 1'b1) ? sub_ln49_fu_1353_p2 : tmp_25_fu_1359_p3);

assign firstBias_f_V_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_0_0_address0 = idxprom87_fu_1379_p1;

assign firstKernel_f_V_0_1_address0 = idxprom87_fu_1379_p1;

assign firstKernel_f_V_0_2_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_1_0_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_1_1_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_1_2_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_2_0_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_2_1_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_2_2_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_3_0_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_3_1_address0 = idxprom87_reg_3350;

assign firstKernel_f_V_3_2_address0 = idxprom87_reg_3350;

assign i_6_fu_921_p3 = ((tmp_fu_881_p3[0:0] == 1'b1) ? sub_ln40_fu_907_p2 : tmp_s_fu_913_p3);

assign icmp_ln104_fu_1213_p2 = (($signed(tmp_567_fu_1203_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_839_p2 = ((id_fu_188 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_858_p2 = ((trunc_ln9_fu_854_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_933_p2 = ((i_6_fu_921_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_1_fu_958_p2 = ((add_ln64_fu_952_p2 < 12'd3) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_1609_p2 = ((trunc_ln9_reg_3222_pp0_iter4_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_1043_p2 = ((t_fu_1005_p3 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_2_fu_1473_p2 = ((t_reg_3264_pp0_iter3_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln73_3_fu_1486_p2 = ((t_reg_3264_pp0_iter3_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_4_fu_1037_p2 = (($signed(tmp_565_fu_1027_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_994_p2 = ((add_ln72_fu_989_p2 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_1097_p2 = (($signed(tmp_566_fu_1087_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1651_p2 = ((trunc_ln9_reg_3222_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_1191_p0 = i_fu_316;

assign icmp_ln79_fu_1191_p2 = (($signed(icmp_ln79_fu_1191_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1664_p2 = ((trunc_ln9_reg_3222_pp0_iter4_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_1772_p2 = ((or_ln_fu_1700_p3 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln87_2_fu_1792_p2 = ((or_ln_fu_1700_p3 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln87_3_fu_1812_p2 = ((or_ln_fu_1700_p3 != 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln87_4_fu_1818_p2 = ((or_ln_fu_1700_p3 != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln87_5_fu_1824_p2 = ((or_ln_fu_1700_p3 != 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1748_p2 = ((or_ln_fu_1700_p3 == 3'd4) ? 1'b1 : 1'b0);

assign id_4_fu_845_p2 = (id_fu_188 + 12'd1);

assign idxprom87_fu_1379_p1 = $unsigned(d_5_fu_1367_p3);

assign newFirst74_fu_1069_p2 = (zext_ln73_fu_1049_p1 - trunc_ln73_1_fu_1053_p1);

assign newFirst76_fu_1119_p2 = (zext_ln73_fu_1049_p1 - trunc_ln74_fu_1103_p1);

assign newFirst_fu_1179_p2 = (tmp_27_fu_1171_p3 + zext_ln73_fu_1049_p1);

assign newSecond75_fu_1075_p2 = (tmp_63_cast_fu_1061_p3 + newFirst74_fu_1069_p2);

assign newSecond77_fu_1125_p2 = (tmp_64_cast_fu_1111_p3 + newFirst76_fu_1119_p2);

assign newSecond_fu_1185_p2 = (newFirst_fu_1179_p2 - zext_ln76_fu_1167_p1);

assign num_V_3_fu_2929_p3 = ((tmp_568_fu_2921_p3[0:0] == 1'b1) ? 35'd0 : add_ln1548_fu_2916_p2);

assign or_ln104_fu_2316_p2 = (icmp_ln73_4_reg_3270_pp0_iter4_reg | icmp_ln104_reg_3319_pp0_iter4_reg);

assign or_ln73_fu_1427_p2 = (and_ln74_fu_1406_p2 | and_ln73_1_fu_1422_p2);

assign or_ln74_fu_1411_p2 = (icmp_ln74_reg_3290_pp0_iter3_reg | and_ln73_fu_1396_p2);

assign or_ln91_fu_1856_p2 = (icmp_ln79_reg_3311_pp0_iter4_reg | icmp_ln73_reg_3254_pp0_iter4_reg);

assign or_ln_fu_1700_p3 = {{1'd1}, {trunc_ln9_reg_3222_pp0_iter4_reg}};

assign out_r_address0 = zext_ln119_fu_2937_p1;

assign out_r_d0 = num_V_3_reg_3744;

assign p_and_t3_cast_fu_899_p3 = {{1'd0}, {xor_ln40_fu_893_p2}};

assign p_and_t7_cast_fu_1345_p3 = {{1'd0}, {xor_ln49_fu_1339_p2}};

assign select_ln100_1_fu_2252_p3 = ((and_ln100_1_fu_2247_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_232 : select_ln100_fu_2239_p3);

assign select_ln100_2_fu_2328_p3 = ((and_ln100_fu_2235_p2[0:0] == 1'b1) ? tmp1_V_11_36_fu_2149_p3 : tmp2_V_10_2_fu_228);

assign select_ln100_3_fu_2336_p3 = ((and_ln100_1_fu_2247_p2[0:0] == 1'b1) ? tmp1_V_11_36_fu_2149_p3 : select_ln100_2_fu_2328_p3);

assign select_ln100_4_fu_2376_p3 = ((and_ln100_fu_2235_p2[0:0] == 1'b1) ? select_ln81_3_fu_2207_p3 : tmp2_V_9_2_fu_224);

assign select_ln100_5_fu_2384_p3 = ((and_ln100_1_fu_2247_p2[0:0] == 1'b1) ? select_ln81_3_fu_2207_p3 : select_ln100_4_fu_2376_p3);

assign select_ln100_6_fu_2424_p3 = ((and_ln100_fu_2235_p2[0:0] == 1'b1) ? tmp1_V_11_37_fu_2222_p3 : tmp1_V_11_30_fu_1638_p3);

assign select_ln100_7_fu_2432_p3 = ((and_ln100_1_fu_2247_p2[0:0] == 1'b1) ? tmp2_V_8_2_fu_220 : select_ln100_6_fu_2424_p3);

assign select_ln100_fu_2239_p3 = ((and_ln100_fu_2235_p2[0:0] == 1'b1) ? tmp2_V_11_fu_2230_p3 : tmp2_V_11_2_fu_232);

assign select_ln104_1_fu_2368_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? select_ln107_5_fu_2360_p3 : tmp2_V_10_2_fu_228);

assign select_ln104_2_fu_2416_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? select_ln107_8_fu_2408_p3 : tmp2_V_9_2_fu_224);

assign select_ln104_3_fu_2464_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? select_ln107_11_fu_2456_p3 : tmp2_V_8_2_fu_220);

assign select_ln104_5_fu_2480_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? select_ln81_2_fu_2164_p3 : tmp2_V_6_2_fu_212);

assign select_ln104_fu_2320_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? select_ln107_2_fu_2308_p3 : tmp2_V_11_2_fu_232);

assign select_ln107_10_fu_2448_p3 = ((and_ln107_2_fu_2289_p2[0:0] == 1'b1) ? tmp1_V_5_fu_332 : select_ln107_9_fu_2440_p3);

assign select_ln107_11_fu_2456_p3 = ((and_ln107_3_fu_2303_p2[0:0] == 1'b1) ? tmp1_V_4_fu_320 : select_ln107_10_fu_2448_p3);

assign select_ln107_1_fu_2295_p3 = ((and_ln107_2_fu_2289_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_232 : select_ln107_fu_2276_p3);

assign select_ln107_2_fu_2308_p3 = ((and_ln107_3_fu_2303_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_232 : select_ln107_1_fu_2295_p3);

assign select_ln107_3_fu_2344_p3 = ((and_ln107_fu_2270_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_228 : select_ln100_3_fu_2336_p3);

assign select_ln107_4_fu_2352_p3 = ((and_ln107_2_fu_2289_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_228 : select_ln107_3_fu_2344_p3);

assign select_ln107_5_fu_2360_p3 = ((and_ln107_3_fu_2303_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_228 : select_ln107_4_fu_2352_p3);

assign select_ln107_6_fu_2392_p3 = ((and_ln107_fu_2270_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_224 : select_ln100_5_fu_2384_p3);

assign select_ln107_7_fu_2400_p3 = ((and_ln107_2_fu_2289_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_224 : select_ln107_6_fu_2392_p3);

assign select_ln107_8_fu_2408_p3 = ((and_ln107_3_fu_2303_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_224 : select_ln107_7_fu_2400_p3);

assign select_ln107_9_fu_2440_p3 = ((and_ln107_fu_2270_p2[0:0] == 1'b1) ? tmp2_V_8_2_fu_220 : select_ln100_7_fu_2432_p3);

assign select_ln107_fu_2276_p3 = ((and_ln107_fu_2270_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_232 : select_ln100_1_fu_2252_p3);

assign select_ln64_fu_964_p3 = ((icmp_ln64_1_fu_958_p2[0:0] == 1'b1) ? add_ln64_fu_952_p2 : 12'd0);

assign select_ln73_1_fu_1457_p3 = ((and_ln73_fu_1396_p2[0:0] == 1'b1) ? trunc_ln73_5_fu_1449_p1 : trunc_ln73_6_fu_1453_p1);

assign select_ln73_fu_1441_p3 = ((and_ln73_1_fu_1422_p2[0:0] == 1'b1) ? trunc_ln73_3_fu_1433_p1 : trunc_ln73_4_fu_1437_p1);

assign select_ln78_1_fu_1656_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_1_fu_324 : select_ln78_fu_1644_p3);

assign select_ln78_fu_1644_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_3_1_fu_1622_p3 : tmp1_V_2_fu_336);

assign select_ln80_fu_1685_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_0_3_fu_1630_p3 : tmp1_V_2_1_fu_340);

assign select_ln81_1_fu_1715_p3 = ((icmp_ln81_fu_1664_p2[0:0] == 1'b1) ? tmp2_V_0_fu_1707_p3 : tmp2_V_0_2_fu_192);

assign select_ln81_2_fu_2164_p3 = ((icmp_ln81_fu_1664_p2[0:0] == 1'b1) ? tmp2_V_6_fu_2156_p3 : tmp2_V_6_2_fu_212);

assign select_ln81_3_fu_2207_p3 = ((icmp_ln81_fu_1664_p2[0:0] == 1'b1) ? tmp2_V_9_fu_2179_p14 : tmp2_V_9_2_fu_224);

assign select_ln81_fu_1677_p3 = ((icmp_ln81_fu_1664_p2[0:0] == 1'b1) ? tmp2_V_3_fu_1669_p3 : tmp2_V_3_2_fu_204);

assign select_ln85_1_fu_1984_p3 = ((and_ln85_fu_1735_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1692_p3 : tmp2_V_1_2_fu_196);

assign select_ln85_2_fu_2056_p3 = ((and_ln85_fu_1735_p2[0:0] == 1'b1) ? select_ln81_1_fu_1715_p3 : tmp2_V_0_2_fu_192);

assign select_ln85_fu_1740_p3 = ((and_ln85_fu_1735_p2[0:0] == 1'b1) ? tmp2_V_5_2_fu_208 : tmp1_V_4_fu_320);

assign select_ln87_10_fu_2008_p3 = ((and_ln87_2_fu_1798_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1692_p3 : select_ln87_9_fu_2000_p3);

assign select_ln87_11_fu_2016_p3 = ((and_ln87_5_fu_1842_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1692_p3 : select_ln87_10_fu_2008_p3);

assign select_ln87_12_fu_2064_p3 = ((and_ln87_fu_1758_p2[0:0] == 1'b1) ? select_ln81_1_fu_1715_p3 : select_ln85_2_fu_2056_p3);

assign select_ln87_13_fu_2072_p3 = ((and_ln87_1_fu_1778_p2[0:0] == 1'b1) ? select_ln81_1_fu_1715_p3 : select_ln87_12_fu_2064_p3);

assign select_ln87_14_fu_2080_p3 = ((and_ln87_2_fu_1798_p2[0:0] == 1'b1) ? select_ln81_1_fu_1715_p3 : select_ln87_13_fu_2072_p3);

assign select_ln87_15_fu_2088_p3 = ((and_ln87_5_fu_1842_p2[0:0] == 1'b1) ? select_ln81_1_fu_1715_p3 : select_ln87_14_fu_2080_p3);

assign select_ln87_1_fu_1784_p3 = ((and_ln87_1_fu_1778_p2[0:0] == 1'b1) ? tmp1_V_2_fu_336 : select_ln87_fu_1764_p3);

assign select_ln87_2_fu_1804_p3 = ((and_ln87_2_fu_1798_p2[0:0] == 1'b1) ? tmp1_V_6_fu_1614_p3 : select_ln87_1_fu_1784_p3);

assign select_ln87_3_fu_1848_p3 = ((and_ln87_5_fu_1842_p2[0:0] == 1'b1) ? tmp1_V_4_fu_320 : select_ln87_2_fu_1804_p3);

assign select_ln87_4_fu_1920_p3 = ((and_ln87_fu_1758_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1723_p3 : tmp2_V_2_2_fu_200);

assign select_ln87_5_fu_1928_p3 = ((and_ln87_1_fu_1778_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1723_p3 : select_ln87_4_fu_1920_p3);

assign select_ln87_6_fu_1936_p3 = ((and_ln87_2_fu_1798_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1723_p3 : select_ln87_5_fu_1928_p3);

assign select_ln87_7_fu_1944_p3 = ((and_ln87_5_fu_1842_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1723_p3 : select_ln87_6_fu_1936_p3);

assign select_ln87_8_fu_1992_p3 = ((and_ln87_fu_1758_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1692_p3 : select_ln85_1_fu_1984_p3);

assign select_ln87_9_fu_2000_p3 = ((and_ln87_1_fu_1778_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1692_p3 : select_ln87_8_fu_1992_p3);

assign select_ln87_fu_1764_p3 = ((and_ln87_fu_1758_p2[0:0] == 1'b1) ? tmp1_V_1_fu_324 : select_ln85_fu_1740_p3);

assign select_ln91_10_fu_2040_p3 = ((and_ln91_2_fu_1892_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_196 : select_ln91_9_fu_2032_p3);

assign select_ln91_11_fu_2048_p3 = ((and_ln91_3_fu_1906_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_196 : select_ln91_10_fu_2040_p3);

assign select_ln91_12_fu_2096_p3 = ((or_ln91_fu_1856_p2[0:0] == 1'b1) ? select_ln87_15_fu_2088_p3 : tmp2_V_0_2_fu_192);

assign select_ln91_13_fu_2104_p3 = ((and_ln91_1_fu_1878_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_192 : select_ln91_12_fu_2096_p3);

assign select_ln91_14_fu_2112_p3 = ((and_ln91_2_fu_1892_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_192 : select_ln91_13_fu_2104_p3);

assign select_ln91_15_fu_2120_p3 = ((and_ln91_3_fu_1906_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_192 : select_ln91_14_fu_2112_p3);

assign select_ln91_1_fu_1884_p3 = ((and_ln91_1_fu_1878_p2[0:0] == 1'b1) ? tmp1_V_1_fu_324 : select_ln91_fu_1860_p3);

assign select_ln91_2_fu_1898_p3 = ((and_ln91_2_fu_1892_p2[0:0] == 1'b1) ? tmp1_V_2_fu_336 : select_ln91_1_fu_1884_p3);

assign select_ln91_3_fu_1912_p3 = ((and_ln91_3_fu_1906_p2[0:0] == 1'b1) ? tmp1_V_6_fu_1614_p3 : select_ln91_2_fu_1898_p3);

assign select_ln91_4_fu_1952_p3 = ((or_ln91_fu_1856_p2[0:0] == 1'b1) ? select_ln87_7_fu_1944_p3 : tmp2_V_2_2_fu_200);

assign select_ln91_5_fu_1960_p3 = ((and_ln91_1_fu_1878_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_200 : select_ln91_4_fu_1952_p3);

assign select_ln91_6_fu_1968_p3 = ((and_ln91_2_fu_1892_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_200 : select_ln91_5_fu_1960_p3);

assign select_ln91_7_fu_1976_p3 = ((and_ln91_3_fu_1906_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_200 : select_ln91_6_fu_1968_p3);

assign select_ln91_8_fu_2024_p3 = ((or_ln91_fu_1856_p2[0:0] == 1'b1) ? select_ln87_11_fu_2016_p3 : tmp2_V_1_2_fu_196);

assign select_ln91_9_fu_2032_p3 = ((and_ln91_1_fu_1878_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_196 : select_ln91_8_fu_2024_p3);

assign select_ln91_fu_1860_p3 = ((or_ln91_fu_1856_p2[0:0] == 1'b1) ? select_ln87_3_fu_1848_p3 : tmp2_V_5_2_fu_208);

assign select_ln94_fu_2128_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_6_fu_1614_p3 : tmp1_V_5_fu_332);

assign sext_ln40_1_fu_929_p1 = i_6_fu_921_p3;

assign sext_ln40_fu_867_p0 = i_fu_316;

assign sext_ln40_fu_867_p1 = sext_ln40_fu_867_p0;

assign sext_ln49_1_fu_1375_p1 = d_5_fu_1367_p3;

assign sext_ln49_fu_1313_p0 = d_fu_264;

assign sext_ln49_fu_1313_p1 = sext_ln49_fu_1313_p0;

assign sext_ln58_10_fu_2612_p1 = $signed(firstKernel_f_V_3_1_q0);

assign sext_ln58_11_fu_2616_p1 = $signed(firstKernel_f_V_3_2_q0);

assign sext_ln58_1_fu_1529_p1 = $signed(firstKernel_f_V_0_1_q0);

assign sext_ln58_2_fu_2580_p1 = $signed(firstKernel_f_V_0_2_q0);

assign sext_ln58_3_fu_2584_p1 = $signed(firstKernel_f_V_1_0_q0);

assign sext_ln58_4_fu_2588_p1 = $signed(firstKernel_f_V_1_1_q0);

assign sext_ln58_5_fu_2592_p1 = $signed(firstKernel_f_V_1_2_q0);

assign sext_ln58_6_fu_2596_p1 = $signed(firstKernel_f_V_2_0_q0);

assign sext_ln58_7_fu_2600_p1 = $signed(firstKernel_f_V_2_1_q0);

assign sext_ln58_8_fu_2604_p1 = $signed(firstKernel_f_V_2_2_q0);

assign sext_ln58_9_fu_2608_p1 = $signed(firstKernel_f_V_3_0_q0);

assign sext_ln58_fu_1525_p1 = $signed(firstKernel_f_V_0_0_q0);

assign sext_ln64_fu_2694_p1 = $signed(firstBias_f_V_load_reg_3519);

assign sext_ln73_fu_1017_p0 = i_fu_316;

assign sext_ln73_fu_1017_p1 = sext_ln73_fu_1017_p0;

assign sub_ln119_fu_1235_p2 = (tmp_71_cast_fu_1227_p3 - trunc_ln119_fu_1219_p1);

assign sub_ln40_fu_907_p2 = (8'd0 - p_and_t3_cast_fu_899_p3);

assign sub_ln49_fu_1353_p2 = (4'd0 - p_and_t7_cast_fu_1345_p3);

assign sub_ln75_fu_1149_p2 = (tmp_26_fu_1141_p3 - zext_ln75_fu_1137_p1);

assign t_fu_1005_p3 = ((icmp_ln73_fu_994_p2[0:0] == 1'b1) ? add_ln72_fu_989_p2 : xor_ln73_2_fu_1000_p2);

assign tmp1_V_0_3_fu_1630_p3 = ((icmp_ln64_fu_1609_p2[0:0] == 1'b1) ? tmp1_V_0_fu_240 : tmp1_V_0_2_fu_236);

assign tmp1_V_11_24_fu_1478_p3 = ((icmp_ln73_2_fu_1473_p2[0:0] == 1'b1) ? tmp1_V_8_fu_256 : tmp1_V_11_35_fu_1465_p3);

assign tmp1_V_11_25_fu_1491_p3 = ((icmp_ln73_3_fu_1486_p2[0:0] == 1'b1) ? tmp1_V_8_fu_256 : tmp1_V_11_24_fu_1478_p3);

assign tmp1_V_11_28_fu_1499_p3 = ((icmp_ln73_2_fu_1473_p2[0:0] == 1'b1) ? tmp1_V_11_35_fu_1465_p3 : tmp1_V_7_fu_252);

assign tmp1_V_11_29_fu_1507_p3 = ((icmp_ln73_3_fu_1486_p2[0:0] == 1'b1) ? tmp1_V_7_fu_252 : tmp1_V_11_28_fu_1499_p3);

assign tmp1_V_11_30_fu_1638_p3 = ((icmp_ln73_3_reg_3380[0:0] == 1'b1) ? tmp1_V_11_35_reg_3375 : tmp1_V_11_fu_248);

assign tmp1_V_11_31_fu_2143_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_11_30_fu_1638_p3 : tmp1_V_11_25_reg_3385);

assign tmp1_V_11_33_fu_2215_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_4_fu_320 : tmp1_V_11_30_fu_1638_p3);

assign tmp1_V_11_35_fu_1465_p3 = ((or_ln73_fu_1427_p2[0:0] == 1'b1) ? select_ln73_fu_1441_p3 : select_ln73_1_fu_1457_p3);

assign tmp1_V_11_36_fu_2149_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_11_29_reg_3392 : tmp1_V_11_31_fu_2143_p3);

assign tmp1_V_11_37_fu_2222_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_5_fu_332 : tmp1_V_11_33_fu_2215_p3);

assign tmp1_V_3_1_fu_1622_p3 = ((icmp_ln64_fu_1609_p2[0:0] == 1'b1) ? tmp1_V_3_fu_244 : tmp1_V_0_fu_240);

assign tmp1_V_6_fu_1614_p3 = ((icmp_ln64_fu_1609_p2[0:0] == 1'b1) ? tmp1_V_11_fu_248 : tmp1_V_3_fu_244);

assign tmp2_V_0_fu_1707_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_0_3_fu_1630_p3 : tmp1_V_1_1_fu_328);

assign tmp2_V_11_fu_2230_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_11_29_reg_3392 : tmp1_V_11_25_reg_3385);

assign tmp2_V_1_fu_1692_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_1_1_fu_328 : select_ln80_fu_1685_p3);

assign tmp2_V_2_fu_1723_p3 = ((icmp_ln39_reg_3233_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_1_1_fu_328 : tmp1_V_2_1_fu_340);

assign tmp2_V_3_fu_1669_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_3_1_fu_1622_p3 : tmp1_V_1_fu_324);

assign tmp2_V_6_fu_2156_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_6_fu_1614_p3 : tmp1_V_4_fu_320);

assign tmp2_V_7_1_fu_2472_p3 = ((or_ln104_fu_2316_p2[0:0] == 1'b1) ? tmp2_V_7_fu_2135_p3 : tmp2_V_7_2_fu_216);

assign tmp2_V_7_fu_2135_p3 = ((icmp_ln78_fu_1651_p2[0:0] == 1'b1) ? tmp1_V_4_fu_320 : select_ln94_fu_2128_p3);

assign tmp2_V_9_fu_2179_p13 = {{2'd2}, {trunc_ln9_reg_3222_pp0_iter4_reg}};

assign tmp_25_fu_1359_p3 = {{1'd0}, {trunc_ln49_1_fu_1335_p1}};

assign tmp_26_fu_1141_p3 = {{add_ln75_fu_1131_p2}, {2'd0}};

assign tmp_27_fu_1171_p3 = {{add_ln76_fu_1161_p2}, {2'd0}};

assign tmp_564_fu_1327_p3 = add_ln49_fu_1321_p2[32'd16];

assign tmp_565_fu_1027_p4 = {{add_ln73_fu_1021_p2[16:7]}};

assign tmp_566_fu_1087_p4 = {{add_ln74_fu_1081_p2[16:7]}};

assign tmp_567_fu_1203_p4 = {{add_ln104_fu_1197_p2[16:7]}};

assign tmp_568_fu_2921_p3 = add_ln712_11_fu_2911_p2[32'd35];

assign tmp_63_cast_fu_1061_p3 = {{trunc_ln73_2_fu_1057_p1}, {2'd0}};

assign tmp_64_cast_fu_1111_p3 = {{trunc_ln74_1_fu_1107_p1}, {2'd0}};

assign tmp_71_cast_fu_1227_p3 = {{trunc_ln119_1_fu_1223_p1}, {2'd0}};

assign tmp_73_cast_fu_2488_p3 = {{add_ln119_reg_3325_pp0_iter4_reg}, {3'd0}};

assign tmp_fu_881_p3 = add_ln40_fu_875_p2[32'd16];

assign tmp_s_fu_913_p3 = {{1'd0}, {trunc_ln40_1_fu_889_p1}};

assign trunc_ln119_1_fu_1223_p0 = i_fu_316;

assign trunc_ln119_1_fu_1223_p1 = trunc_ln119_1_fu_1223_p0[6:0];

assign trunc_ln119_2_fu_972_p1 = j_fu_184[8:0];

assign trunc_ln119_3_fu_2495_p1 = d_fu_264[11:0];

assign trunc_ln119_fu_1219_p0 = i_fu_316;

assign trunc_ln119_fu_1219_p1 = trunc_ln119_fu_1219_p0[8:0];

assign trunc_ln40_1_fu_889_p1 = add_ln40_fu_875_p2[6:0];

assign trunc_ln40_fu_871_p0 = i_fu_316;

assign trunc_ln40_fu_871_p1 = trunc_ln40_fu_871_p0[6:0];

assign trunc_ln49_1_fu_1335_p1 = add_ln49_fu_1321_p2[2:0];

assign trunc_ln49_fu_1317_p0 = d_fu_264;

assign trunc_ln49_fu_1317_p1 = trunc_ln49_fu_1317_p0[2:0];

assign trunc_ln712_1_fu_2861_p1 = add_ln712_3_fu_2852_p2[34:0];

assign trunc_ln712_2_fu_2873_p1 = add_ln712_7_fu_2865_p2[34:0];

assign trunc_ln712_3_fu_2877_p1 = add_ln712_8_fu_2869_p2[34:0];

assign trunc_ln712_4_fu_2835_p1 = add_ln712_6_fu_2830_p2[34:0];

assign trunc_ln712_fu_2857_p1 = add_ln712_1_fu_2843_p2[34:0];

assign trunc_ln73_1_fu_1053_p1 = add_ln73_fu_1021_p2[8:0];

assign trunc_ln73_2_fu_1057_p1 = add_ln73_fu_1021_p2[6:0];

assign trunc_ln73_3_fu_1433_p1 = input_r_q0[11:0];

assign trunc_ln73_4_fu_1437_p1 = input_r_q0[11:0];

assign trunc_ln73_5_fu_1449_p1 = input_r_q0[11:0];

assign trunc_ln73_6_fu_1453_p1 = input_r_q0[11:0];

assign trunc_ln73_fu_1013_p0 = i_fu_316;

assign trunc_ln73_fu_1013_p1 = trunc_ln73_fu_1013_p0[6:0];

assign trunc_ln74_1_fu_1107_p1 = add_ln74_fu_1081_p2[6:0];

assign trunc_ln74_fu_1103_p1 = add_ln74_fu_1081_p2[8:0];

assign trunc_ln9_fu_854_p1 = j_fu_184[1:0];

assign xor_ln40_fu_893_p2 = (trunc_ln40_fu_871_p1 ^ 7'd127);

assign xor_ln49_fu_1339_p2 = (trunc_ln49_fu_1317_p1 ^ 3'd7);

assign xor_ln73_1_fu_2260_p2 = (icmp_ln73_4_reg_3270_pp0_iter4_reg ^ 1'd1);

assign xor_ln73_2_fu_1000_p2 = (trunc_ln9_reg_3222 ^ 2'd2);

assign xor_ln73_fu_1400_p2 = (1'd1 ^ and_ln73_fu_1396_p2);

assign xor_ln74_fu_1416_p2 = (or_ln74_fu_1411_p2 ^ 1'd1);

assign xor_ln79_fu_1868_p2 = (icmp_ln79_reg_3311_pp0_iter4_reg ^ 1'd1);

assign xor_ln85_fu_1730_p2 = (icmp_ln73_reg_3254_pp0_iter4_reg ^ 1'd1);

assign zext_ln119_fu_2937_p1 = add_ln119_1_reg_3514_pp0_iter10_reg;

assign zext_ln73_1_fu_1246_p1 = newSecond75_reg_3285;

assign zext_ln73_fu_1049_p1 = t_fu_1005_p3;

assign zext_ln74_fu_1250_p1 = newSecond77_reg_3296;

assign zext_ln75_1_fu_1254_p1 = add_ln75_1_reg_3301;

assign zext_ln75_fu_1137_p1 = add_ln75_fu_1131_p2;

assign zext_ln76_1_fu_1258_p1 = newSecond_reg_3306;

assign zext_ln76_fu_1167_p1 = add_ln76_fu_1161_p2;

always @ (posedge ap_clk) begin
    idxprom87_reg_3350[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //master_fix_convolution1_fix_Pipeline_Convolution1_loop
