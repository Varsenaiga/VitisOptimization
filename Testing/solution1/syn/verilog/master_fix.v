// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="master_fix_master_fix,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.400000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.574250,HLS_SYN_LAT=35758,HLS_SYN_TPT=none,HLS_SYN_MEM=48,HLS_SYN_DSP=0,HLS_SYN_FF=30128,HLS_SYN_LUT=27008,HLS_VERSION=2021_1}" *)

module master_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 68'd1;
parameter    ap_ST_fsm_state2 = 68'd2;
parameter    ap_ST_fsm_state3 = 68'd4;
parameter    ap_ST_fsm_state4 = 68'd8;
parameter    ap_ST_fsm_state5 = 68'd16;
parameter    ap_ST_fsm_state6 = 68'd32;
parameter    ap_ST_fsm_state7 = 68'd64;
parameter    ap_ST_fsm_state8 = 68'd128;
parameter    ap_ST_fsm_state9 = 68'd256;
parameter    ap_ST_fsm_state10 = 68'd512;
parameter    ap_ST_fsm_state11 = 68'd1024;
parameter    ap_ST_fsm_state12 = 68'd2048;
parameter    ap_ST_fsm_state13 = 68'd4096;
parameter    ap_ST_fsm_state14 = 68'd8192;
parameter    ap_ST_fsm_state15 = 68'd16384;
parameter    ap_ST_fsm_state16 = 68'd32768;
parameter    ap_ST_fsm_state17 = 68'd65536;
parameter    ap_ST_fsm_state18 = 68'd131072;
parameter    ap_ST_fsm_state19 = 68'd262144;
parameter    ap_ST_fsm_state20 = 68'd524288;
parameter    ap_ST_fsm_state21 = 68'd1048576;
parameter    ap_ST_fsm_state22 = 68'd2097152;
parameter    ap_ST_fsm_state23 = 68'd4194304;
parameter    ap_ST_fsm_state24 = 68'd8388608;
parameter    ap_ST_fsm_state25 = 68'd16777216;
parameter    ap_ST_fsm_state26 = 68'd33554432;
parameter    ap_ST_fsm_state27 = 68'd67108864;
parameter    ap_ST_fsm_state28 = 68'd134217728;
parameter    ap_ST_fsm_state29 = 68'd268435456;
parameter    ap_ST_fsm_state30 = 68'd536870912;
parameter    ap_ST_fsm_state31 = 68'd1073741824;
parameter    ap_ST_fsm_state32 = 68'd2147483648;
parameter    ap_ST_fsm_state33 = 68'd4294967296;
parameter    ap_ST_fsm_state34 = 68'd8589934592;
parameter    ap_ST_fsm_state35 = 68'd17179869184;
parameter    ap_ST_fsm_state36 = 68'd34359738368;
parameter    ap_ST_fsm_state37 = 68'd68719476736;
parameter    ap_ST_fsm_state38 = 68'd137438953472;
parameter    ap_ST_fsm_state39 = 68'd274877906944;
parameter    ap_ST_fsm_state40 = 68'd549755813888;
parameter    ap_ST_fsm_state41 = 68'd1099511627776;
parameter    ap_ST_fsm_state42 = 68'd2199023255552;
parameter    ap_ST_fsm_state43 = 68'd4398046511104;
parameter    ap_ST_fsm_state44 = 68'd8796093022208;
parameter    ap_ST_fsm_state45 = 68'd17592186044416;
parameter    ap_ST_fsm_state46 = 68'd35184372088832;
parameter    ap_ST_fsm_state47 = 68'd70368744177664;
parameter    ap_ST_fsm_state48 = 68'd140737488355328;
parameter    ap_ST_fsm_state49 = 68'd281474976710656;
parameter    ap_ST_fsm_state50 = 68'd562949953421312;
parameter    ap_ST_fsm_state51 = 68'd1125899906842624;
parameter    ap_ST_fsm_state52 = 68'd2251799813685248;
parameter    ap_ST_fsm_state53 = 68'd4503599627370496;
parameter    ap_ST_fsm_state54 = 68'd9007199254740992;
parameter    ap_ST_fsm_state55 = 68'd18014398509481984;
parameter    ap_ST_fsm_state56 = 68'd36028797018963968;
parameter    ap_ST_fsm_state57 = 68'd72057594037927936;
parameter    ap_ST_fsm_state58 = 68'd144115188075855872;
parameter    ap_ST_fsm_state59 = 68'd288230376151711744;
parameter    ap_ST_fsm_state60 = 68'd576460752303423488;
parameter    ap_ST_fsm_state61 = 68'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 68'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 68'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 68'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 68'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 68'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 68'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 68'd147573952589676412928;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [1:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [67:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] thirdBias_f_V_address0;
reg    thirdBias_f_V_ce0;
wire   [20:0] thirdBias_f_V_q0;
wire   [11:0] firstDense_f_V_address0;
reg    firstDense_f_V_ce0;
wire   [20:0] firstDense_f_V_q0;
wire   [5:0] secondDense_f_V_address0;
reg    secondDense_f_V_ce0;
wire   [18:0] secondDense_f_V_q0;
reg   [63:0] reg_763;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln504_fu_1586_p2;
wire    ap_CS_fsm_state60;
wire   [11:0] zext_ln422_fu_777_p1;
reg   [11:0] zext_ln422_reg_1652;
wire    ap_CS_fsm_state3;
wire   [8:0] zext_ln422_1_fu_781_p1;
reg   [8:0] zext_ln422_1_reg_1657;
wire   [3:0] add_ln422_fu_791_p2;
reg   [3:0] add_ln422_reg_1665;
wire   [11:0] zext_ln424_fu_824_p1;
reg   [11:0] zext_ln424_reg_1677;
wire    ap_CS_fsm_state4;
wire   [7:0] add_ln424_fu_834_p2;
reg   [7:0] add_ln424_reg_1685;
wire   [6:0] empty_41_fu_840_p1;
wire   [0:0] icmp_ln424_fu_828_p2;
wire   [8:0] add_ln428_fu_894_p2;
reg   [8:0] add_ln428_reg_1698;
wire   [0:0] icmp_ln426_fu_864_p2;
reg   [8:0] max1_V_0_addr_reg_1706;
wire    ap_CS_fsm_state14;
wire   [35:0] max1_V_0_q0;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [1:0] add_ln430_fu_948_p2;
reg   [1:0] add_ln430_reg_1724;
wire   [35:0] zext_ln430_fu_976_p1;
wire    ap_CS_fsm_state18;
wire   [7:0] zext_ln443_fu_983_p1;
reg   [7:0] zext_ln443_reg_1734;
wire    ap_CS_fsm_state20;
wire   [9:0] zext_ln443_1_fu_987_p1;
reg   [9:0] zext_ln443_1_reg_1739;
wire   [4:0] add_ln443_fu_997_p2;
reg   [4:0] add_ln443_reg_1747;
reg   [9:0] conv2_0_addr_reg_1759;
wire    ap_CS_fsm_state21;
wire   [5:0] add_ln445_fu_1032_p2;
reg   [5:0] add_ln445_reg_1767;
wire   [11:0] next_mul_fu_1038_p2;
reg   [11:0] next_mul_reg_1772;
wire   [0:0] icmp_ln445_fu_1026_p2;
reg   [7:0] max2_V_0_addr_reg_1780;
wire   [5:0] select_ln453_fu_1094_p3;
reg   [5:0] select_ln453_reg_1785;
wire   [34:0] select_ln454_fu_1112_p3;
reg   [34:0] select_ln454_reg_1790;
wire    ap_CS_fsm_state23;
wire   [7:0] sub_ln1171_fu_1153_p2;
reg   [7:0] sub_ln1171_reg_1795;
wire    ap_CS_fsm_state25;
wire   [4:0] add_ln464_fu_1165_p2;
reg   [4:0] add_ln464_reg_1803;
wire   [0:0] icmp_ln464_fu_1159_p2;
reg   [3:0] den1_V_0_addr_reg_1813;
wire  signed [35:0] sext_ln467_fu_1176_p1;
wire    ap_CS_fsm_state26;
wire   [11:0] tmp_18_cast_fu_1189_p3;
reg   [11:0] tmp_18_cast_reg_1854;
wire    ap_CS_fsm_state27;
wire   [7:0] tmp_8_fu_1197_p3;
reg   [7:0] tmp_8_reg_1859;
wire   [3:0] add_ln467_fu_1211_p2;
reg   [3:0] add_ln467_reg_1867;
wire    ap_CS_fsm_state28;
wire   [4:0] add_ln471_fu_1276_p2;
reg   [4:0] add_ln471_reg_1885;
wire   [34:0] max2_V_0_q0;
reg   [34:0] r_V_2_reg_1890;
wire    ap_CS_fsm_state29;
reg  signed [20:0] firstDense_f_V_load_reg_1895;
wire    ap_CS_fsm_state30;
wire   [54:0] grp_fu_1288_p2;
reg   [54:0] r_V_4_reg_1910;
wire    ap_CS_fsm_state31;
wire   [17:0] trunc_ln727_1_fu_1294_p1;
reg   [17:0] trunc_ln727_1_reg_1915;
wire   [35:0] add_ln415_1_fu_1358_p2;
wire    ap_CS_fsm_state32;
wire   [1:0] trunc_ln1171_1_fu_1367_p1;
reg   [1:0] trunc_ln1171_1_reg_1925;
wire    ap_CS_fsm_state33;
wire   [5:0] tmp_16_cast_fu_1371_p3;
reg   [5:0] tmp_16_cast_reg_1929;
wire   [2:0] add_ln485_fu_1385_p2;
reg   [2:0] add_ln485_reg_1937;
wire   [35:0] tmp_2_fu_1391_p6;
wire   [0:0] icmp_ln485_fu_1379_p2;
wire    ap_CS_fsm_state34;
wire   [4:0] add_ln488_fu_1456_p2;
reg   [4:0] add_ln488_reg_1989;
wire   [0:0] icmp_ln488_fu_1450_p2;
wire   [34:0] den1_V_0_q0;
reg   [34:0] r_V_reg_1999;
wire    ap_CS_fsm_state35;
reg  signed [18:0] secondDense_f_V_load_reg_2004;
wire    ap_CS_fsm_state36;
wire  signed [53:0] grp_fu_1492_p2;
reg  signed [53:0] r_V_5_reg_2019;
wire    ap_CS_fsm_state37;
wire   [17:0] trunc_ln727_fu_1498_p1;
reg   [17:0] trunc_ln727_reg_2025;
wire   [35:0] add_ln415_fu_1565_p2;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_5_fu_1602_p6;
reg   [63:0] tmp_5_reg_2050;
wire   [63:0] grp_fu_753_p2;
reg   [63:0] tmp_7_reg_2055;
wire    ap_CS_fsm_state59;
wire   [63:0] grp_fu_749_p2;
reg   [63:0] sum_1_reg_2060;
wire    ap_CS_fsm_state66;
reg   [11:0] conv1_address0;
reg    conv1_ce0;
reg    conv1_we0;
wire   [34:0] conv1_q0;
reg   [8:0] max1_V_0_address0;
reg    max1_V_0_ce0;
reg    max1_V_0_we0;
reg   [35:0] max1_V_0_d0;
reg    max1_V_0_ce1;
wire   [35:0] max1_V_0_q1;
reg    max1_V_0_ce2;
wire   [35:0] max1_V_0_q2;
reg    max1_V_0_ce3;
wire   [35:0] max1_V_0_q3;
reg    max1_V_0_ce4;
wire   [35:0] max1_V_0_q4;
reg    max1_V_0_ce5;
wire   [35:0] max1_V_0_q5;
reg    max1_V_0_ce6;
wire   [35:0] max1_V_0_q6;
reg    max1_V_0_ce7;
wire   [35:0] max1_V_0_q7;
reg    max1_V_0_ce8;
wire   [35:0] max1_V_0_q8;
reg    max1_V_0_ce9;
wire   [35:0] max1_V_0_q9;
reg    max1_V_0_ce10;
wire   [35:0] max1_V_0_q10;
reg    max1_V_0_ce11;
wire   [35:0] max1_V_0_q11;
reg    max1_V_0_ce12;
wire   [35:0] max1_V_0_q12;
reg    max1_V_0_ce13;
wire   [35:0] max1_V_0_q13;
reg    max1_V_0_ce14;
wire   [35:0] max1_V_0_q14;
reg    max1_V_0_ce15;
wire   [35:0] max1_V_0_q15;
reg   [9:0] conv2_0_address0;
reg    conv2_0_ce0;
reg    conv2_0_we0;
wire   [34:0] conv2_0_q0;
reg   [7:0] max2_V_0_address0;
reg    max2_V_0_ce0;
reg    max2_V_0_we0;
reg   [34:0] max2_V_0_d0;
reg   [3:0] den1_V_0_address0;
reg    den1_V_0_ce0;
reg    den1_V_0_we0;
wire   [34:0] den1_V_0_d0;
wire    grp_convolution1_fix_fu_620_ap_start;
wire    grp_convolution1_fix_fu_620_ap_done;
wire    grp_convolution1_fix_fu_620_ap_idle;
wire    grp_convolution1_fix_fu_620_ap_ready;
wire   [8:0] grp_convolution1_fix_fu_620_input_r_address0;
wire    grp_convolution1_fix_fu_620_input_r_ce0;
wire   [11:0] grp_convolution1_fix_fu_620_out_r_address0;
wire    grp_convolution1_fix_fu_620_out_r_ce0;
wire    grp_convolution1_fix_fu_620_out_r_we0;
wire   [34:0] grp_convolution1_fix_fu_620_out_r_d0;
wire    grp_convolution2_fix_fu_654_ap_start;
wire    grp_convolution2_fix_fu_654_ap_done;
wire    grp_convolution2_fix_fu_654_ap_idle;
wire    grp_convolution2_fix_fu_654_ap_ready;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address0;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce0;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address1;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce1;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address2;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce2;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address3;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce3;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address4;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce4;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address5;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce5;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address6;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce6;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address7;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce7;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address8;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce8;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address9;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce9;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address10;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce10;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address11;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce11;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address12;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce12;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address13;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce13;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address14;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce14;
wire   [8:0] grp_convolution2_fix_fu_654_m_0_0_0_0_address15;
wire    grp_convolution2_fix_fu_654_m_0_0_0_0_ce15;
wire   [9:0] grp_convolution2_fix_fu_654_out_0_address0;
wire    grp_convolution2_fix_fu_654_out_0_ce0;
wire    grp_convolution2_fix_fu_654_out_0_we0;
wire   [34:0] grp_convolution2_fix_fu_654_out_0_d0;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_done;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_idle;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_ready;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out_ap_vld;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out_ap_vld;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out_ap_vld;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out;
wire    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out_ap_vld;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_idle;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_ready;
wire   [1:0] grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_address0;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_ce0;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_we0;
wire   [31:0] grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_d0;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din0;
wire   [63:0] grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din1;
wire    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_ce;
reg   [7:0] i_reg_489;
wire   [0:0] icmp_ln430_fu_942_p2;
wire   [0:0] icmp_ln422_fu_785_p2;
reg   [35:0] empty_42_reg_500;
reg   [1:0] j_reg_511;
reg   [5:0] i_1_reg_522;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln443_fu_991_p2;
reg   [11:0] phi_mul_reg_533;
reg   [5:0] phi_urem_reg_544;
reg   [3:0] i_2_reg_555;
wire   [0:0] icmp_ln471_fu_1270_p2;
reg   [35:0] add_i_i_i_lcssa_lcssa7_i_reg_566;
reg   [4:0] h_reg_576;
wire   [0:0] icmp_ln467_fu_1205_p2;
reg   [35:0] lhs_2_reg_587;
reg   [4:0] i_4_reg_599;
reg   [35:0] den2_V_0_0_reg_610;
reg    grp_convolution1_fix_fu_620_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_convolution2_fix_fu_654_ap_start_reg;
wire    ap_CS_fsm_state19;
reg    grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg;
wire    ap_CS_fsm_state39;
reg    grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg;
wire    ap_CS_fsm_state68;
wire   [63:0] zext_ln428_fu_913_p1;
wire   [63:0] zext_ln432_4_fu_937_p1;
wire   [63:0] zext_ln453_fu_1021_p1;
wire   [63:0] zext_ln449_fu_1077_p1;
wire   [63:0] zext_ln464_fu_1123_p1;
wire   [63:0] zext_ln1171_6_fu_1255_p1;
wire   [63:0] zext_ln1169_fu_1265_p1;
wire   [63:0] zext_ln1171_3_fu_1445_p1;
wire   [63:0] zext_ln736_fu_1431_p1;
reg   [3:0] d_fu_300;
reg   [4:0] d_1_fu_340;
reg   [4:0] d_2_fu_344;
reg   [2:0] d_3_fu_348;
reg   [35:0] den2_V_0_3_fu_352;
reg   [35:0] den2_V_0_3_1_fu_356;
reg   [35:0] den2_V_0_3_2_fu_360;
reg   [35:0] den2_V_0_3_3_fu_364;
reg   [63:0] sum_fu_368;
wire    ap_CS_fsm_state67;
reg   [2:0] i_3_fu_372;
wire   [2:0] add_ln504_fu_1592_p2;
wire   [0:0] icmp_ln427_fu_907_p2;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln448_fu_1048_p2;
wire    ap_CS_fsm_state22;
reg   [63:0] grp_fu_753_p1;
wire    ap_CS_fsm_state42;
wire   [9:0] tmp_1_fu_806_p3;
wire   [10:0] zext_ln432_2_fu_814_p1;
wire   [10:0] zext_ln432_1_fu_802_p1;
wire   [10:0] sub_ln432_fu_818_p2;
wire   [6:0] mul_fu_852_p0;
wire   [8:0] mul_fu_852_p1;
wire   [7:0] i_cast_cast_fu_844_p1;
wire   [7:0] add_ln426_fu_858_p2;
wire   [2:0] grp_fu_870_p1;
wire   [14:0] mul_fu_852_p2;
wire   [5:0] tmp_4_fu_876_p4;
wire   [8:0] tmp_13_cast_fu_886_p3;
wire   [1:0] grp_fu_870_p2;
wire   [1:0] trunc_ln427_fu_903_p1;
wire   [11:0] zext_ln432_3_fu_917_p1;
wire   [11:0] add_ln432_fu_921_p2;
wire   [11:0] shl_ln432_fu_926_p2;
wire   [11:0] add_ln432_1_fu_932_p2;
wire   [35:0] zext_ln432_fu_954_p1;
wire   [0:0] icmp_ln1548_1_fu_958_p2;
wire   [34:0] trunc_ln430_fu_964_p1;
wire   [34:0] select_ln433_fu_968_p3;
wire   [9:0] tmp_3_fu_1008_p3;
wire   [9:0] add_ln453_fu_1016_p2;
wire   [1:0] trunc_ln448_fu_1044_p1;
wire   [3:0] tmp_6_fu_1054_p4;
wire   [7:0] tmp_15_cast_fu_1064_p3;
wire   [7:0] add_ln449_fu_1072_p2;
wire   [5:0] add_ln453_1_fu_1082_p2;
wire   [0:0] icmp_ln453_fu_1088_p2;
wire   [0:0] icmp_ln1548_fu_1106_p2;
wire   [3:0] trunc_ln1171_fu_1129_p1;
wire   [5:0] tmp_s_fu_1141_p3;
wire   [7:0] tmp_4_cast_fu_1133_p3;
wire   [7:0] zext_ln1171_fu_1149_p1;
wire   [7:0] zext_ln1171_1_fu_1180_p1;
wire   [7:0] add_ln1171_fu_1184_p2;
wire   [0:0] tmp_9_fu_1221_p3;
wire   [34:0] trunc_ln467_fu_1217_p1;
wire   [11:0] zext_ln1171_5_fu_1246_p1;
wire   [11:0] add_ln1171_2_fu_1250_p2;
wire   [7:0] zext_ln1171_4_fu_1242_p1;
wire   [7:0] add_ln1169_fu_1260_p2;
wire   [34:0] grp_fu_1288_p1;
wire   [54:0] lhs_3_fu_1298_p3;
wire   [54:0] ret_V_fu_1306_p2;
wire   [0:0] p_Result_10_fu_1321_p3;
wire   [0:0] r_1_fu_1337_p2;
wire   [0:0] or_ln412_1_fu_1342_p2;
wire   [0:0] p_Result_11_fu_1329_p3;
wire   [0:0] and_ln412_1_fu_1348_p2;
wire   [35:0] p_Val2_5_fu_1311_p4;
wire   [35:0] zext_ln415_1_fu_1354_p1;
wire   [5:0] zext_ln1171_2_fu_1436_p1;
wire   [5:0] add_ln1171_1_fu_1440_p2;
wire   [34:0] grp_fu_1492_p1;
wire   [54:0] lhs_1_fu_1502_p3;
wire  signed [54:0] sext_ln1245_fu_1510_p1;
wire   [54:0] ret_V_2_fu_1513_p2;
wire   [0:0] p_Result_s_fu_1529_p3;
wire   [0:0] r_fu_1544_p2;
wire   [0:0] or_ln412_fu_1549_p2;
wire   [0:0] p_Result_12_fu_1537_p3;
wire   [0:0] and_ln412_fu_1555_p2;
wire   [35:0] p_Val2_3_fu_1519_p4;
wire   [35:0] zext_ln415_fu_1561_p1;
wire   [1:0] tmp_5_fu_1602_p5;
reg    grp_fu_753_ce;
reg    grp_fu_870_ap_start;
wire    grp_fu_870_ap_done;
reg   [67:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
reg    ap_ST_fsm_state68_blk;
wire   [54:0] grp_fu_1288_p10;
wire   [53:0] grp_fu_1492_p10;
wire   [14:0] mul_fu_852_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 68'd1;
#0 grp_convolution1_fix_fu_620_ap_start_reg = 1'b0;
#0 grp_convolution2_fix_fu_654_ap_start_reg = 1'b0;
#0 grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg = 1'b0;
#0 grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg = 1'b0;
end

master_fix_thirdBias_f_V #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
thirdBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(thirdBias_f_V_address0),
    .ce0(thirdBias_f_V_ce0),
    .q0(thirdBias_f_V_q0)
);

master_fix_firstDense_f_V #(
    .DataWidth( 21 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
firstDense_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstDense_f_V_address0),
    .ce0(firstDense_f_V_ce0),
    .q0(firstDense_f_V_q0)
);

master_fix_secondDense_f_V #(
    .DataWidth( 19 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
secondDense_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondDense_f_V_address0),
    .ce0(secondDense_f_V_ce0),
    .q0(secondDense_f_V_q0)
);

master_fix_conv1 #(
    .DataWidth( 35 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_address0),
    .ce0(conv1_ce0),
    .we0(conv1_we0),
    .d0(grp_convolution1_fix_fu_620_out_r_d0),
    .q0(conv1_q0)
);

master_fix_max1_V_0 #(
    .DataWidth( 36 ),
    .AddressRange( 336 ),
    .AddressWidth( 9 ))
max1_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max1_V_0_address0),
    .ce0(max1_V_0_ce0),
    .we0(max1_V_0_we0),
    .d0(max1_V_0_d0),
    .q0(max1_V_0_q0),
    .address1(grp_convolution2_fix_fu_654_m_0_0_0_0_address1),
    .ce1(max1_V_0_ce1),
    .q1(max1_V_0_q1),
    .address2(grp_convolution2_fix_fu_654_m_0_0_0_0_address2),
    .ce2(max1_V_0_ce2),
    .q2(max1_V_0_q2),
    .address3(grp_convolution2_fix_fu_654_m_0_0_0_0_address3),
    .ce3(max1_V_0_ce3),
    .q3(max1_V_0_q3),
    .address4(grp_convolution2_fix_fu_654_m_0_0_0_0_address4),
    .ce4(max1_V_0_ce4),
    .q4(max1_V_0_q4),
    .address5(grp_convolution2_fix_fu_654_m_0_0_0_0_address5),
    .ce5(max1_V_0_ce5),
    .q5(max1_V_0_q5),
    .address6(grp_convolution2_fix_fu_654_m_0_0_0_0_address6),
    .ce6(max1_V_0_ce6),
    .q6(max1_V_0_q6),
    .address7(grp_convolution2_fix_fu_654_m_0_0_0_0_address7),
    .ce7(max1_V_0_ce7),
    .q7(max1_V_0_q7),
    .address8(grp_convolution2_fix_fu_654_m_0_0_0_0_address8),
    .ce8(max1_V_0_ce8),
    .q8(max1_V_0_q8),
    .address9(grp_convolution2_fix_fu_654_m_0_0_0_0_address9),
    .ce9(max1_V_0_ce9),
    .q9(max1_V_0_q9),
    .address10(grp_convolution2_fix_fu_654_m_0_0_0_0_address10),
    .ce10(max1_V_0_ce10),
    .q10(max1_V_0_q10),
    .address11(grp_convolution2_fix_fu_654_m_0_0_0_0_address11),
    .ce11(max1_V_0_ce11),
    .q11(max1_V_0_q11),
    .address12(grp_convolution2_fix_fu_654_m_0_0_0_0_address12),
    .ce12(max1_V_0_ce12),
    .q12(max1_V_0_q12),
    .address13(grp_convolution2_fix_fu_654_m_0_0_0_0_address13),
    .ce13(max1_V_0_ce13),
    .q13(max1_V_0_q13),
    .address14(grp_convolution2_fix_fu_654_m_0_0_0_0_address14),
    .ce14(max1_V_0_ce14),
    .q14(max1_V_0_q14),
    .address15(grp_convolution2_fix_fu_654_m_0_0_0_0_address15),
    .ce15(max1_V_0_ce15),
    .q15(max1_V_0_q15)
);

master_fix_conv2_0 #(
    .DataWidth( 35 ),
    .AddressRange( 672 ),
    .AddressWidth( 10 ))
conv2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_0_address0),
    .ce0(conv2_0_ce0),
    .we0(conv2_0_we0),
    .d0(grp_convolution2_fix_fu_654_out_0_d0),
    .q0(conv2_0_q0)
);

master_fix_max2_V_0 #(
    .DataWidth( 35 ),
    .AddressRange( 224 ),
    .AddressWidth( 8 ))
max2_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max2_V_0_address0),
    .ce0(max2_V_0_ce0),
    .we0(max2_V_0_we0),
    .d0(max2_V_0_d0),
    .q0(max2_V_0_q0)
);

master_fix_den1_V_0 #(
    .DataWidth( 35 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
den1_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(den1_V_0_address0),
    .ce0(den1_V_0_ce0),
    .we0(den1_V_0_we0),
    .d0(den1_V_0_d0),
    .q0(den1_V_0_q0)
);

master_fix_convolution1_fix grp_convolution1_fix_fu_620(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution1_fix_fu_620_ap_start),
    .ap_done(grp_convolution1_fix_fu_620_ap_done),
    .ap_idle(grp_convolution1_fix_fu_620_ap_idle),
    .ap_ready(grp_convolution1_fix_fu_620_ap_ready),
    .input_r_address0(grp_convolution1_fix_fu_620_input_r_address0),
    .input_r_ce0(grp_convolution1_fix_fu_620_input_r_ce0),
    .input_r_q0(input_r_q0),
    .out_r_address0(grp_convolution1_fix_fu_620_out_r_address0),
    .out_r_ce0(grp_convolution1_fix_fu_620_out_r_ce0),
    .out_r_we0(grp_convolution1_fix_fu_620_out_r_we0),
    .out_r_d0(grp_convolution1_fix_fu_620_out_r_d0)
);

master_fix_convolution2_fix grp_convolution2_fix_fu_654(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution2_fix_fu_654_ap_start),
    .ap_done(grp_convolution2_fix_fu_654_ap_done),
    .ap_idle(grp_convolution2_fix_fu_654_ap_idle),
    .ap_ready(grp_convolution2_fix_fu_654_ap_ready),
    .m_0_0_0_0_address0(grp_convolution2_fix_fu_654_m_0_0_0_0_address0),
    .m_0_0_0_0_ce0(grp_convolution2_fix_fu_654_m_0_0_0_0_ce0),
    .m_0_0_0_0_q0(max1_V_0_q0),
    .m_0_0_0_0_address1(grp_convolution2_fix_fu_654_m_0_0_0_0_address1),
    .m_0_0_0_0_ce1(grp_convolution2_fix_fu_654_m_0_0_0_0_ce1),
    .m_0_0_0_0_q1(max1_V_0_q1),
    .m_0_0_0_0_address2(grp_convolution2_fix_fu_654_m_0_0_0_0_address2),
    .m_0_0_0_0_ce2(grp_convolution2_fix_fu_654_m_0_0_0_0_ce2),
    .m_0_0_0_0_q2(max1_V_0_q2),
    .m_0_0_0_0_address3(grp_convolution2_fix_fu_654_m_0_0_0_0_address3),
    .m_0_0_0_0_ce3(grp_convolution2_fix_fu_654_m_0_0_0_0_ce3),
    .m_0_0_0_0_q3(max1_V_0_q3),
    .m_0_0_0_0_address4(grp_convolution2_fix_fu_654_m_0_0_0_0_address4),
    .m_0_0_0_0_ce4(grp_convolution2_fix_fu_654_m_0_0_0_0_ce4),
    .m_0_0_0_0_q4(max1_V_0_q4),
    .m_0_0_0_0_address5(grp_convolution2_fix_fu_654_m_0_0_0_0_address5),
    .m_0_0_0_0_ce5(grp_convolution2_fix_fu_654_m_0_0_0_0_ce5),
    .m_0_0_0_0_q5(max1_V_0_q5),
    .m_0_0_0_0_address6(grp_convolution2_fix_fu_654_m_0_0_0_0_address6),
    .m_0_0_0_0_ce6(grp_convolution2_fix_fu_654_m_0_0_0_0_ce6),
    .m_0_0_0_0_q6(max1_V_0_q6),
    .m_0_0_0_0_address7(grp_convolution2_fix_fu_654_m_0_0_0_0_address7),
    .m_0_0_0_0_ce7(grp_convolution2_fix_fu_654_m_0_0_0_0_ce7),
    .m_0_0_0_0_q7(max1_V_0_q7),
    .m_0_0_0_0_address8(grp_convolution2_fix_fu_654_m_0_0_0_0_address8),
    .m_0_0_0_0_ce8(grp_convolution2_fix_fu_654_m_0_0_0_0_ce8),
    .m_0_0_0_0_q8(max1_V_0_q8),
    .m_0_0_0_0_address9(grp_convolution2_fix_fu_654_m_0_0_0_0_address9),
    .m_0_0_0_0_ce9(grp_convolution2_fix_fu_654_m_0_0_0_0_ce9),
    .m_0_0_0_0_q9(max1_V_0_q9),
    .m_0_0_0_0_address10(grp_convolution2_fix_fu_654_m_0_0_0_0_address10),
    .m_0_0_0_0_ce10(grp_convolution2_fix_fu_654_m_0_0_0_0_ce10),
    .m_0_0_0_0_q10(max1_V_0_q10),
    .m_0_0_0_0_address11(grp_convolution2_fix_fu_654_m_0_0_0_0_address11),
    .m_0_0_0_0_ce11(grp_convolution2_fix_fu_654_m_0_0_0_0_ce11),
    .m_0_0_0_0_q11(max1_V_0_q11),
    .m_0_0_0_0_address12(grp_convolution2_fix_fu_654_m_0_0_0_0_address12),
    .m_0_0_0_0_ce12(grp_convolution2_fix_fu_654_m_0_0_0_0_ce12),
    .m_0_0_0_0_q12(max1_V_0_q12),
    .m_0_0_0_0_address13(grp_convolution2_fix_fu_654_m_0_0_0_0_address13),
    .m_0_0_0_0_ce13(grp_convolution2_fix_fu_654_m_0_0_0_0_ce13),
    .m_0_0_0_0_q13(max1_V_0_q13),
    .m_0_0_0_0_address14(grp_convolution2_fix_fu_654_m_0_0_0_0_address14),
    .m_0_0_0_0_ce14(grp_convolution2_fix_fu_654_m_0_0_0_0_ce14),
    .m_0_0_0_0_q14(max1_V_0_q14),
    .m_0_0_0_0_address15(grp_convolution2_fix_fu_654_m_0_0_0_0_address15),
    .m_0_0_0_0_ce15(grp_convolution2_fix_fu_654_m_0_0_0_0_ce15),
    .m_0_0_0_0_q15(max1_V_0_q15),
    .out_0_address0(grp_convolution2_fix_fu_654_out_0_address0),
    .out_0_ce0(grp_convolution2_fix_fu_654_out_0_ce0),
    .out_0_we0(grp_convolution2_fix_fu_654_out_0_we0),
    .out_0_d0(grp_convolution2_fix_fu_654_out_0_d0)
);

master_fix_master_fix_Pipeline_VITIS_LOOP_498_1 grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start),
    .ap_done(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_done),
    .ap_idle(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_idle),
    .ap_ready(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_ready),
    .den2_V_0_0_05(den2_V_0_3_fu_352),
    .den2_V_0_1_06(den2_V_0_3_1_fu_356),
    .den2_V_0_2_07(den2_V_0_3_2_fu_360),
    .den2_V_0_3_08(den2_V_0_3_3_fu_364),
    .m_3_04_out(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out),
    .m_3_04_out_ap_vld(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out_ap_vld),
    .m_2_03_out(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out),
    .m_2_03_out_ap_vld(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out_ap_vld),
    .m_3_7_out(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out),
    .m_3_7_out_ap_vld(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out_ap_vld),
    .m_3_10_out(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out),
    .m_3_10_out_ap_vld(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out_ap_vld)
);

master_fix_master_fix_Pipeline_VITIS_LOOP_509_3 grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start),
    .ap_done(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done),
    .ap_idle(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_idle),
    .ap_ready(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_ready),
    .m_3_10_reload(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out),
    .m_3_7_reload(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out),
    .m_2_03_reload(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out),
    .m_3_04_reload(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out),
    .sum(reg_763),
    .out_r_address0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_address0),
    .out_r_ce0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_ce0),
    .out_r_we0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_we0),
    .out_r_d0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_d0),
    .grp_fu_753_p_din0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din0),
    .grp_fu_753_p_din1(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din1),
    .grp_fu_753_p_dout0(grp_fu_753_p2),
    .grp_fu_753_p_ce(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_ce)
);

master_fix_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U323(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_fu_368),
    .din1(tmp_7_reg_2055),
    .ce(1'b1),
    .dout(grp_fu_749_p2)
);

master_fix_dexp_64ns_64ns_64_18_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dexp_64ns_64ns_64_18_full_dsp_1_U324(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din0),
    .din1(grp_fu_753_p1),
    .ce(grp_fu_753_ce),
    .dout(grp_fu_753_p2)
);

master_fix_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U325(
    .din0(mul_fu_852_p0),
    .din1(mul_fu_852_p1),
    .dout(mul_fu_852_p2)
);

master_fix_urem_7ns_3ns_2_11_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_seq_1_U326(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_870_ap_start),
    .done(grp_fu_870_ap_done),
    .din0(empty_41_fu_840_p1),
    .din1(grp_fu_870_p1),
    .ce(1'b1),
    .dout(grp_fu_870_p2)
);

master_fix_mul_21s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_21s_35ns_55_2_1_U327(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstDense_f_V_load_reg_1895),
    .din1(grp_fu_1288_p1),
    .ce(1'b1),
    .dout(grp_fu_1288_p2)
);

master_fix_mux_42_36_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_x_U328(
    .din0(36'd68718728804),
    .din1(36'd571519),
    .din2(36'd68718843845),
    .din3(36'd68719379821),
    .din4(trunc_ln1171_1_fu_1367_p1),
    .dout(tmp_2_fu_1391_p6)
);

master_fix_mul_19s_35ns_54_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 54 ))
mul_19s_35ns_54_2_1_U329(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(secondDense_f_V_load_reg_2004),
    .din1(grp_fu_1492_p1),
    .ce(1'b1),
    .dout(grp_fu_1492_p2)
);

master_fix_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U330(
    .din0(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_10_out),
    .din1(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_7_out),
    .din2(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_2_03_out),
    .din3(grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_m_3_04_out),
    .din4(tmp_5_fu_1602_p5),
    .dout(tmp_5_fu_1602_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution1_fix_fu_620_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_convolution1_fix_fu_620_ap_start_reg <= 1'b1;
        end else if ((grp_convolution1_fix_fu_620_ap_ready == 1'b1)) begin
            grp_convolution1_fix_fu_620_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution2_fix_fu_654_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln422_fu_785_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_convolution2_fix_fu_654_ap_start_reg <= 1'b1;
        end else if ((grp_convolution2_fix_fu_654_ap_ready == 1'b1)) begin
            grp_convolution2_fix_fu_654_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln485_fu_1379_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
            grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg <= 1'b1;
        end else if ((grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_ready == 1'b1)) begin
            grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln504_fu_1586_p2 == 1'd1))) begin
            grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg <= 1'b1;
        end else if ((grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_ready == 1'b1)) begin
            grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_i_i_i_lcssa_lcssa7_i_reg_566 <= sext_ln467_fu_1176_p1;
    end else if (((icmp_ln471_fu_1270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        add_i_i_i_lcssa_lcssa7_i_reg_566 <= lhs_2_reg_587;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_785_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        d_1_fu_340 <= 5'd0;
    end else if (((icmp_ln445_fu_1026_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        d_1_fu_340 <= add_ln443_reg_1747;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        d_2_fu_344 <= 5'd0;
    end else if (((icmp_ln467_fu_1205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        d_2_fu_344 <= add_ln464_reg_1803;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln464_fu_1159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        d_3_fu_348 <= 3'd0;
    end else if (((icmp_ln488_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        d_3_fu_348 <= add_ln485_reg_1937;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_300 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln426_fu_864_p2 == 1'd1) | (icmp_ln424_fu_828_p2 == 1'd1)))) begin
        d_fu_300 <= add_ln422_reg_1665;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln485_fu_1379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        den2_V_0_0_reg_610 <= tmp_2_fu_1391_p6;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        den2_V_0_0_reg_610 <= add_ln415_fu_1565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        empty_42_reg_500 <= max1_V_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        empty_42_reg_500 <= zext_ln430_fu_976_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln467_fu_1205_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        h_reg_576 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        h_reg_576 <= add_ln471_reg_1885;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        i_1_reg_522 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i_1_reg_522 <= add_ln445_reg_1767;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_2_reg_555 <= 4'd0;
    end else if (((icmp_ln471_fu_1270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        i_2_reg_555 <= add_ln467_reg_1867;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln485_fu_1379_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        i_3_fu_372 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln504_fu_1586_p2 == 1'd0))) begin
        i_3_fu_372 <= add_ln504_fu_1592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln485_fu_1379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        i_4_reg_599 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        i_4_reg_599 <= add_ln488_reg_1989;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_fu_785_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_489 <= 8'd0;
    end else if (((icmp_ln430_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_reg_489 <= add_ln424_reg_1685;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_511 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j_reg_511 <= add_ln430_reg_1724;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln467_fu_1205_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        lhs_2_reg_587 <= add_i_i_i_lcssa_lcssa7_i_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        lhs_2_reg_587 <= add_ln415_1_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        phi_mul_reg_533 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        phi_mul_reg_533 <= next_mul_reg_1772;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_991_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        phi_urem_reg_544 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        phi_urem_reg_544 <= select_ln453_reg_1785;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln485_fu_1379_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        sum_fu_368 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        sum_fu_368 <= sum_1_reg_2060;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln422_reg_1665 <= add_ln422_fu_791_p2;
        zext_ln422_1_reg_1657[3 : 0] <= zext_ln422_1_fu_781_p1[3 : 0];
        zext_ln422_reg_1652[3 : 0] <= zext_ln422_fu_777_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln424_reg_1685 <= add_ln424_fu_834_p2;
        zext_ln424_reg_1677[10 : 0] <= zext_ln424_fu_824_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln426_fu_864_p2 == 1'd0) & (icmp_ln424_fu_828_p2 == 1'd0))) begin
        add_ln428_reg_1698 <= add_ln428_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln430_reg_1724 <= add_ln430_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln443_reg_1747 <= add_ln443_fu_997_p2;
        zext_ln443_1_reg_1739[4 : 0] <= zext_ln443_1_fu_987_p1[4 : 0];
        zext_ln443_reg_1734[4 : 0] <= zext_ln443_fu_983_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln445_reg_1767 <= add_ln445_fu_1032_p2;
        conv2_0_addr_reg_1759 <= zext_ln453_fu_1021_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln464_reg_1803 <= add_ln464_fu_1165_p2;
        sub_ln1171_reg_1795[7 : 1] <= sub_ln1171_fu_1153_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln467_reg_1867 <= add_ln467_fu_1211_p2;
        tmp_18_cast_reg_1854[11 : 4] <= tmp_18_cast_fu_1189_p3[11 : 4];
        tmp_8_reg_1859[7 : 4] <= tmp_8_fu_1197_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln471_reg_1885 <= add_ln471_fu_1276_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln485_reg_1937 <= add_ln485_fu_1385_p2;
        tmp_16_cast_reg_1929[5 : 4] <= tmp_16_cast_fu_1371_p3[5 : 4];
        trunc_ln1171_1_reg_1925 <= trunc_ln1171_1_fu_1367_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln488_reg_1989 <= add_ln488_fu_1456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln464_fu_1159_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        den1_V_0_addr_reg_1813 <= zext_ln464_fu_1123_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln488_fu_1450_p2 == 1'd1) & (trunc_ln1171_1_reg_1925 == 2'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        den2_V_0_3_1_fu_356 <= den2_V_0_0_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln488_fu_1450_p2 == 1'd1) & (trunc_ln1171_1_reg_1925 == 2'd2) & (1'b1 == ap_CS_fsm_state34))) begin
        den2_V_0_3_2_fu_360 <= den2_V_0_0_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln488_fu_1450_p2 == 1'd1) & (trunc_ln1171_1_reg_1925 == 2'd3) & (1'b1 == ap_CS_fsm_state34))) begin
        den2_V_0_3_3_fu_364 <= den2_V_0_0_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln488_fu_1450_p2 == 1'd1) & (trunc_ln1171_1_reg_1925 == 2'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        den2_V_0_3_fu_352 <= den2_V_0_0_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        firstDense_f_V_load_reg_1895 <= firstDense_f_V_q0;
        r_V_2_reg_1890 <= max2_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max1_V_0_addr_reg_1706 <= zext_ln428_fu_913_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln445_fu_1026_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        max2_V_0_addr_reg_1780 <= zext_ln449_fu_1077_p1;
        next_mul_reg_1772 <= next_mul_fu_1038_p2;
        select_ln453_reg_1785 <= select_ln453_fu_1094_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        r_V_4_reg_1910 <= grp_fu_1288_p2;
        trunc_ln727_1_reg_1915 <= trunc_ln727_1_fu_1294_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        r_V_5_reg_2019 <= grp_fu_1492_p2;
        trunc_ln727_reg_2025 <= trunc_ln727_fu_1498_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        r_V_reg_1999 <= den1_V_0_q0;
        secondDense_f_V_load_reg_2004 <= secondDense_f_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state41) & (icmp_ln504_fu_1586_p2 == 1'd1)))) begin
        reg_763 <= sum_fu_368;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        select_ln454_reg_1790 <= select_ln454_fu_1112_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        sum_1_reg_2060 <= grp_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln504_fu_1586_p2 == 1'd0))) begin
        tmp_5_reg_2050 <= tmp_5_fu_1602_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_7_reg_2055 <= grp_fu_753_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_convolution2_fix_fu_654_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_convolution1_fix_fu_620_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

always @ (*) begin
    if ((grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done == 1'b0)) begin
        ap_ST_fsm_state68_blk = 1'b1;
    end else begin
        ap_ST_fsm_state68_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1_address0 = zext_ln432_4_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_address0 = grp_convolution1_fix_fu_620_out_r_address0;
    end else begin
        conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        conv1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_ce0 = grp_convolution1_fix_fu_620_out_r_ce0;
    end else begin
        conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_we0 = grp_convolution1_fix_fu_620_out_r_we0;
    end else begin
        conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        conv2_0_address0 = conv2_0_addr_reg_1759;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2_0_address0 = grp_convolution2_fix_fu_654_out_0_address0;
    end else begin
        conv2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        conv2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2_0_ce0 = grp_convolution2_fix_fu_654_out_0_ce0;
    end else begin
        conv2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv2_0_we0 = grp_convolution2_fix_fu_654_out_0_we0;
    end else begin
        conv2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        den1_V_0_address0 = zext_ln736_fu_1431_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        den1_V_0_address0 = den1_V_0_addr_reg_1813;
    end else begin
        den1_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state27))) begin
        den1_V_0_ce0 = 1'b1;
    end else begin
        den1_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln467_fu_1205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        den1_V_0_we0 = 1'b1;
    end else begin
        den1_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        firstDense_f_V_ce0 = 1'b1;
    end else begin
        firstDense_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_753_ce = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_ce;
    end else begin
        grp_fu_753_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_753_p1 = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_grp_fu_753_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_753_p1 = tmp_5_reg_2050;
    end else begin
        grp_fu_753_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln426_fu_864_p2 == 1'd0) & (icmp_ln424_fu_828_p2 == 1'd0))) begin
        grp_fu_870_ap_start = 1'b1;
    end else begin
        grp_fu_870_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15))) begin
        max1_V_0_address0 = max1_V_0_addr_reg_1706;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max1_V_0_address0 = zext_ln428_fu_913_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_address0 = grp_convolution2_fix_fu_654_m_0_0_0_0_address0;
    end else begin
        max1_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        max1_V_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce0 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce0;
    end else begin
        max1_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce1 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce1;
    end else begin
        max1_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce10 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce10;
    end else begin
        max1_V_0_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce11 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce11;
    end else begin
        max1_V_0_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce12 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce12;
    end else begin
        max1_V_0_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce13 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce13;
    end else begin
        max1_V_0_ce13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce14 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce14;
    end else begin
        max1_V_0_ce14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce15 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce15;
    end else begin
        max1_V_0_ce15 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce2 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce2;
    end else begin
        max1_V_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce3 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce3;
    end else begin
        max1_V_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce4 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce4;
    end else begin
        max1_V_0_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce5 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce5;
    end else begin
        max1_V_0_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce6 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce6;
    end else begin
        max1_V_0_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce7 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce7;
    end else begin
        max1_V_0_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce8 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce8;
    end else begin
        max1_V_0_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max1_V_0_ce9 = grp_convolution2_fix_fu_654_m_0_0_0_0_ce9;
    end else begin
        max1_V_0_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        max1_V_0_d0 = empty_42_reg_500;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max1_V_0_d0 = 36'd0;
    end else begin
        max1_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln430_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln427_fu_907_p2 == 1'd1)))) begin
        max1_V_0_we0 = 1'b1;
    end else begin
        max1_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        max2_V_0_address0 = zext_ln1169_fu_1265_p1;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22))) begin
        max2_V_0_address0 = max2_V_0_addr_reg_1780;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        max2_V_0_address0 = zext_ln449_fu_1077_p1;
    end else begin
        max2_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22))) begin
        max2_V_0_ce0 = 1'b1;
    end else begin
        max2_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        max2_V_0_d0 = select_ln454_reg_1790;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        max2_V_0_d0 = 35'd0;
    end else begin
        max2_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((icmp_ln445_fu_1026_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln448_fu_1048_p2 == 1'd1)))) begin
        max2_V_0_we0 = 1'b1;
    end else begin
        max2_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        secondDense_f_V_ce0 = 1'b1;
    end else begin
        secondDense_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        thirdBias_f_V_ce0 = 1'b1;
    end else begin
        thirdBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_convolution1_fix_fu_620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln422_fu_785_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln426_fu_864_p2 == 1'd1) | (icmp_ln424_fu_828_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln430_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_convolution2_fix_fu_654_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln443_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln445_fu_1026_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln464_fu_1159_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln467_fu_1205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln471_fu_1270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln485_fu_1379_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln488_fu_1450_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln504_fu_1586_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state68 : begin
            if (((grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_fu_1260_p2 = (tmp_8_reg_1859 + zext_ln1171_4_fu_1242_p1);

assign add_ln1171_1_fu_1440_p2 = (tmp_16_cast_reg_1929 + zext_ln1171_2_fu_1436_p1);

assign add_ln1171_2_fu_1250_p2 = (tmp_18_cast_reg_1854 + zext_ln1171_5_fu_1246_p1);

assign add_ln1171_fu_1184_p2 = (sub_ln1171_reg_1795 + zext_ln1171_1_fu_1180_p1);

assign add_ln415_1_fu_1358_p2 = (p_Val2_5_fu_1311_p4 + zext_ln415_1_fu_1354_p1);

assign add_ln415_fu_1565_p2 = (p_Val2_3_fu_1519_p4 + zext_ln415_fu_1561_p1);

assign add_ln422_fu_791_p2 = (d_fu_300 + 4'd1);

assign add_ln424_fu_834_p2 = (i_reg_489 + 8'd1);

assign add_ln426_fu_858_p2 = ($signed(i_cast_cast_fu_844_p1) + $signed(8'd130));

assign add_ln428_fu_894_p2 = (tmp_13_cast_fu_886_p3 + zext_ln422_1_reg_1657);

assign add_ln430_fu_948_p2 = (j_reg_511 + 2'd1);

assign add_ln432_1_fu_932_p2 = (shl_ln432_fu_926_p2 + zext_ln422_reg_1652);

assign add_ln432_fu_921_p2 = (zext_ln424_reg_1677 + zext_ln432_3_fu_917_p1);

assign add_ln443_fu_997_p2 = (d_1_fu_340 + 5'd1);

assign add_ln445_fu_1032_p2 = (i_1_reg_522 + 6'd1);

assign add_ln449_fu_1072_p2 = (tmp_15_cast_fu_1064_p3 + zext_ln443_reg_1734);

assign add_ln453_1_fu_1082_p2 = (phi_urem_reg_544 + 6'd1);

assign add_ln453_fu_1016_p2 = (tmp_3_fu_1008_p3 + zext_ln443_1_reg_1739);

assign add_ln464_fu_1165_p2 = (d_2_fu_344 + 5'd1);

assign add_ln467_fu_1211_p2 = (i_2_reg_555 + 4'd1);

assign add_ln471_fu_1276_p2 = (h_reg_576 + 5'd1);

assign add_ln485_fu_1385_p2 = (d_3_fu_348 + 3'd1);

assign add_ln488_fu_1456_p2 = (i_4_reg_599 + 5'd1);

assign add_ln504_fu_1592_p2 = (i_3_fu_372 + 3'd1);

assign and_ln412_1_fu_1348_p2 = (p_Result_11_fu_1329_p3 & or_ln412_1_fu_1342_p2);

assign and_ln412_fu_1555_p2 = (p_Result_12_fu_1537_p3 & or_ln412_fu_1549_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign den1_V_0_d0 = ((tmp_9_fu_1221_p3[0:0] == 1'b1) ? 35'd0 : trunc_ln467_fu_1217_p1);

assign empty_41_fu_840_p1 = i_reg_489[6:0];

assign firstDense_f_V_address0 = zext_ln1171_6_fu_1255_p1;

assign grp_convolution1_fix_fu_620_ap_start = grp_convolution1_fix_fu_620_ap_start_reg;

assign grp_convolution2_fix_fu_654_ap_start = grp_convolution2_fix_fu_654_ap_start_reg;

assign grp_fu_1288_p1 = grp_fu_1288_p10;

assign grp_fu_1288_p10 = r_V_2_reg_1890;

assign grp_fu_1492_p1 = grp_fu_1492_p10;

assign grp_fu_1492_p10 = r_V_reg_1999;

assign grp_fu_870_p1 = 7'd3;

assign grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start = grp_master_fix_Pipeline_VITIS_LOOP_498_1_fu_726_ap_start_reg;

assign grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_ap_start_reg;

assign i_cast_cast_fu_844_p1 = empty_41_fu_840_p1;

assign icmp_ln1548_1_fu_958_p2 = (($signed(empty_42_reg_500) < $signed(zext_ln432_fu_954_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1548_fu_1106_p2 = ((max2_V_0_q0 < conv2_0_q0) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_785_p2 = ((d_fu_300 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln424_fu_828_p2 = ((i_reg_489 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln426_fu_864_p2 = ((add_ln426_fu_858_p2 < 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln427_fu_907_p2 = ((trunc_ln427_fu_903_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln430_fu_942_p2 = ((j_reg_511 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_991_p2 = ((d_1_fu_340 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln445_fu_1026_p2 = ((i_1_reg_522 == 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln448_fu_1048_p2 = ((trunc_ln448_fu_1044_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln453_fu_1088_p2 = ((add_ln453_1_fu_1082_p2 < 6'd3) ? 1'b1 : 1'b0);

assign icmp_ln464_fu_1159_p2 = ((d_2_fu_344 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln467_fu_1205_p2 = ((i_2_reg_555 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln471_fu_1270_p2 = ((h_reg_576 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln485_fu_1379_p2 = ((d_3_fu_348 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln488_fu_1450_p2 = ((i_4_reg_599 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln504_fu_1586_p2 = ((i_3_fu_372 == 3'd4) ? 1'b1 : 1'b0);

assign input_r_address0 = grp_convolution1_fix_fu_620_input_r_address0;

assign input_r_ce0 = grp_convolution1_fix_fu_620_input_r_ce0;

assign lhs_1_fu_1502_p3 = {{den2_V_0_0_reg_610}, {19'd0}};

assign lhs_3_fu_1298_p3 = {{lhs_2_reg_587}, {19'd0}};

assign mul_fu_852_p0 = mul_fu_852_p00;

assign mul_fu_852_p00 = empty_41_fu_840_p1;

assign mul_fu_852_p1 = 15'd171;

assign next_mul_fu_1038_p2 = (phi_mul_reg_533 + 12'd86);

assign or_ln412_1_fu_1342_p2 = (r_1_fu_1337_p2 | p_Result_10_fu_1321_p3);

assign or_ln412_fu_1549_p2 = (r_fu_1544_p2 | p_Result_s_fu_1529_p3);

assign out_r_address0 = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_address0;

assign out_r_ce0 = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_ce0;

assign out_r_d0 = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_d0;

assign out_r_we0 = grp_master_fix_Pipeline_VITIS_LOOP_509_3_fu_738_out_r_we0;

assign p_Result_10_fu_1321_p3 = ret_V_fu_1306_p2[32'd19];

assign p_Result_11_fu_1329_p3 = ret_V_fu_1306_p2[32'd18];

assign p_Result_12_fu_1537_p3 = r_V_5_reg_2019[32'd18];

assign p_Result_s_fu_1529_p3 = ret_V_2_fu_1513_p2[32'd19];

assign p_Val2_3_fu_1519_p4 = {{ret_V_2_fu_1513_p2[54:19]}};

assign p_Val2_5_fu_1311_p4 = {{ret_V_fu_1306_p2[54:19]}};

assign r_1_fu_1337_p2 = ((trunc_ln727_1_reg_1915 != 18'd0) ? 1'b1 : 1'b0);

assign r_fu_1544_p2 = ((trunc_ln727_reg_2025 != 18'd0) ? 1'b1 : 1'b0);

assign ret_V_2_fu_1513_p2 = ($signed(lhs_1_fu_1502_p3) + $signed(sext_ln1245_fu_1510_p1));

assign ret_V_fu_1306_p2 = (lhs_3_fu_1298_p3 + r_V_4_reg_1910);

assign secondDense_f_V_address0 = zext_ln1171_3_fu_1445_p1;

assign select_ln433_fu_968_p3 = ((icmp_ln1548_1_fu_958_p2[0:0] == 1'b1) ? conv1_q0 : trunc_ln430_fu_964_p1);

assign select_ln453_fu_1094_p3 = ((icmp_ln453_fu_1088_p2[0:0] == 1'b1) ? add_ln453_1_fu_1082_p2 : 6'd0);

assign select_ln454_fu_1112_p3 = ((icmp_ln1548_fu_1106_p2[0:0] == 1'b1) ? conv2_0_q0 : max2_V_0_q0);

assign sext_ln1245_fu_1510_p1 = r_V_5_reg_2019;

assign sext_ln467_fu_1176_p1 = $signed(thirdBias_f_V_q0);

assign shl_ln432_fu_926_p2 = add_ln432_fu_921_p2 << 12'd3;

assign sub_ln1171_fu_1153_p2 = (tmp_4_cast_fu_1133_p3 - zext_ln1171_fu_1149_p1);

assign sub_ln432_fu_818_p2 = (zext_ln432_2_fu_814_p1 - zext_ln432_1_fu_802_p1);

assign thirdBias_f_V_address0 = zext_ln464_fu_1123_p1;

assign tmp_13_cast_fu_886_p3 = {{tmp_4_fu_876_p4}, {3'd0}};

assign tmp_15_cast_fu_1064_p3 = {{tmp_6_fu_1054_p4}, {4'd0}};

assign tmp_16_cast_fu_1371_p3 = {{trunc_ln1171_1_fu_1367_p1}, {4'd0}};

assign tmp_18_cast_fu_1189_p3 = {{add_ln1171_fu_1184_p2}, {4'd0}};

assign tmp_1_fu_806_p3 = {{i_reg_489}, {2'd0}};

assign tmp_3_fu_1008_p3 = {{i_1_reg_522}, {4'd0}};

assign tmp_4_cast_fu_1133_p3 = {{trunc_ln1171_fu_1129_p1}, {4'd0}};

assign tmp_4_fu_876_p4 = {{mul_fu_852_p2[14:9]}};

assign tmp_5_fu_1602_p5 = i_3_fu_372[1:0];

assign tmp_6_fu_1054_p4 = {{phi_mul_reg_533[11:8]}};

assign tmp_8_fu_1197_p3 = {{i_2_reg_555}, {4'd0}};

assign tmp_9_fu_1221_p3 = add_i_i_i_lcssa_lcssa7_i_reg_566[32'd35];

assign tmp_s_fu_1141_p3 = {{d_2_fu_344}, {1'd0}};

assign trunc_ln1171_1_fu_1367_p1 = d_3_fu_348[1:0];

assign trunc_ln1171_fu_1129_p1 = d_2_fu_344[3:0];

assign trunc_ln427_fu_903_p1 = grp_fu_870_p2[1:0];

assign trunc_ln430_fu_964_p1 = empty_42_reg_500[34:0];

assign trunc_ln448_fu_1044_p1 = phi_urem_reg_544[1:0];

assign trunc_ln467_fu_1217_p1 = add_i_i_i_lcssa_lcssa7_i_reg_566[34:0];

assign trunc_ln727_1_fu_1294_p1 = grp_fu_1288_p2[17:0];

assign trunc_ln727_fu_1498_p1 = grp_fu_1492_p2[17:0];

assign zext_ln1169_fu_1265_p1 = add_ln1169_fu_1260_p2;

assign zext_ln1171_1_fu_1180_p1 = i_2_reg_555;

assign zext_ln1171_2_fu_1436_p1 = i_4_reg_599;

assign zext_ln1171_3_fu_1445_p1 = add_ln1171_1_fu_1440_p2;

assign zext_ln1171_4_fu_1242_p1 = h_reg_576;

assign zext_ln1171_5_fu_1246_p1 = h_reg_576;

assign zext_ln1171_6_fu_1255_p1 = add_ln1171_2_fu_1250_p2;

assign zext_ln1171_fu_1149_p1 = tmp_s_fu_1141_p3;

assign zext_ln415_1_fu_1354_p1 = and_ln412_1_fu_1348_p2;

assign zext_ln415_fu_1561_p1 = and_ln412_fu_1555_p2;

assign zext_ln422_1_fu_781_p1 = d_fu_300;

assign zext_ln422_fu_777_p1 = d_fu_300;

assign zext_ln424_fu_824_p1 = sub_ln432_fu_818_p2;

assign zext_ln428_fu_913_p1 = add_ln428_reg_1698;

assign zext_ln430_fu_976_p1 = select_ln433_fu_968_p3;

assign zext_ln432_1_fu_802_p1 = i_reg_489;

assign zext_ln432_2_fu_814_p1 = tmp_1_fu_806_p3;

assign zext_ln432_3_fu_917_p1 = j_reg_511;

assign zext_ln432_4_fu_937_p1 = add_ln432_1_fu_932_p2;

assign zext_ln432_fu_954_p1 = conv1_q0;

assign zext_ln443_1_fu_987_p1 = d_1_fu_340;

assign zext_ln443_fu_983_p1 = d_1_fu_340;

assign zext_ln449_fu_1077_p1 = add_ln449_fu_1072_p2;

assign zext_ln453_fu_1021_p1 = add_ln453_fu_1016_p2;

assign zext_ln464_fu_1123_p1 = d_2_fu_344;

assign zext_ln736_fu_1431_p1 = i_4_reg_599;

always @ (posedge ap_clk) begin
    zext_ln422_reg_1652[11:4] <= 8'b00000000;
    zext_ln422_1_reg_1657[8:4] <= 5'b00000;
    zext_ln424_reg_1677[11] <= 1'b0;
    zext_ln443_reg_1734[7:5] <= 3'b000;
    zext_ln443_1_reg_1739[9:5] <= 5'b00000;
    sub_ln1171_reg_1795[0] <= 1'b0;
    tmp_18_cast_reg_1854[3:0] <= 4'b0000;
    tmp_8_reg_1859[3:0] <= 4'b0000;
    tmp_16_cast_reg_1929[3:0] <= 4'b0000;
end

endmodule //master_fix
