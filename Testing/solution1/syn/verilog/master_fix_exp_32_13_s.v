// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_exp_32_13_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [2:0] f_x_msb_4_h_table_V_address0;
reg    f_x_msb_4_h_table_V_ce0;
wire   [5:0] f_x_msb_4_h_table_V_q0;
wire   [2:0] f_x_msb_4_l_table_V_address0;
reg    f_x_msb_4_l_table_V_ce0;
wire   [6:0] f_x_msb_4_l_table_V_q0;
wire   [4:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [31:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [45:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [49:0] exp_x_msb_1_table_V_q0;
wire   [0:0] tmp_fu_251_p3;
reg   [0:0] tmp_reg_834;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_834_pp0_iter1_reg;
reg   [0:0] tmp_reg_834_pp0_iter2_reg;
reg   [6:0] p_Result_s_reg_840;
reg   [6:0] p_Result_s_reg_840_pp0_iter1_reg;
reg   [7:0] tmp_29_reg_845;
reg   [7:0] tmp_29_reg_845_pp0_iter1_reg;
wire   [4:0] tmp_30_fu_409_p4;
reg   [4:0] tmp_30_reg_851;
wire   [2:0] tmp_31_fu_419_p1;
reg   [2:0] tmp_31_reg_857;
wire   [0:0] or_ln300_7_fu_476_p2;
reg   [0:0] or_ln300_7_reg_877;
reg   [0:0] or_ln300_7_reg_877_pp0_iter1_reg;
reg   [0:0] or_ln300_7_reg_877_pp0_iter2_reg;
wire   [47:0] exp_x_msb_3_4_lsb_m_1_V_fu_561_p2;
reg   [47:0] exp_x_msb_3_4_lsb_m_1_V_reg_882;
reg   [49:0] exp_x_msb_2_3_4_lsb_m_1_V_reg_893;
wire   [63:0] zext_ln573_fu_423_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln573_1_fu_429_p1;
wire   [63:0] zext_ln573_2_fu_567_p1;
wire   [63:0] zext_ln573_3_fu_674_p1;
wire   [18:0] trunc_ln640_fu_239_p1;
wire   [0:0] tmp_11_fu_259_p3;
wire   [0:0] tmp_12_fu_273_p3;
wire   [0:0] tmp_13_fu_287_p3;
wire   [0:0] tmp_14_fu_301_p3;
wire   [0:0] tmp_15_fu_315_p3;
wire   [0:0] tmp_19_fu_329_p3;
wire   [0:0] tmp_20_fu_343_p3;
wire   [0:0] tmp_21_fu_357_p3;
wire   [4:0] p_Result_5_fu_229_p4;
wire   [22:0] p_Result_6_fu_243_p3;
wire   [0:0] icmp_ln1551_fu_371_p2;
wire   [0:0] icmp_ln1549_fu_377_p2;
wire   [0:0] xor_ln222_2_fu_281_p2;
wire   [0:0] overf_fu_267_p2;
wire   [0:0] xor_ln222_3_fu_295_p2;
wire   [0:0] xor_ln222_4_fu_309_p2;
wire   [0:0] or_ln300_1_fu_440_p2;
wire   [0:0] or_ln300_fu_434_p2;
wire   [0:0] xor_ln222_fu_323_p2;
wire   [0:0] xor_ln222_5_fu_337_p2;
wire   [0:0] xor_ln222_7_fu_365_p2;
wire   [0:0] and_ln300_fu_383_p2;
wire   [0:0] or_ln300_4_fu_458_p2;
wire   [0:0] xor_ln222_6_fu_351_p2;
wire   [0:0] or_ln300_5_fu_464_p2;
wire   [0:0] or_ln300_3_fu_452_p2;
wire   [0:0] or_ln300_6_fu_470_p2;
wire   [0:0] or_ln300_2_fu_446_p2;
wire   [43:0] p_Result_9_fu_495_p4;
wire   [41:0] p_Result_8_fu_482_p6;
wire   [43:0] r_V_9_fu_512_p0;
wire   [41:0] r_V_9_fu_512_p1;
wire   [85:0] r_V_9_fu_512_p2;
wire   [30:0] trunc_ln8_fu_518_p4;
wire   [46:0] rhs_2_fu_532_p5;
wire   [42:0] zext_ln712_fu_547_p1;
wire   [42:0] zext_ln1245_fu_528_p1;
wire   [42:0] add_ln712_fu_551_p2;
wire   [47:0] zext_ln712_1_fu_557_p1;
wire   [47:0] zext_ln1245_1_fu_543_p1;
wire   [4:0] p_Result_10_fu_577_p4;
wire   [8:0] zext_ln712_4_fu_591_p1;
wire   [8:0] zext_ln712_2_fu_587_p1;
wire   [8:0] ret_V_5_fu_594_p2;
wire   [40:0] trunc_ln640_2_fu_600_p1;
wire   [49:0] p_Result_11_fu_604_p3;
wire   [49:0] r_V_10_fu_619_p0;
wire   [47:0] r_V_10_fu_619_p1;
wire   [97:0] r_V_10_fu_619_p2;
wire   [45:0] trunc_ln1245_2_fu_625_p4;
wire   [55:0] rhs_4_fu_639_p4;
wire   [55:0] zext_ln1245_2_fu_635_p1;
wire   [55:0] ret_V_6_fu_649_p2;
wire   [55:0] zext_ln1245_3_fu_655_p1;
wire   [55:0] ret_V_fu_658_p2;
wire   [7:0] p_Result_7_fu_571_p3;
wire   [0:0] xor_ln288_fu_679_p2;
wire   [49:0] r_V_fu_699_p0;
wire   [49:0] r_V_fu_699_p1;
wire   [99:0] r_V_fu_699_p2;
wire   [47:0] trunc_ln712_2_fu_705_p4;
wire   [49:0] zext_ln712_3_fu_715_p1;
wire   [49:0] y_l_V_fu_719_p2;
wire   [45:0] select_ln640_fu_684_p3;
wire   [45:0] y_V_fu_725_p4;
wire   [45:0] y_V_2_fu_735_p3;
wire   [1:0] tmp_25_fu_742_p4;
wire   [0:0] p_Result_s_65_fu_758_p3;
wire   [0:0] overf_1_fu_752_p2;
wire   [2:0] tmp_27_fu_772_p4;
wire   [0:0] icmp_ln533_fu_782_p2;
wire   [0:0] or_ln533_fu_766_p2;
wire   [4:0] tmp_28_fu_794_p4;
wire   [0:0] icmp_ln533_1_fu_804_p2;
wire   [0:0] or_ln533_1_fu_788_p2;
wire   [0:0] overf_2_fu_810_p2;
wire   [31:0] tmp_s_fu_816_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [97:0] r_V_10_fu_619_p00;
wire   [97:0] r_V_10_fu_619_p10;
wire   [85:0] r_V_9_fu_512_p00;
wire   [85:0] r_V_9_fu_512_p10;
wire   [99:0] r_V_fu_699_p00;
wire   [99:0] r_V_fu_699_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

master_fix_exp_32_13_s_f_x_msb_4_h_table_V #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
f_x_msb_4_h_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_4_h_table_V_address0),
    .ce0(f_x_msb_4_h_table_V_ce0),
    .q0(f_x_msb_4_h_table_V_q0)
);

master_fix_exp_32_13_s_f_x_msb_4_l_table_V #(
    .DataWidth( 7 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
f_x_msb_4_l_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_4_l_table_V_address0),
    .ce0(f_x_msb_4_l_table_V_ce0),
    .q0(f_x_msb_4_l_table_V_q0)
);

master_fix_exp_32_13_s_f_x_msb_3_table_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

master_fix_exp_32_13_s_f_x_msb_2_table_V #(
    .DataWidth( 46 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

master_fix_exp_32_13_s_exp_x_msb_1_table_V #(
    .DataWidth( 50 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

master_fix_mul_44ns_42ns_86_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 42 ),
    .dout_WIDTH( 86 ))
mul_44ns_42ns_86_1_1_U60(
    .din0(r_V_9_fu_512_p0),
    .din1(r_V_9_fu_512_p1),
    .dout(r_V_9_fu_512_p2)
);

master_fix_mul_50ns_48ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 98 ))
mul_50ns_48ns_98_1_1_U61(
    .din0(r_V_10_fu_619_p0),
    .din1(r_V_10_fu_619_p1),
    .dout(r_V_10_fu_619_p2)
);

master_fix_mul_50ns_50ns_100_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
mul_50ns_50ns_100_1_1_U62(
    .din0(r_V_fu_699_p0),
    .din1(r_V_fu_699_p1),
    .dout(r_V_fu_699_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln300_7_reg_877_pp0_iter1_reg == 1'd0))) begin
        exp_x_msb_2_3_4_lsb_m_1_V_reg_893 <= {{ret_V_fu_658_p2[55:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln300_7_reg_877 == 1'd0))) begin
        exp_x_msb_3_4_lsb_m_1_V_reg_882 <= exp_x_msb_3_4_lsb_m_1_V_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln300_7_reg_877 <= or_ln300_7_fu_476_p2;
        or_ln300_7_reg_877_pp0_iter1_reg <= or_ln300_7_reg_877;
        p_Result_s_reg_840 <= {{x[22:16]}};
        p_Result_s_reg_840_pp0_iter1_reg <= p_Result_s_reg_840;
        tmp_29_reg_845 <= {{x[15:8]}};
        tmp_29_reg_845_pp0_iter1_reg <= tmp_29_reg_845;
        tmp_30_reg_851 <= {{x[7:3]}};
        tmp_31_reg_857 <= tmp_31_fu_419_p1;
        tmp_reg_834 <= x[32'd31];
        tmp_reg_834_pp0_iter1_reg <= tmp_reg_834;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_ln300_7_reg_877_pp0_iter2_reg <= or_ln300_7_reg_877_pp0_iter1_reg;
        tmp_reg_834_pp0_iter2_reg <= tmp_reg_834_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_4_h_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_4_h_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_4_l_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_4_l_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln712_fu_551_p2 = (zext_ln712_fu_547_p1 + zext_ln1245_fu_528_p1);

assign and_ln300_fu_383_p2 = (icmp_ln1551_fu_371_p2 & icmp_ln1549_fu_377_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((overf_2_fu_810_p2[0:0] == 1'b1) ? 32'd2147483647 : tmp_s_fu_816_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln573_3_fu_674_p1;

assign exp_x_msb_3_4_lsb_m_1_V_fu_561_p2 = (zext_ln712_1_fu_557_p1 + zext_ln1245_1_fu_543_p1);

assign f_x_msb_2_table_V_address0 = zext_ln573_2_fu_567_p1;

assign f_x_msb_3_table_V_address0 = zext_ln573_1_fu_429_p1;

assign f_x_msb_4_h_table_V_address0 = zext_ln573_fu_423_p1;

assign f_x_msb_4_l_table_V_address0 = zext_ln573_fu_423_p1;

assign icmp_ln1549_fu_377_p2 = ((p_Result_6_fu_243_p3 > 23'd7905299) ? 1'b1 : 1'b0);

assign icmp_ln1551_fu_371_p2 = ((p_Result_5_fu_229_p4 == 5'd15) ? 1'b1 : 1'b0);

assign icmp_ln533_1_fu_804_p2 = ((tmp_28_fu_794_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln533_fu_782_p2 = ((tmp_27_fu_772_p4 != 3'd0) ? 1'b1 : 1'b0);

assign or_ln300_1_fu_440_p2 = (xor_ln222_4_fu_309_p2 | xor_ln222_3_fu_295_p2);

assign or_ln300_2_fu_446_p2 = (or_ln300_fu_434_p2 | or_ln300_1_fu_440_p2);

assign or_ln300_3_fu_452_p2 = (xor_ln222_fu_323_p2 | xor_ln222_5_fu_337_p2);

assign or_ln300_4_fu_458_p2 = (xor_ln222_7_fu_365_p2 | and_ln300_fu_383_p2);

assign or_ln300_5_fu_464_p2 = (xor_ln222_6_fu_351_p2 | or_ln300_4_fu_458_p2);

assign or_ln300_6_fu_470_p2 = (or_ln300_5_fu_464_p2 | or_ln300_3_fu_452_p2);

assign or_ln300_7_fu_476_p2 = (or_ln300_6_fu_470_p2 | or_ln300_2_fu_446_p2);

assign or_ln300_fu_434_p2 = (xor_ln222_2_fu_281_p2 | overf_fu_267_p2);

assign or_ln533_1_fu_788_p2 = (or_ln533_fu_766_p2 | icmp_ln533_fu_782_p2);

assign or_ln533_fu_766_p2 = (p_Result_s_65_fu_758_p3 | overf_1_fu_752_p2);

assign overf_1_fu_752_p2 = ((tmp_25_fu_742_p4 != 2'd0) ? 1'b1 : 1'b0);

assign overf_2_fu_810_p2 = (or_ln533_1_fu_788_p2 | icmp_ln533_1_fu_804_p2);

assign overf_fu_267_p2 = (tmp_fu_251_p3 ^ tmp_11_fu_259_p3);

assign p_Result_10_fu_577_p4 = {{f_x_msb_2_table_V_q0[45:41]}};

assign p_Result_11_fu_604_p3 = {{ret_V_5_fu_594_p2}, {trunc_ln640_2_fu_600_p1}};

assign p_Result_5_fu_229_p4 = {{x[23:19]}};

assign p_Result_6_fu_243_p3 = {{trunc_ln640_fu_239_p1}, {4'd0}};

assign p_Result_7_fu_571_p3 = {{tmp_reg_834_pp0_iter1_reg}, {p_Result_s_reg_840_pp0_iter1_reg}};

assign p_Result_8_fu_482_p6 = {{{{{tmp_31_reg_857}, {14'd0}}, {f_x_msb_4_h_table_V_q0}}, {12'd0}}, {f_x_msb_4_l_table_V_q0}};

assign p_Result_9_fu_495_p4 = {{{tmp_30_reg_851}, {7'd0}}, {f_x_msb_3_table_V_q0}};

assign p_Result_s_65_fu_758_p3 = y_V_2_fu_735_p3[32'd43];

assign r_V_10_fu_619_p0 = r_V_10_fu_619_p00;

assign r_V_10_fu_619_p00 = p_Result_11_fu_604_p3;

assign r_V_10_fu_619_p1 = r_V_10_fu_619_p10;

assign r_V_10_fu_619_p10 = exp_x_msb_3_4_lsb_m_1_V_reg_882;

assign r_V_9_fu_512_p0 = r_V_9_fu_512_p00;

assign r_V_9_fu_512_p00 = p_Result_9_fu_495_p4;

assign r_V_9_fu_512_p1 = r_V_9_fu_512_p10;

assign r_V_9_fu_512_p10 = p_Result_8_fu_482_p6;

assign r_V_fu_699_p0 = r_V_fu_699_p00;

assign r_V_fu_699_p00 = exp_x_msb_2_3_4_lsb_m_1_V_reg_893;

assign r_V_fu_699_p1 = r_V_fu_699_p10;

assign r_V_fu_699_p10 = exp_x_msb_1_table_V_q0;

assign ret_V_5_fu_594_p2 = (zext_ln712_4_fu_591_p1 + zext_ln712_2_fu_587_p1);

assign ret_V_6_fu_649_p2 = (rhs_4_fu_639_p4 + zext_ln1245_2_fu_635_p1);

assign ret_V_fu_658_p2 = (ret_V_6_fu_649_p2 + zext_ln1245_3_fu_655_p1);

assign rhs_2_fu_532_p5 = {{{{tmp_30_reg_851}, {7'd0}}, {f_x_msb_3_table_V_q0}}, {3'd0}};

assign rhs_4_fu_639_p4 = {{{ret_V_5_fu_594_p2}, {trunc_ln640_2_fu_600_p1}}, {6'd0}};

assign select_ln640_fu_684_p3 = ((xor_ln288_fu_679_p2[0:0] == 1'b1) ? 46'd70368744177663 : 46'd0);

assign tmp_11_fu_259_p3 = x[32'd23];

assign tmp_12_fu_273_p3 = x[32'd24];

assign tmp_13_fu_287_p3 = x[32'd25];

assign tmp_14_fu_301_p3 = x[32'd26];

assign tmp_15_fu_315_p3 = x[32'd27];

assign tmp_19_fu_329_p3 = x[32'd28];

assign tmp_20_fu_343_p3 = x[32'd29];

assign tmp_21_fu_357_p3 = x[32'd30];

assign tmp_25_fu_742_p4 = {{y_V_2_fu_735_p3[45:44]}};

assign tmp_27_fu_772_p4 = {{y_V_2_fu_735_p3[42:40]}};

assign tmp_28_fu_794_p4 = {{y_V_2_fu_735_p3[39:35]}};

assign tmp_30_fu_409_p4 = {{x[7:3]}};

assign tmp_31_fu_419_p1 = x[2:0];

assign tmp_fu_251_p3 = x[32'd31];

assign tmp_s_fu_816_p4 = {{y_V_2_fu_735_p3[35:4]}};

assign trunc_ln1245_2_fu_625_p4 = {{r_V_10_fu_619_p2[97:52]}};

assign trunc_ln640_2_fu_600_p1 = f_x_msb_2_table_V_q0[40:0];

assign trunc_ln640_fu_239_p1 = x[18:0];

assign trunc_ln712_2_fu_705_p4 = {{r_V_fu_699_p2[99:52]}};

assign trunc_ln8_fu_518_p4 = {{r_V_9_fu_512_p2[85:55]}};

assign xor_ln222_2_fu_281_p2 = (tmp_fu_251_p3 ^ tmp_12_fu_273_p3);

assign xor_ln222_3_fu_295_p2 = (tmp_fu_251_p3 ^ tmp_13_fu_287_p3);

assign xor_ln222_4_fu_309_p2 = (tmp_fu_251_p3 ^ tmp_14_fu_301_p3);

assign xor_ln222_5_fu_337_p2 = (tmp_fu_251_p3 ^ tmp_19_fu_329_p3);

assign xor_ln222_6_fu_351_p2 = (tmp_fu_251_p3 ^ tmp_20_fu_343_p3);

assign xor_ln222_7_fu_365_p2 = (tmp_fu_251_p3 ^ tmp_21_fu_357_p3);

assign xor_ln222_fu_323_p2 = (tmp_fu_251_p3 ^ tmp_15_fu_315_p3);

assign xor_ln288_fu_679_p2 = (tmp_reg_834_pp0_iter2_reg ^ 1'd1);

assign y_V_2_fu_735_p3 = ((or_ln300_7_reg_877_pp0_iter2_reg[0:0] == 1'b1) ? select_ln640_fu_684_p3 : y_V_fu_725_p4);

assign y_V_fu_725_p4 = {{y_l_V_fu_719_p2[49:4]}};

assign y_l_V_fu_719_p2 = (exp_x_msb_1_table_V_q0 + zext_ln712_3_fu_715_p1);

assign zext_ln1245_1_fu_543_p1 = rhs_2_fu_532_p5;

assign zext_ln1245_2_fu_635_p1 = trunc_ln1245_2_fu_625_p4;

assign zext_ln1245_3_fu_655_p1 = exp_x_msb_3_4_lsb_m_1_V_reg_882;

assign zext_ln1245_fu_528_p1 = trunc_ln8_fu_518_p4;

assign zext_ln573_1_fu_429_p1 = tmp_30_fu_409_p4;

assign zext_ln573_2_fu_567_p1 = tmp_29_reg_845;

assign zext_ln573_3_fu_674_p1 = p_Result_7_fu_571_p3;

assign zext_ln573_fu_423_p1 = tmp_31_fu_419_p1;

assign zext_ln712_1_fu_557_p1 = add_ln712_fu_551_p2;

assign zext_ln712_2_fu_587_p1 = p_Result_10_fu_577_p4;

assign zext_ln712_3_fu_715_p1 = trunc_ln712_2_fu_705_p4;

assign zext_ln712_4_fu_591_p1 = tmp_29_reg_845_pp0_iter1_reg;

assign zext_ln712_fu_547_p1 = p_Result_8_fu_482_p6;

endmodule //master_fix_exp_32_13_s
