// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution1_fix_Pipeline_Conv_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp1_V_11_0_reload,
        tmp1_V_10_0_reload,
        tmp1_V_11_4_reload,
        tmp1_V_11_6_reload,
        tmp1_V_11_8_reload,
        tmp1_V_6,
        tmp1_V_5_0_reload,
        tmp1_V_4_0_reload,
        tmp1_V_3_0_reload,
        tmp1_V_2_0_reload,
        tmp1_V_1_0_reload,
        tmp1_V_0_0_reload,
        tmp2_V_11_0_reload,
        tmp2_V_10_0_reload,
        tmp2_V_9_0_reload,
        tmp2_V_8_0_reload,
        tmp2_V_7_0_reload,
        tmp2_V_6_0_reload,
        tmp2_V_5_0_reload,
        tmp2_V_3_0_reload,
        tmp2_V_2_0_reload,
        tmp2_V_1_0_reload,
        tmp2_V_0_0_reload,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] tmp1_V_11_0_reload;
input  [11:0] tmp1_V_10_0_reload;
input  [11:0] tmp1_V_11_4_reload;
input  [11:0] tmp1_V_11_6_reload;
input  [11:0] tmp1_V_11_8_reload;
input  [11:0] tmp1_V_6;
input  [11:0] tmp1_V_5_0_reload;
input  [11:0] tmp1_V_4_0_reload;
input  [11:0] tmp1_V_3_0_reload;
input  [11:0] tmp1_V_2_0_reload;
input  [11:0] tmp1_V_1_0_reload;
input  [11:0] tmp1_V_0_0_reload;
input  [11:0] tmp2_V_11_0_reload;
input  [11:0] tmp2_V_10_0_reload;
input  [11:0] tmp2_V_9_0_reload;
input  [11:0] tmp2_V_8_0_reload;
input  [11:0] tmp2_V_7_0_reload;
input  [11:0] tmp2_V_6_0_reload;
input  [11:0] tmp2_V_5_0_reload;
input  [11:0] tmp2_V_3_0_reload;
input  [11:0] tmp2_V_2_0_reload;
input  [11:0] tmp2_V_1_0_reload;
input  [11:0] tmp2_V_0_0_reload;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [34:0] out_r_d0;

reg ap_idle;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln235_fu_837_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] firstKernel_f_V_0_0_address0;
reg    firstKernel_f_V_0_0_ce0;
wire   [18:0] firstKernel_f_V_0_0_q0;
wire   [2:0] firstKernel_f_V_0_1_address0;
reg    firstKernel_f_V_0_1_ce0;
wire   [18:0] firstKernel_f_V_0_1_q0;
wire   [2:0] firstKernel_f_V_0_2_address0;
reg    firstKernel_f_V_0_2_ce0;
wire   [19:0] firstKernel_f_V_0_2_q0;
wire   [2:0] firstKernel_f_V_1_0_address0;
reg    firstKernel_f_V_1_0_ce0;
wire   [17:0] firstKernel_f_V_1_0_q0;
wire   [2:0] firstKernel_f_V_1_1_address0;
reg    firstKernel_f_V_1_1_ce0;
wire   [17:0] firstKernel_f_V_1_1_q0;
wire   [2:0] firstKernel_f_V_1_2_address0;
reg    firstKernel_f_V_1_2_ce0;
wire   [17:0] firstKernel_f_V_1_2_q0;
wire   [2:0] firstKernel_f_V_2_0_address0;
reg    firstKernel_f_V_2_0_ce0;
wire   [17:0] firstKernel_f_V_2_0_q0;
wire   [2:0] firstKernel_f_V_2_1_address0;
reg    firstKernel_f_V_2_1_ce0;
wire   [17:0] firstKernel_f_V_2_1_q0;
wire   [2:0] firstKernel_f_V_2_2_address0;
reg    firstKernel_f_V_2_2_ce0;
wire   [17:0] firstKernel_f_V_2_2_q0;
wire   [2:0] firstKernel_f_V_3_0_address0;
reg    firstKernel_f_V_3_0_ce0;
wire   [17:0] firstKernel_f_V_3_0_q0;
wire   [2:0] firstKernel_f_V_3_1_address0;
reg    firstKernel_f_V_3_1_ce0;
wire   [18:0] firstKernel_f_V_3_1_q0;
wire   [2:0] firstKernel_f_V_3_2_address0;
reg    firstKernel_f_V_3_2_ce0;
wire   [18:0] firstKernel_f_V_3_2_q0;
wire   [2:0] firstBias_f_V_address0;
reg    firstBias_f_V_ce0;
wire   [21:0] firstBias_f_V_q0;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln213_fu_852_p1;
reg   [1:0] trunc_ln213_reg_3190;
reg   [1:0] trunc_ln213_reg_3190_pp0_iter2_reg;
reg   [1:0] trunc_ln213_reg_3190_pp0_iter3_reg;
reg   [1:0] trunc_ln213_reg_3190_pp0_iter4_reg;
wire   [0:0] icmp_ln238_fu_856_p2;
reg   [0:0] icmp_ln238_reg_3201;
reg   [0:0] icmp_ln238_reg_3201_pp0_iter2_reg;
reg   [0:0] icmp_ln238_reg_3201_pp0_iter3_reg;
reg   [0:0] icmp_ln238_reg_3201_pp0_iter4_reg;
reg   [0:0] icmp_ln238_reg_3201_pp0_iter5_reg;
reg   [0:0] icmp_ln238_reg_3201_pp0_iter6_reg;
wire   [0:0] icmp_ln246_fu_931_p2;
reg   [0:0] icmp_ln246_reg_3213;
reg   [0:0] icmp_ln246_reg_3213_pp0_iter2_reg;
reg   [0:0] icmp_ln246_reg_3213_pp0_iter3_reg;
reg   [0:0] icmp_ln246_reg_3213_pp0_iter4_reg;
reg   [0:0] icmp_ln246_reg_3213_pp0_iter5_reg;
reg   [0:0] icmp_ln246_reg_3213_pp0_iter6_reg;
wire   [8:0] trunc_ln323_2_fu_970_p1;
reg   [8:0] trunc_ln323_2_reg_3217;
wire   [0:0] icmp_ln267_fu_992_p2;
reg   [0:0] icmp_ln267_reg_3222;
reg   [0:0] icmp_ln267_reg_3222_pp0_iter3_reg;
reg   [0:0] icmp_ln267_reg_3222_pp0_iter4_reg;
wire   [1:0] t_fu_1003_p3;
reg   [1:0] t_reg_3232;
reg   [1:0] t_reg_3232_pp0_iter3_reg;
wire   [0:0] icmp_ln267_4_fu_1035_p2;
reg   [0:0] icmp_ln267_4_reg_3239;
reg   [0:0] icmp_ln267_4_reg_3239_pp0_iter3_reg;
reg   [0:0] icmp_ln267_4_reg_3239_pp0_iter4_reg;
wire   [0:0] icmp_ln267_1_fu_1041_p2;
reg   [0:0] icmp_ln267_1_reg_3248;
reg   [0:0] icmp_ln267_1_reg_3248_pp0_iter3_reg;
wire   [8:0] newSecond75_fu_1073_p2;
reg   [8:0] newSecond75_reg_3254;
wire   [0:0] icmp_ln268_fu_1095_p2;
reg   [0:0] icmp_ln268_reg_3259;
reg   [0:0] icmp_ln268_reg_3259_pp0_iter3_reg;
wire   [8:0] newSecond77_fu_1123_p2;
reg   [8:0] newSecond77_reg_3265;
wire   [8:0] newSecond_fu_1153_p2;
reg   [8:0] newSecond_reg_3270;
wire   [0:0] icmp_ln273_fu_1159_p2;
reg   [0:0] icmp_ln273_reg_3275;
reg   [0:0] icmp_ln273_reg_3275_pp0_iter3_reg;
reg   [0:0] icmp_ln273_reg_3275_pp0_iter4_reg;
wire   [0:0] icmp_ln298_fu_1181_p2;
reg   [0:0] icmp_ln298_reg_3283;
reg   [0:0] icmp_ln298_reg_3283_pp0_iter3_reg;
reg   [0:0] icmp_ln298_reg_3283_pp0_iter4_reg;
wire   [8:0] add_ln323_fu_1209_p2;
reg   [8:0] add_ln323_reg_3289;
reg   [8:0] add_ln323_reg_3289_pp0_iter3_reg;
reg   [8:0] add_ln323_reg_3289_pp0_iter4_reg;
wire   [63:0] idxprom82_fu_1347_p1;
reg   [63:0] idxprom82_reg_3314;
wire   [11:0] tmp1_V_11_32_fu_1433_p3;
reg   [11:0] tmp1_V_11_32_reg_3339;
wire   [0:0] icmp_ln267_3_fu_1454_p2;
reg   [0:0] icmp_ln267_3_reg_3344;
wire   [11:0] tmp1_V_11_22_fu_1459_p3;
reg   [11:0] tmp1_V_11_22_reg_3349;
wire   [11:0] tmp1_V_11_26_fu_1475_p3;
reg   [11:0] tmp1_V_11_26_reg_3356;
wire   [11:0] select_ln272_1_fu_1624_p3;
reg   [11:0] select_ln272_1_reg_3418;
reg  signed [11:0] select_ln272_1_reg_3418_pp0_iter6_reg;
wire   [11:0] select_ln275_fu_1645_p3;
reg   [11:0] select_ln275_reg_3423;
reg  signed [11:0] select_ln275_reg_3423_pp0_iter6_reg;
wire   [11:0] select_ln285_3_fu_1880_p3;
reg   [11:0] select_ln285_3_reg_3428;
reg  signed [11:0] select_ln285_3_reg_3428_pp0_iter6_reg;
wire   [11:0] select_ln285_7_fu_1944_p3;
reg   [11:0] select_ln285_7_reg_3433;
reg  signed [11:0] select_ln285_7_reg_3433_pp0_iter6_reg;
wire   [11:0] select_ln285_11_fu_2016_p3;
reg  signed [11:0] select_ln285_11_reg_3438;
wire   [11:0] select_ln285_15_fu_2088_p3;
reg  signed [11:0] select_ln285_15_reg_3443;
wire   [11:0] select_ln298_fu_2288_p3;
reg   [11:0] select_ln298_reg_3448;
reg  signed [11:0] select_ln298_reg_3448_pp0_iter6_reg;
wire   [11:0] select_ln298_1_fu_2336_p3;
reg   [11:0] select_ln298_1_reg_3453;
reg  signed [11:0] select_ln298_1_reg_3453_pp0_iter6_reg;
wire   [11:0] select_ln298_2_fu_2384_p3;
reg   [11:0] select_ln298_2_reg_3458;
reg  signed [11:0] select_ln298_2_reg_3458_pp0_iter6_reg;
wire   [11:0] select_ln298_3_fu_2432_p3;
reg   [11:0] select_ln298_3_reg_3463;
reg  signed [11:0] select_ln298_3_reg_3463_pp0_iter6_reg;
wire   [11:0] tmp2_V_7_1_fu_2440_p3;
reg   [11:0] tmp2_V_7_1_reg_3468;
reg  signed [11:0] tmp2_V_7_1_reg_3468_pp0_iter6_reg;
wire   [11:0] select_ln298_5_fu_2448_p3;
reg   [11:0] select_ln298_5_reg_3473;
reg  signed [11:0] select_ln298_5_reg_3473_pp0_iter6_reg;
wire   [11:0] add_ln323_1_fu_2467_p2;
reg   [11:0] add_ln323_1_reg_3478;
reg   [11:0] add_ln323_1_reg_3478_pp0_iter6_reg;
reg   [11:0] add_ln323_1_reg_3478_pp0_iter7_reg;
reg   [11:0] add_ln323_1_reg_3478_pp0_iter8_reg;
reg   [11:0] add_ln323_1_reg_3478_pp0_iter9_reg;
reg   [11:0] add_ln323_1_reg_3478_pp0_iter10_reg;
reg   [21:0] firstBias_f_V_load_reg_3483;
wire   [35:0] grp_fu_2647_p2;
reg   [35:0] mul_ln712_reg_3558;
wire   [35:0] grp_fu_2656_p2;
reg   [35:0] mul_ln712_1_reg_3563;
wire   [35:0] grp_fu_2703_p2;
reg   [35:0] mul_ln712_2_reg_3618;
wire   [35:0] grp_fu_2712_p2;
reg   [35:0] mul_ln712_3_reg_3623;
wire   [35:0] grp_fu_2721_p2;
reg   [35:0] mul_ln712_4_reg_3628;
wire   [35:0] grp_fu_2730_p2;
reg   [35:0] mul_ln712_5_reg_3633;
wire   [35:0] grp_fu_2739_p2;
reg   [35:0] mul_ln712_6_reg_3638;
wire   [35:0] grp_fu_2748_p2;
reg   [35:0] mul_ln712_7_reg_3643;
wire   [35:0] grp_fu_2757_p2;
reg   [35:0] mul_ln712_8_reg_3648;
wire   [35:0] grp_fu_2766_p2;
reg   [35:0] mul_ln712_9_reg_3653;
wire   [35:0] grp_fu_2775_p2;
reg   [35:0] mul_ln712_10_reg_3658;
wire   [35:0] grp_fu_2784_p2;
reg   [35:0] mul_ln712_11_reg_3663;
wire   [35:0] add_ln712_6_fu_2798_p2;
reg   [35:0] add_ln712_6_reg_3668;
wire   [34:0] trunc_ln712_4_fu_2803_p1;
reg   [34:0] trunc_ln712_4_reg_3673;
wire   [35:0] add_ln712_1_fu_2811_p2;
reg   [35:0] add_ln712_1_reg_3678;
wire   [35:0] add_ln712_3_fu_2820_p2;
reg   [35:0] add_ln712_3_reg_3683;
wire   [34:0] trunc_ln712_fu_2825_p1;
reg   [34:0] trunc_ln712_reg_3688;
wire   [34:0] trunc_ln712_1_fu_2829_p1;
reg   [34:0] trunc_ln712_1_reg_3693;
wire   [35:0] add_ln712_12_fu_2861_p2;
reg   [35:0] add_ln712_12_reg_3698;
wire   [34:0] add_ln712_14_fu_2866_p2;
reg   [34:0] add_ln712_14_reg_3703;
wire   [34:0] num_V_1_fu_2897_p3;
reg   [34:0] num_V_1_reg_3708;
wire   [63:0] zext_ln267_fu_1214_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln267_1_fu_1218_p1;
wire   [63:0] zext_ln268_fu_1222_p1;
wire   [63:0] zext_ln269_1_fu_1226_p1;
wire   [63:0] zext_ln323_fu_2905_p1;
reg   [11:0] j_fu_182;
wire   [11:0] select_ln260_fu_962_p3;
wire    ap_loop_init;
reg   [11:0] id_fu_186;
wire   [11:0] id_2_fu_843_p2;
reg   [11:0] tmp2_V_0_2_fu_190;
reg   [11:0] tmp2_V_1_2_fu_194;
reg   [11:0] tmp2_V_2_2_fu_198;
reg   [11:0] tmp2_V_3_2_fu_202;
reg   [11:0] tmp2_V_5_2_fu_206;
reg   [11:0] tmp2_V_6_2_fu_210;
reg   [11:0] tmp2_V_7_2_fu_214;
reg   [11:0] tmp2_V_8_2_fu_218;
reg   [11:0] tmp2_V_9_2_fu_222;
reg   [11:0] tmp2_V_10_2_fu_226;
reg   [11:0] tmp2_V_11_2_fu_230;
reg   [11:0] tmp1_V_0_2_fu_234;
wire   [11:0] tmp1_V_0_3_fu_1598_p3;
reg   [11:0] tmp1_V_0_fu_238;
wire   [11:0] tmp1_V_3_1_fu_1590_p3;
reg   [11:0] tmp1_V_3_fu_242;
wire   [11:0] tmp1_V_6_1_fu_1582_p3;
reg   [11:0] tmp1_V_11_fu_246;
wire   [11:0] tmp1_V_11_27_fu_1606_p3;
reg   [11:0] tmp1_V_7_fu_250;
reg   [11:0] tmp1_V_8_fu_254;
reg   [35:0] b_fu_258;
wire  signed [35:0] sext_ln260_fu_2662_p1;
reg   [15:0] d_fu_262;
wire  signed [15:0] sext_ln247_1_fu_1343_p1;
reg  signed [35:0] kr_V_0_01134_fu_266;
wire  signed [35:0] sext_ln254_fu_1493_p1;
reg  signed [35:0] kr_V_1_01135_fu_270;
wire  signed [35:0] sext_ln254_1_fu_1497_p1;
reg  signed [35:0] kr_V_2_01136_fu_274;
wire  signed [35:0] sext_ln254_2_fu_2548_p1;
reg  signed [35:0] kr_V_3_01137_fu_278;
wire  signed [35:0] sext_ln254_3_fu_2552_p1;
reg  signed [35:0] kr_V_4_01138_fu_282;
wire  signed [35:0] sext_ln254_4_fu_2556_p1;
reg  signed [35:0] kr_V_5_01139_fu_286;
wire  signed [35:0] sext_ln254_5_fu_2560_p1;
reg  signed [35:0] kr_V_6_01140_fu_290;
wire  signed [35:0] sext_ln254_6_fu_2564_p1;
reg  signed [35:0] kr_V_7_01141_fu_294;
wire  signed [35:0] sext_ln254_7_fu_2568_p1;
reg  signed [35:0] kr_V_8_01142_fu_298;
wire  signed [35:0] sext_ln254_8_fu_2572_p1;
reg  signed [35:0] kr_V_9_01143_fu_302;
wire  signed [35:0] sext_ln254_9_fu_2576_p1;
reg  signed [35:0] kr_V_10_01144_fu_306;
wire  signed [35:0] sext_ln254_10_fu_2580_p1;
reg  signed [35:0] kr_V_11_01145_fu_310;
wire  signed [35:0] sext_ln254_11_fu_2584_p1;
reg   [15:0] i_fu_314;
wire  signed [15:0] sext_ln239_1_fu_927_p1;
reg   [11:0] tmp1_V_4_fu_318;
reg   [11:0] tmp1_V_1_fu_322;
reg   [11:0] tmp1_V_1_1_fu_326;
reg   [11:0] tmp1_V_5_fu_330;
reg   [11:0] tmp1_V_2_fu_334;
reg   [11:0] tmp1_V_2_1_fu_338;
wire  signed [15:0] sext_ln239_fu_865_p0;
wire  signed [15:0] trunc_ln239_fu_869_p0;
wire  signed [16:0] sext_ln239_fu_865_p1;
wire   [16:0] add_ln239_fu_873_p2;
wire   [6:0] trunc_ln239_fu_869_p1;
wire   [6:0] xor_ln239_fu_891_p2;
wire   [7:0] p_and_t3_cast_fu_897_p3;
wire   [6:0] trunc_ln239_1_fu_887_p1;
wire   [0:0] tmp_fu_879_p3;
wire   [7:0] sub_ln239_fu_905_p2;
wire   [7:0] tmp_s_fu_911_p3;
wire  signed [7:0] i_7_fu_919_p3;
wire   [11:0] add_ln260_fu_950_p2;
wire   [0:0] icmp_ln260_1_fu_956_p2;
wire   [1:0] add_ln266_fu_987_p2;
wire   [1:0] xor_ln267_2_fu_998_p2;
wire  signed [15:0] trunc_ln267_fu_1011_p0;
wire  signed [15:0] sext_ln267_fu_1015_p0;
wire  signed [16:0] sext_ln267_fu_1015_p1;
wire   [16:0] add_ln267_fu_1019_p2;
wire   [9:0] tmp_20_fu_1025_p4;
wire   [6:0] trunc_ln267_2_fu_1055_p1;
wire   [8:0] zext_ln270_fu_1047_p1;
wire   [8:0] trunc_ln267_1_fu_1051_p1;
wire   [8:0] tmp_42_cast_fu_1059_p3;
wire   [8:0] newFirst74_fu_1067_p2;
wire   [16:0] add_ln268_fu_1079_p2;
wire   [9:0] tmp_21_fu_1085_p4;
wire   [6:0] trunc_ln268_1_fu_1105_p1;
wire   [8:0] trunc_ln268_fu_1101_p1;
wire   [8:0] tmp_43_cast_fu_1109_p3;
wire   [8:0] newFirst76_fu_1117_p2;
wire   [6:0] trunc_ln267_fu_1011_p1;
wire   [6:0] add_ln269_fu_1129_p2;
wire   [8:0] tmp_14_fu_1139_p3;
wire   [8:0] newFirst_fu_1147_p2;
wire   [8:0] zext_ln269_fu_1135_p1;
wire  signed [15:0] icmp_ln273_fu_1159_p0;
wire   [16:0] add_ln298_fu_1165_p2;
wire   [9:0] tmp_22_fu_1171_p4;
wire  signed [15:0] trunc_ln323_fu_1187_p0;
wire  signed [15:0] trunc_ln323_1_fu_1191_p0;
wire   [6:0] trunc_ln323_1_fu_1191_p1;
wire   [8:0] tmp_49_cast_fu_1195_p3;
wire   [8:0] trunc_ln323_fu_1187_p1;
wire   [8:0] sub_ln323_fu_1203_p2;
wire  signed [15:0] sext_ln247_fu_1281_p0;
wire  signed [15:0] trunc_ln247_fu_1285_p0;
wire  signed [16:0] sext_ln247_fu_1281_p1;
wire   [16:0] add_ln247_fu_1289_p2;
wire   [2:0] trunc_ln247_fu_1285_p1;
wire   [2:0] xor_ln247_fu_1307_p2;
wire   [3:0] p_and_t7_cast_fu_1313_p3;
wire   [2:0] trunc_ln247_1_fu_1303_p1;
wire   [0:0] tmp_19_fu_1295_p3;
wire   [3:0] sub_ln247_fu_1321_p2;
wire   [3:0] tmp_13_fu_1327_p3;
wire  signed [3:0] d_9_fu_1335_p3;
wire   [0:0] and_ln267_fu_1364_p2;
wire   [0:0] xor_ln267_fu_1368_p2;
wire   [0:0] or_ln268_fu_1379_p2;
wire   [0:0] xor_ln268_fu_1384_p2;
wire   [0:0] and_ln267_1_fu_1390_p2;
wire   [0:0] and_ln268_fu_1374_p2;
wire   [11:0] trunc_ln267_3_fu_1401_p1;
wire   [11:0] trunc_ln267_4_fu_1405_p1;
wire   [11:0] trunc_ln267_5_fu_1417_p1;
wire   [11:0] trunc_ln267_6_fu_1421_p1;
wire   [0:0] or_ln267_fu_1395_p2;
wire   [11:0] select_ln267_fu_1409_p3;
wire   [11:0] select_ln267_1_fu_1425_p3;
wire   [0:0] icmp_ln267_2_fu_1441_p2;
wire   [11:0] tmp1_V_11_21_fu_1446_p3;
wire   [11:0] tmp1_V_11_23_fu_1467_p3;
wire   [0:0] icmp_ln260_fu_1577_p2;
wire   [0:0] icmp_ln272_fu_1619_p2;
wire   [11:0] select_ln272_fu_1612_p3;
wire   [0:0] icmp_ln275_fu_1632_p2;
wire   [11:0] tmp2_V_3_fu_1637_p3;
wire   [11:0] select_ln274_fu_1653_p3;
wire   [11:0] tmp2_V_0_fu_1675_p3;
wire   [0:0] xor_ln279_fu_1698_p2;
wire   [0:0] and_ln279_fu_1703_p2;
wire   [2:0] or_ln_fu_1668_p3;
wire   [0:0] and_ln279_1_fu_1722_p2;
wire   [0:0] icmp_ln281_fu_1716_p2;
wire   [0:0] and_ln281_fu_1726_p2;
wire   [11:0] select_ln279_fu_1708_p3;
wire   [0:0] icmp_ln281_1_fu_1740_p2;
wire   [0:0] and_ln281_1_fu_1746_p2;
wire   [11:0] select_ln281_fu_1732_p3;
wire   [0:0] icmp_ln281_2_fu_1760_p2;
wire   [0:0] and_ln281_2_fu_1766_p2;
wire   [11:0] select_ln281_1_fu_1752_p3;
wire   [0:0] icmp_ln281_3_fu_1780_p2;
wire   [0:0] icmp_ln281_4_fu_1786_p2;
wire   [0:0] icmp_ln281_5_fu_1792_p2;
wire   [0:0] and_ln281_4_fu_1804_p2;
wire   [0:0] and_ln281_3_fu_1798_p2;
wire   [0:0] and_ln281_5_fu_1810_p2;
wire   [11:0] select_ln281_2_fu_1772_p3;
wire   [0:0] or_ln285_fu_1824_p2;
wire   [11:0] select_ln281_3_fu_1816_p3;
wire   [0:0] xor_ln273_fu_1836_p2;
wire   [0:0] and_ln285_fu_1841_p2;
wire   [0:0] and_ln285_1_fu_1846_p2;
wire   [11:0] select_ln285_fu_1828_p3;
wire   [0:0] and_ln285_2_fu_1860_p2;
wire   [11:0] select_ln285_1_fu_1852_p3;
wire   [0:0] and_ln285_3_fu_1874_p2;
wire   [11:0] select_ln285_2_fu_1866_p3;
wire   [11:0] tmp2_V_2_fu_1691_p3;
wire   [11:0] select_ln281_4_fu_1888_p3;
wire   [11:0] select_ln281_5_fu_1896_p3;
wire   [11:0] select_ln281_6_fu_1904_p3;
wire   [11:0] select_ln281_7_fu_1912_p3;
wire   [11:0] select_ln285_4_fu_1920_p3;
wire   [11:0] select_ln285_5_fu_1928_p3;
wire   [11:0] select_ln285_6_fu_1936_p3;
wire   [11:0] tmp2_V_1_fu_1660_p3;
wire   [11:0] select_ln279_1_fu_1952_p3;
wire   [11:0] select_ln281_8_fu_1960_p3;
wire   [11:0] select_ln281_9_fu_1968_p3;
wire   [11:0] select_ln281_10_fu_1976_p3;
wire   [11:0] select_ln281_11_fu_1984_p3;
wire   [11:0] select_ln285_8_fu_1992_p3;
wire   [11:0] select_ln285_9_fu_2000_p3;
wire   [11:0] select_ln285_10_fu_2008_p3;
wire   [11:0] select_ln275_1_fu_1683_p3;
wire   [11:0] select_ln279_2_fu_2024_p3;
wire   [11:0] select_ln281_12_fu_2032_p3;
wire   [11:0] select_ln281_13_fu_2040_p3;
wire   [11:0] select_ln281_14_fu_2048_p3;
wire   [11:0] select_ln281_15_fu_2056_p3;
wire   [11:0] select_ln285_12_fu_2064_p3;
wire   [11:0] select_ln285_13_fu_2072_p3;
wire   [11:0] select_ln285_14_fu_2080_p3;
wire   [11:0] select_ln288_fu_2096_p3;
wire   [11:0] tmp1_V_11_28_fu_2111_p3;
wire   [11:0] tmp2_V_6_fu_2124_p3;
wire   [3:0] tmp2_V_9_fu_2147_p13;
wire   [11:0] tmp2_V_9_fu_2147_p14;
wire   [11:0] tmp1_V_11_30_fu_2183_p3;
wire   [0:0] and_ln294_fu_2203_p2;
wire   [11:0] tmp2_V_11_fu_2198_p3;
wire   [0:0] and_ln294_1_fu_2215_p2;
wire   [11:0] select_ln294_fu_2207_p3;
wire   [0:0] xor_ln267_1_fu_2228_p2;
wire   [0:0] and_ln298_fu_2233_p2;
wire   [0:0] and_ln301_fu_2238_p2;
wire   [11:0] select_ln294_1_fu_2220_p3;
wire   [0:0] and_ln301_1_fu_2252_p2;
wire   [0:0] and_ln301_2_fu_2257_p2;
wire   [11:0] select_ln301_fu_2244_p3;
wire   [0:0] and_ln301_3_fu_2271_p2;
wire   [11:0] select_ln301_1_fu_2263_p3;
wire   [0:0] or_ln298_fu_2284_p2;
wire   [11:0] select_ln301_2_fu_2276_p3;
wire   [11:0] tmp1_V_11_33_fu_2117_p3;
wire   [11:0] select_ln294_2_fu_2296_p3;
wire   [11:0] select_ln294_3_fu_2304_p3;
wire   [11:0] select_ln301_3_fu_2312_p3;
wire   [11:0] select_ln301_4_fu_2320_p3;
wire   [11:0] select_ln301_5_fu_2328_p3;
wire   [11:0] select_ln275_3_fu_2175_p3;
wire   [11:0] select_ln294_4_fu_2344_p3;
wire   [11:0] select_ln294_5_fu_2352_p3;
wire   [11:0] select_ln301_6_fu_2360_p3;
wire   [11:0] select_ln301_7_fu_2368_p3;
wire   [11:0] select_ln301_8_fu_2376_p3;
wire   [11:0] tmp1_V_11_34_fu_2190_p3;
wire   [11:0] select_ln294_6_fu_2392_p3;
wire   [11:0] select_ln294_7_fu_2400_p3;
wire   [11:0] select_ln301_9_fu_2408_p3;
wire   [11:0] select_ln301_10_fu_2416_p3;
wire   [11:0] select_ln301_11_fu_2424_p3;
wire   [11:0] tmp2_V_7_fu_2103_p3;
wire   [11:0] select_ln275_2_fu_2132_p3;
wire   [11:0] tmp_51_cast_fu_2456_p3;
wire   [11:0] trunc_ln323_3_fu_2463_p1;
wire   [35:0] add_ln712_5_fu_2793_p2;
wire   [35:0] add_ln712_fu_2807_p2;
wire   [35:0] add_ln712_2_fu_2816_p2;
wire   [35:0] add_ln712_7_fu_2833_p2;
wire   [35:0] add_ln712_8_fu_2837_p2;
wire   [34:0] trunc_ln712_3_fu_2845_p1;
wire   [34:0] trunc_ln712_2_fu_2841_p1;
wire   [35:0] add_ln712_9_fu_2849_p2;
wire   [34:0] add_ln712_10_fu_2855_p2;
wire   [35:0] add_ln712_4_fu_2871_p2;
wire   [34:0] add_ln712_13_fu_2875_p2;
wire   [35:0] add_ln712_11_fu_2879_p2;
wire   [0:0] tmp_23_fu_2889_p3;
wire   [34:0] add_ln1548_fu_2884_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2218;
reg    ap_condition_2222;
reg    ap_condition_2226;
reg    ap_condition_991;
reg    ap_condition_997;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_0 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_0_address0),
    .ce0(firstKernel_f_V_0_0_ce0),
    .q0(firstKernel_f_V_0_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_1_address0),
    .ce0(firstKernel_f_V_0_1_ce0),
    .q0(firstKernel_f_V_0_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_2 #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_2_address0),
    .ce0(firstKernel_f_V_0_2_ce0),
    .q0(firstKernel_f_V_0_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_0_address0),
    .ce0(firstKernel_f_V_1_0_ce0),
    .q0(firstKernel_f_V_1_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_1_address0),
    .ce0(firstKernel_f_V_1_1_ce0),
    .q0(firstKernel_f_V_1_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_2_address0),
    .ce0(firstKernel_f_V_1_2_ce0),
    .q0(firstKernel_f_V_1_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_0_address0),
    .ce0(firstKernel_f_V_2_0_ce0),
    .q0(firstKernel_f_V_2_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_1_address0),
    .ce0(firstKernel_f_V_2_1_ce0),
    .q0(firstKernel_f_V_2_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_2_address0),
    .ce0(firstKernel_f_V_2_2_ce0),
    .q0(firstKernel_f_V_2_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_0_address0),
    .ce0(firstKernel_f_V_3_0_ce0),
    .q0(firstKernel_f_V_3_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_1_address0),
    .ce0(firstKernel_f_V_3_1_ce0),
    .q0(firstKernel_f_V_3_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_2 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_2_address0),
    .ce0(firstKernel_f_V_3_2_ce0),
    .q0(firstKernel_f_V_3_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstBias_f_V #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstBias_f_V_address0),
    .ce0(firstBias_f_V_ce0),
    .q0(firstBias_f_V_q0)
);

master_fix_mux_124_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
mux_124_12_1_1_U36(
    .din0(tmp1_V_0_3_fu_1598_p3),
    .din1(tmp1_V_1_1_fu_326),
    .din2(tmp1_V_2_1_fu_338),
    .din3(tmp1_V_3_1_fu_1590_p3),
    .din4(tmp1_V_1_fu_322),
    .din5(tmp1_V_2_fu_334),
    .din6(tmp1_V_6_1_fu_1582_p3),
    .din7(tmp1_V_4_fu_318),
    .din8(tmp1_V_5_fu_330),
    .din9(tmp1_V_11_27_fu_1606_p3),
    .din10(tmp1_V_11_26_reg_3356),
    .din11(tmp1_V_11_22_reg_3349),
    .din12(tmp2_V_9_fu_2147_p13),
    .dout(tmp2_V_9_fu_2147_p14)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_0_01134_fu_266),
    .din1(select_ln285_15_reg_3443),
    .ce(1'b1),
    .dout(grp_fu_2647_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_1_01135_fu_270),
    .din1(select_ln285_11_reg_3438),
    .ce(1'b1),
    .dout(grp_fu_2656_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_2_01136_fu_274),
    .din1(select_ln285_7_reg_3433_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2703_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_3_01137_fu_278),
    .din1(select_ln275_reg_3423_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2712_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_4_01138_fu_282),
    .din1(select_ln272_1_reg_3418_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2721_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_5_01139_fu_286),
    .din1(select_ln285_3_reg_3428_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2730_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_6_01140_fu_290),
    .din1(select_ln298_5_reg_3473_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2739_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_7_01141_fu_294),
    .din1(tmp2_V_7_1_reg_3468_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2748_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_8_01142_fu_298),
    .din1(select_ln298_3_reg_3463_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2757_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_9_01143_fu_302),
    .din1(select_ln298_2_reg_3458_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2766_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_10_01144_fu_306),
    .din1(select_ln298_1_reg_3453_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2775_p2)
);

master_fix_mul_36s_12s_36_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_2_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kr_V_11_01145_fu_310),
    .din1(select_ln298_reg_3448_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_2784_p2)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            d_fu_262 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2218)) begin
            d_fu_262 <= sext_ln247_1_fu_1343_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_314 <= 16'd65535;
        end else if ((1'b1 == ap_condition_2226)) begin
            i_fu_314 <= 16'd0;
        end else if ((1'b1 == ap_condition_2222)) begin
            i_fu_314 <= sext_ln239_1_fu_927_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            id_fu_186 <= 12'd0;
        end else if (((icmp_ln235_fu_837_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            id_fu_186 <= id_2_fu_843_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_182 <= 12'd0;
        end else if (((icmp_ln235_fu_837_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_182 <= select_ln260_fu_962_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_2_fu_234 <= tmp1_V_0_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_0_2_fu_234 <= tmp1_V_0_3_fu_1598_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_0_fu_238 <= tmp1_V_3_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_0_fu_238 <= tmp1_V_3_1_fu_1590_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_11_fu_246 <= tmp1_V_11_4_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_11_fu_246 <= tmp1_V_11_27_fu_1606_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_1_fu_326 <= tmp1_V_1_0_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_1_1_fu_326 <= tmp1_V_1_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_1_fu_322 <= tmp1_V_4_0_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_1_fu_322 <= tmp1_V_4_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_1_fu_338 <= tmp1_V_2_0_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_2_1_fu_338 <= tmp1_V_2_fu_334;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_2_fu_334 <= tmp1_V_5_0_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_2_fu_334 <= tmp1_V_5_fu_330;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_3_fu_242 <= tmp1_V_6;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp1_V_3_fu_242 <= tmp1_V_6_1_fu_1582_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_4_fu_318 <= tmp1_V_11_8_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_4_fu_318 <= tmp1_V_7_fu_250;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_5_fu_330 <= tmp1_V_11_6_reload;
        end else if (((icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            tmp1_V_5_fu_330 <= tmp1_V_8_fu_254;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_7_fu_250 <= tmp1_V_10_0_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            tmp1_V_7_fu_250 <= tmp1_V_11_26_fu_1475_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_8_fu_254 <= tmp1_V_11_0_reload;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            tmp1_V_8_fu_254 <= tmp1_V_11_22_fu_1459_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_0_2_fu_190 <= tmp2_V_0_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_0_2_fu_190 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_10_2_fu_226 <= tmp2_V_10_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_10_2_fu_226 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_11_2_fu_230 <= tmp2_V_11_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_11_2_fu_230 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_1_2_fu_194 <= tmp2_V_1_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_1_2_fu_194 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_2_2_fu_198 <= tmp2_V_2_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_2_2_fu_198 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_3_2_fu_202 <= tmp2_V_3_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_3_2_fu_202 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_5_2_fu_206 <= tmp2_V_5_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_5_2_fu_206 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_6_2_fu_210 <= tmp2_V_6_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_6_2_fu_210 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_7_2_fu_214 <= tmp2_V_7_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_7_2_fu_214 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_8_2_fu_218 <= tmp2_V_8_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_8_2_fu_218 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp2_V_9_2_fu_222 <= tmp2_V_9_0_reload;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            tmp2_V_9_2_fu_222 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln323_1_reg_3478 <= add_ln323_1_fu_2467_p2;
        add_ln323_1_reg_3478_pp0_iter10_reg <= add_ln323_1_reg_3478_pp0_iter9_reg;
        add_ln323_1_reg_3478_pp0_iter6_reg <= add_ln323_1_reg_3478;
        add_ln323_1_reg_3478_pp0_iter7_reg <= add_ln323_1_reg_3478_pp0_iter6_reg;
        add_ln323_1_reg_3478_pp0_iter8_reg <= add_ln323_1_reg_3478_pp0_iter7_reg;
        add_ln323_1_reg_3478_pp0_iter9_reg <= add_ln323_1_reg_3478_pp0_iter8_reg;
        add_ln323_reg_3289 <= add_ln323_fu_1209_p2;
        add_ln323_reg_3289_pp0_iter3_reg <= add_ln323_reg_3289;
        add_ln323_reg_3289_pp0_iter4_reg <= add_ln323_reg_3289_pp0_iter3_reg;
        add_ln712_12_reg_3698 <= add_ln712_12_fu_2861_p2;
        add_ln712_14_reg_3703 <= add_ln712_14_fu_2866_p2;
        add_ln712_1_reg_3678 <= add_ln712_1_fu_2811_p2;
        add_ln712_3_reg_3683 <= add_ln712_3_fu_2820_p2;
        add_ln712_6_reg_3668 <= add_ln712_6_fu_2798_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln238_reg_3201_pp0_iter2_reg <= icmp_ln238_reg_3201;
        icmp_ln238_reg_3201_pp0_iter3_reg <= icmp_ln238_reg_3201_pp0_iter2_reg;
        icmp_ln238_reg_3201_pp0_iter4_reg <= icmp_ln238_reg_3201_pp0_iter3_reg;
        icmp_ln238_reg_3201_pp0_iter5_reg <= icmp_ln238_reg_3201_pp0_iter4_reg;
        icmp_ln238_reg_3201_pp0_iter6_reg <= icmp_ln238_reg_3201_pp0_iter5_reg;
        icmp_ln246_reg_3213_pp0_iter2_reg <= icmp_ln246_reg_3213;
        icmp_ln246_reg_3213_pp0_iter3_reg <= icmp_ln246_reg_3213_pp0_iter2_reg;
        icmp_ln246_reg_3213_pp0_iter4_reg <= icmp_ln246_reg_3213_pp0_iter3_reg;
        icmp_ln246_reg_3213_pp0_iter5_reg <= icmp_ln246_reg_3213_pp0_iter4_reg;
        icmp_ln246_reg_3213_pp0_iter6_reg <= icmp_ln246_reg_3213_pp0_iter5_reg;
        icmp_ln267_1_reg_3248 <= icmp_ln267_1_fu_1041_p2;
        icmp_ln267_1_reg_3248_pp0_iter3_reg <= icmp_ln267_1_reg_3248;
        icmp_ln267_3_reg_3344 <= icmp_ln267_3_fu_1454_p2;
        icmp_ln267_4_reg_3239 <= icmp_ln267_4_fu_1035_p2;
        icmp_ln267_4_reg_3239_pp0_iter3_reg <= icmp_ln267_4_reg_3239;
        icmp_ln267_4_reg_3239_pp0_iter4_reg <= icmp_ln267_4_reg_3239_pp0_iter3_reg;
        icmp_ln267_reg_3222 <= icmp_ln267_fu_992_p2;
        icmp_ln267_reg_3222_pp0_iter3_reg <= icmp_ln267_reg_3222;
        icmp_ln267_reg_3222_pp0_iter4_reg <= icmp_ln267_reg_3222_pp0_iter3_reg;
        icmp_ln268_reg_3259 <= icmp_ln268_fu_1095_p2;
        icmp_ln268_reg_3259_pp0_iter3_reg <= icmp_ln268_reg_3259;
        icmp_ln273_reg_3275 <= icmp_ln273_fu_1159_p2;
        icmp_ln273_reg_3275_pp0_iter3_reg <= icmp_ln273_reg_3275;
        icmp_ln273_reg_3275_pp0_iter4_reg <= icmp_ln273_reg_3275_pp0_iter3_reg;
        icmp_ln298_reg_3283 <= icmp_ln298_fu_1181_p2;
        icmp_ln298_reg_3283_pp0_iter3_reg <= icmp_ln298_reg_3283;
        icmp_ln298_reg_3283_pp0_iter4_reg <= icmp_ln298_reg_3283_pp0_iter3_reg;
        mul_ln712_10_reg_3658 <= grp_fu_2775_p2;
        mul_ln712_11_reg_3663 <= grp_fu_2784_p2;
        mul_ln712_1_reg_3563 <= grp_fu_2656_p2;
        mul_ln712_2_reg_3618 <= grp_fu_2703_p2;
        mul_ln712_3_reg_3623 <= grp_fu_2712_p2;
        mul_ln712_4_reg_3628 <= grp_fu_2721_p2;
        mul_ln712_5_reg_3633 <= grp_fu_2730_p2;
        mul_ln712_6_reg_3638 <= grp_fu_2739_p2;
        mul_ln712_7_reg_3643 <= grp_fu_2748_p2;
        mul_ln712_8_reg_3648 <= grp_fu_2757_p2;
        mul_ln712_9_reg_3653 <= grp_fu_2766_p2;
        mul_ln712_reg_3558 <= grp_fu_2647_p2;
        newSecond75_reg_3254 <= newSecond75_fu_1073_p2;
        newSecond77_reg_3265 <= newSecond77_fu_1123_p2;
        newSecond_reg_3270 <= newSecond_fu_1153_p2;
        num_V_1_reg_3708 <= num_V_1_fu_2897_p3;
        select_ln272_1_reg_3418 <= select_ln272_1_fu_1624_p3;
        select_ln272_1_reg_3418_pp0_iter6_reg <= select_ln272_1_reg_3418;
        select_ln275_reg_3423 <= select_ln275_fu_1645_p3;
        select_ln275_reg_3423_pp0_iter6_reg <= select_ln275_reg_3423;
        select_ln285_11_reg_3438 <= select_ln285_11_fu_2016_p3;
        select_ln285_15_reg_3443 <= select_ln285_15_fu_2088_p3;
        select_ln285_3_reg_3428 <= select_ln285_3_fu_1880_p3;
        select_ln285_3_reg_3428_pp0_iter6_reg <= select_ln285_3_reg_3428;
        select_ln285_7_reg_3433 <= select_ln285_7_fu_1944_p3;
        select_ln285_7_reg_3433_pp0_iter6_reg <= select_ln285_7_reg_3433;
        select_ln298_1_reg_3453 <= select_ln298_1_fu_2336_p3;
        select_ln298_1_reg_3453_pp0_iter6_reg <= select_ln298_1_reg_3453;
        select_ln298_2_reg_3458 <= select_ln298_2_fu_2384_p3;
        select_ln298_2_reg_3458_pp0_iter6_reg <= select_ln298_2_reg_3458;
        select_ln298_3_reg_3463 <= select_ln298_3_fu_2432_p3;
        select_ln298_3_reg_3463_pp0_iter6_reg <= select_ln298_3_reg_3463;
        select_ln298_5_reg_3473 <= select_ln298_5_fu_2448_p3;
        select_ln298_5_reg_3473_pp0_iter6_reg <= select_ln298_5_reg_3473;
        select_ln298_reg_3448 <= select_ln298_fu_2288_p3;
        select_ln298_reg_3448_pp0_iter6_reg <= select_ln298_reg_3448;
        t_reg_3232 <= t_fu_1003_p3;
        t_reg_3232_pp0_iter3_reg <= t_reg_3232;
        tmp1_V_11_22_reg_3349 <= tmp1_V_11_22_fu_1459_p3;
        tmp1_V_11_26_reg_3356 <= tmp1_V_11_26_fu_1475_p3;
        tmp1_V_11_32_reg_3339 <= tmp1_V_11_32_fu_1433_p3;
        tmp2_V_7_1_reg_3468 <= tmp2_V_7_1_fu_2440_p3;
        tmp2_V_7_1_reg_3468_pp0_iter6_reg <= tmp2_V_7_1_reg_3468;
        trunc_ln213_reg_3190_pp0_iter2_reg <= trunc_ln213_reg_3190;
        trunc_ln213_reg_3190_pp0_iter3_reg <= trunc_ln213_reg_3190_pp0_iter2_reg;
        trunc_ln213_reg_3190_pp0_iter4_reg <= trunc_ln213_reg_3190_pp0_iter3_reg;
        trunc_ln712_1_reg_3693 <= trunc_ln712_1_fu_2829_p1;
        trunc_ln712_4_reg_3673 <= trunc_ln712_4_fu_2803_p1;
        trunc_ln712_reg_3688 <= trunc_ln712_fu_2825_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln246_reg_3213_pp0_iter6_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        b_fu_258 <= sext_ln260_fu_2662_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln246_reg_3213_pp0_iter5_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter5_reg == 1'd1))) begin
        firstBias_f_V_load_reg_3483 <= firstBias_f_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_837_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln238_reg_3201 <= icmp_ln238_fu_856_p2;
        trunc_ln213_reg_3190 <= trunc_ln213_fu_852_p1;
        trunc_ln323_2_reg_3217 <= trunc_ln323_2_fu_970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_837_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln238_fu_856_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln246_reg_3213 <= icmp_ln246_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln246_reg_3213_pp0_iter3_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1))) begin
        idxprom82_reg_3314[3 : 0] <= idxprom82_fu_1347_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln246_reg_3213_pp0_iter4_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        kr_V_0_01134_fu_266 <= sext_ln254_fu_1493_p1;
        kr_V_1_01135_fu_270 <= sext_ln254_1_fu_1497_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln246_reg_3213_pp0_iter5_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        kr_V_10_01144_fu_306 <= sext_ln254_10_fu_2580_p1;
        kr_V_11_01145_fu_310 <= sext_ln254_11_fu_2584_p1;
        kr_V_2_01136_fu_274 <= sext_ln254_2_fu_2548_p1;
        kr_V_3_01137_fu_278 <= sext_ln254_3_fu_2552_p1;
        kr_V_4_01138_fu_282 <= sext_ln254_4_fu_2556_p1;
        kr_V_5_01139_fu_286 <= sext_ln254_5_fu_2560_p1;
        kr_V_6_01140_fu_290 <= sext_ln254_6_fu_2564_p1;
        kr_V_7_01141_fu_294 <= sext_ln254_7_fu_2568_p1;
        kr_V_8_01142_fu_298 <= sext_ln254_8_fu_2572_p1;
        kr_V_9_01143_fu_302 <= sext_ln254_9_fu_2576_p1;
    end
end

always @ (*) begin
    if (((icmp_ln235_fu_837_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstBias_f_V_ce0 = 1'b1;
    end else begin
        firstBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_0_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        firstKernel_f_V_0_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_0_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_1_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_2_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        firstKernel_f_V_3_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln268_reg_3259 == 1'd0) & (icmp_ln267_1_reg_3248 == 1'd0))) begin
            input_r_address0 = zext_ln267_fu_1214_p1;
        end else if ((1'b1 == ap_condition_997)) begin
            input_r_address0 = zext_ln269_1_fu_1226_p1;
        end else if ((1'b1 == ap_condition_991)) begin
            input_r_address0 = zext_ln268_fu_1222_p1;
        end else if (((icmp_ln267_1_reg_3248 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd1))) begin
            input_r_address0 = zext_ln267_1_fu_1218_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln268_reg_3259 == 1'd0) & (icmp_ln267_1_reg_3248 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln268_reg_3259 == 1'd0) & (icmp_ln267_1_reg_3248 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_1_reg_3248 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (((icmp_ln268_reg_3259 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd0)) | ((icmp_ln268_reg_3259 == 1'd1) & (icmp_ln267_1_reg_3248 == 1'd0)))))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1548_fu_2884_p2 = (add_ln712_14_reg_3703 + add_ln712_13_fu_2875_p2);

assign add_ln239_fu_873_p2 = ($signed(sext_ln239_fu_865_p1) + $signed(17'd1));

assign add_ln247_fu_1289_p2 = ($signed(sext_ln247_fu_1281_p1) + $signed(17'd1));

assign add_ln260_fu_950_p2 = (j_fu_182 + 12'd1);

assign add_ln266_fu_987_p2 = (trunc_ln213_reg_3190 + 2'd1);

assign add_ln267_fu_1019_p2 = ($signed(sext_ln267_fu_1015_p1) + $signed(17'd2));

assign add_ln268_fu_1079_p2 = ($signed(sext_ln267_fu_1015_p1) + $signed(17'd3));

assign add_ln269_fu_1129_p2 = (trunc_ln267_fu_1011_p1 + 7'd2);

assign add_ln298_fu_1165_p2 = ($signed(sext_ln267_fu_1015_p1) + $signed(17'd1));

assign add_ln323_1_fu_2467_p2 = (tmp_51_cast_fu_2456_p3 + trunc_ln323_3_fu_2463_p1);

assign add_ln323_fu_1209_p2 = (sub_ln323_fu_1203_p2 + trunc_ln323_2_reg_3217);

assign add_ln712_10_fu_2855_p2 = (trunc_ln712_3_fu_2845_p1 + trunc_ln712_2_fu_2841_p1);

assign add_ln712_11_fu_2879_p2 = (add_ln712_12_reg_3698 + add_ln712_4_fu_2871_p2);

assign add_ln712_12_fu_2861_p2 = (add_ln712_9_fu_2849_p2 + add_ln712_6_reg_3668);

assign add_ln712_13_fu_2875_p2 = (trunc_ln712_1_reg_3693 + trunc_ln712_reg_3688);

assign add_ln712_14_fu_2866_p2 = (add_ln712_10_fu_2855_p2 + trunc_ln712_4_reg_3673);

assign add_ln712_1_fu_2811_p2 = (add_ln712_fu_2807_p2 + mul_ln712_9_reg_3653);

assign add_ln712_2_fu_2816_p2 = (mul_ln712_7_reg_3643 + mul_ln712_6_reg_3638);

assign add_ln712_3_fu_2820_p2 = (add_ln712_2_fu_2816_p2 + mul_ln712_5_reg_3633);

assign add_ln712_4_fu_2871_p2 = (add_ln712_3_reg_3683 + add_ln712_1_reg_3678);

assign add_ln712_5_fu_2793_p2 = (mul_ln712_1_reg_3563 + b_fu_258);

assign add_ln712_6_fu_2798_p2 = (add_ln712_5_fu_2793_p2 + mul_ln712_reg_3558);

assign add_ln712_7_fu_2833_p2 = (mul_ln712_2_reg_3618 + mul_ln712_4_reg_3628);

assign add_ln712_8_fu_2837_p2 = (mul_ln712_3_reg_3623 + mul_ln712_11_reg_3663);

assign add_ln712_9_fu_2849_p2 = (add_ln712_8_fu_2837_p2 + add_ln712_7_fu_2833_p2);

assign add_ln712_fu_2807_p2 = (mul_ln712_10_reg_3658 + mul_ln712_8_reg_3648);

assign and_ln267_1_fu_1390_p2 = (xor_ln268_fu_1384_p2 & icmp_ln267_1_reg_3248_pp0_iter3_reg);

assign and_ln267_fu_1364_p2 = (icmp_ln267_4_reg_3239_pp0_iter3_reg & icmp_ln267_1_reg_3248_pp0_iter3_reg);

assign and_ln268_fu_1374_p2 = (xor_ln267_fu_1368_p2 & icmp_ln268_reg_3259_pp0_iter3_reg);

assign and_ln279_1_fu_1722_p2 = (icmp_ln273_reg_3275_pp0_iter4_reg & icmp_ln267_reg_3222_pp0_iter4_reg);

assign and_ln279_fu_1703_p2 = (xor_ln279_fu_1698_p2 & icmp_ln273_reg_3275_pp0_iter4_reg);

assign and_ln281_1_fu_1746_p2 = (icmp_ln281_1_fu_1740_p2 & and_ln279_1_fu_1722_p2);

assign and_ln281_2_fu_1766_p2 = (icmp_ln281_2_fu_1760_p2 & and_ln279_1_fu_1722_p2);

assign and_ln281_3_fu_1798_p2 = (icmp_ln281_4_fu_1786_p2 & icmp_ln281_3_fu_1780_p2);

assign and_ln281_4_fu_1804_p2 = (icmp_ln281_5_fu_1792_p2 & and_ln279_1_fu_1722_p2);

assign and_ln281_5_fu_1810_p2 = (and_ln281_4_fu_1804_p2 & and_ln281_3_fu_1798_p2);

assign and_ln281_fu_1726_p2 = (icmp_ln281_fu_1716_p2 & and_ln279_1_fu_1722_p2);

assign and_ln285_1_fu_1846_p2 = (icmp_ln281_fu_1716_p2 & and_ln285_fu_1841_p2);

assign and_ln285_2_fu_1860_p2 = (icmp_ln281_1_fu_1740_p2 & and_ln285_fu_1841_p2);

assign and_ln285_3_fu_1874_p2 = (icmp_ln281_2_fu_1760_p2 & and_ln285_fu_1841_p2);

assign and_ln285_fu_1841_p2 = (xor_ln273_fu_1836_p2 & icmp_ln267_reg_3222_pp0_iter4_reg);

assign and_ln294_1_fu_2215_p2 = (xor_ln279_fu_1698_p2 & icmp_ln267_4_reg_3239_pp0_iter4_reg);

assign and_ln294_fu_2203_p2 = (icmp_ln267_reg_3222_pp0_iter4_reg & icmp_ln267_4_reg_3239_pp0_iter4_reg);

assign and_ln298_fu_2233_p2 = (xor_ln267_1_fu_2228_p2 & icmp_ln298_reg_3283_pp0_iter4_reg);

assign and_ln301_1_fu_2252_p2 = (icmp_ln267_reg_3222_pp0_iter4_reg & and_ln298_fu_2233_p2);

assign and_ln301_2_fu_2257_p2 = (icmp_ln272_fu_1619_p2 & and_ln301_1_fu_2252_p2);

assign and_ln301_3_fu_2271_p2 = (icmp_ln238_reg_3201_pp0_iter4_reg & and_ln301_1_fu_2252_p2);

assign and_ln301_fu_2238_p2 = (xor_ln279_fu_1698_p2 & and_ln298_fu_2233_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2218 = ((icmp_ln246_reg_3213_pp0_iter3_reg == 1'd1) & (icmp_ln238_reg_3201_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_condition_2222 = ((icmp_ln235_fu_837_p2 == 1'd0) & (icmp_ln246_fu_931_p2 == 1'd0) & (icmp_ln238_fu_856_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_2226 = ((icmp_ln235_fu_837_p2 == 1'd0) & (icmp_ln246_fu_931_p2 == 1'd1) & (icmp_ln238_fu_856_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_991 = (((icmp_ln268_reg_3259 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd0)) | ((icmp_ln268_reg_3259 == 1'd1) & (icmp_ln267_1_reg_3248 == 1'd0)));
end

always @ (*) begin
    ap_condition_997 = ((icmp_ln268_reg_3259 == 1'd0) & (icmp_ln267_1_reg_3248 == 1'd1) & (icmp_ln267_4_reg_3239 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign d_9_fu_1335_p3 = ((tmp_19_fu_1295_p3[0:0] == 1'b1) ? sub_ln247_fu_1321_p2 : tmp_13_fu_1327_p3);

assign firstBias_f_V_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_0_0_address0 = idxprom82_fu_1347_p1;

assign firstKernel_f_V_0_1_address0 = idxprom82_fu_1347_p1;

assign firstKernel_f_V_0_2_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_1_0_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_1_1_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_1_2_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_2_0_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_2_1_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_2_2_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_3_0_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_3_1_address0 = idxprom82_reg_3314;

assign firstKernel_f_V_3_2_address0 = idxprom82_reg_3314;

assign i_7_fu_919_p3 = ((tmp_fu_879_p3[0:0] == 1'b1) ? sub_ln239_fu_905_p2 : tmp_s_fu_911_p3);

assign icmp_ln235_fu_837_p2 = ((id_fu_186 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_856_p2 = ((trunc_ln213_fu_852_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_931_p2 = ((i_7_fu_919_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln260_1_fu_956_p2 = ((add_ln260_fu_950_p2 < 12'd3) ? 1'b1 : 1'b0);

assign icmp_ln260_fu_1577_p2 = ((trunc_ln213_reg_3190_pp0_iter4_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln267_1_fu_1041_p2 = ((t_fu_1003_p3 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln267_2_fu_1441_p2 = ((t_reg_3232_pp0_iter3_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln267_3_fu_1454_p2 = ((t_reg_3232_pp0_iter3_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln267_4_fu_1035_p2 = (($signed(tmp_20_fu_1025_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_992_p2 = ((add_ln266_fu_987_p2 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln268_fu_1095_p2 = (($signed(tmp_21_fu_1085_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_1619_p2 = ((trunc_ln213_reg_3190_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln273_fu_1159_p0 = i_fu_314;

assign icmp_ln273_fu_1159_p2 = (($signed(icmp_ln273_fu_1159_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln275_fu_1632_p2 = ((trunc_ln213_reg_3190_pp0_iter4_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln281_1_fu_1740_p2 = ((or_ln_fu_1668_p3 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln281_2_fu_1760_p2 = ((or_ln_fu_1668_p3 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln281_3_fu_1780_p2 = ((or_ln_fu_1668_p3 != 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln281_4_fu_1786_p2 = ((or_ln_fu_1668_p3 != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln281_5_fu_1792_p2 = ((or_ln_fu_1668_p3 != 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_1716_p2 = ((or_ln_fu_1668_p3 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_1181_p2 = (($signed(tmp_22_fu_1171_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign id_2_fu_843_p2 = (id_fu_186 + 12'd1);

assign idxprom82_fu_1347_p1 = $unsigned(d_9_fu_1335_p3);

assign newFirst74_fu_1067_p2 = (zext_ln270_fu_1047_p1 - trunc_ln267_1_fu_1051_p1);

assign newFirst76_fu_1117_p2 = (zext_ln270_fu_1047_p1 - trunc_ln268_fu_1101_p1);

assign newFirst_fu_1147_p2 = (tmp_14_fu_1139_p3 + zext_ln270_fu_1047_p1);

assign newSecond75_fu_1073_p2 = (tmp_42_cast_fu_1059_p3 + newFirst74_fu_1067_p2);

assign newSecond77_fu_1123_p2 = (tmp_43_cast_fu_1109_p3 + newFirst76_fu_1117_p2);

assign newSecond_fu_1153_p2 = (newFirst_fu_1147_p2 - zext_ln269_fu_1135_p1);

assign num_V_1_fu_2897_p3 = ((tmp_23_fu_2889_p3[0:0] == 1'b1) ? 35'd0 : add_ln1548_fu_2884_p2);

assign or_ln267_fu_1395_p2 = (and_ln268_fu_1374_p2 | and_ln267_1_fu_1390_p2);

assign or_ln268_fu_1379_p2 = (icmp_ln268_reg_3259_pp0_iter3_reg | and_ln267_fu_1364_p2);

assign or_ln285_fu_1824_p2 = (icmp_ln273_reg_3275_pp0_iter4_reg | icmp_ln267_reg_3222_pp0_iter4_reg);

assign or_ln298_fu_2284_p2 = (icmp_ln298_reg_3283_pp0_iter4_reg | icmp_ln267_4_reg_3239_pp0_iter4_reg);

assign or_ln_fu_1668_p3 = {{1'd1}, {trunc_ln213_reg_3190_pp0_iter4_reg}};

assign out_r_address0 = zext_ln323_fu_2905_p1;

assign out_r_d0 = num_V_1_reg_3708;

assign p_and_t3_cast_fu_897_p3 = {{1'd0}, {xor_ln239_fu_891_p2}};

assign p_and_t7_cast_fu_1313_p3 = {{1'd0}, {xor_ln247_fu_1307_p2}};

assign select_ln260_fu_962_p3 = ((icmp_ln260_1_fu_956_p2[0:0] == 1'b1) ? add_ln260_fu_950_p2 : 12'd0);

assign select_ln267_1_fu_1425_p3 = ((and_ln267_fu_1364_p2[0:0] == 1'b1) ? trunc_ln267_5_fu_1417_p1 : trunc_ln267_6_fu_1421_p1);

assign select_ln267_fu_1409_p3 = ((and_ln267_1_fu_1390_p2[0:0] == 1'b1) ? trunc_ln267_3_fu_1401_p1 : trunc_ln267_4_fu_1405_p1);

assign select_ln272_1_fu_1624_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_1_fu_322 : select_ln272_fu_1612_p3);

assign select_ln272_fu_1612_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_3_1_fu_1590_p3 : tmp1_V_2_fu_334);

assign select_ln274_fu_1653_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_0_3_fu_1598_p3 : tmp1_V_2_1_fu_338);

assign select_ln275_1_fu_1683_p3 = ((icmp_ln275_fu_1632_p2[0:0] == 1'b1) ? tmp2_V_0_fu_1675_p3 : tmp2_V_0_2_fu_190);

assign select_ln275_2_fu_2132_p3 = ((icmp_ln275_fu_1632_p2[0:0] == 1'b1) ? tmp2_V_6_fu_2124_p3 : tmp2_V_6_2_fu_210);

assign select_ln275_3_fu_2175_p3 = ((icmp_ln275_fu_1632_p2[0:0] == 1'b1) ? tmp2_V_9_fu_2147_p14 : tmp2_V_9_2_fu_222);

assign select_ln275_fu_1645_p3 = ((icmp_ln275_fu_1632_p2[0:0] == 1'b1) ? tmp2_V_3_fu_1637_p3 : tmp2_V_3_2_fu_202);

assign select_ln279_1_fu_1952_p3 = ((and_ln279_fu_1703_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1660_p3 : tmp2_V_1_2_fu_194);

assign select_ln279_2_fu_2024_p3 = ((and_ln279_fu_1703_p2[0:0] == 1'b1) ? select_ln275_1_fu_1683_p3 : tmp2_V_0_2_fu_190);

assign select_ln279_fu_1708_p3 = ((and_ln279_fu_1703_p2[0:0] == 1'b1) ? tmp2_V_5_2_fu_206 : tmp1_V_4_fu_318);

assign select_ln281_10_fu_1976_p3 = ((and_ln281_2_fu_1766_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1660_p3 : select_ln281_9_fu_1968_p3);

assign select_ln281_11_fu_1984_p3 = ((and_ln281_5_fu_1810_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1660_p3 : select_ln281_10_fu_1976_p3);

assign select_ln281_12_fu_2032_p3 = ((and_ln281_fu_1726_p2[0:0] == 1'b1) ? select_ln275_1_fu_1683_p3 : select_ln279_2_fu_2024_p3);

assign select_ln281_13_fu_2040_p3 = ((and_ln281_1_fu_1746_p2[0:0] == 1'b1) ? select_ln275_1_fu_1683_p3 : select_ln281_12_fu_2032_p3);

assign select_ln281_14_fu_2048_p3 = ((and_ln281_2_fu_1766_p2[0:0] == 1'b1) ? select_ln275_1_fu_1683_p3 : select_ln281_13_fu_2040_p3);

assign select_ln281_15_fu_2056_p3 = ((and_ln281_5_fu_1810_p2[0:0] == 1'b1) ? select_ln275_1_fu_1683_p3 : select_ln281_14_fu_2048_p3);

assign select_ln281_1_fu_1752_p3 = ((and_ln281_1_fu_1746_p2[0:0] == 1'b1) ? tmp1_V_2_fu_334 : select_ln281_fu_1732_p3);

assign select_ln281_2_fu_1772_p3 = ((and_ln281_2_fu_1766_p2[0:0] == 1'b1) ? tmp1_V_6_1_fu_1582_p3 : select_ln281_1_fu_1752_p3);

assign select_ln281_3_fu_1816_p3 = ((and_ln281_5_fu_1810_p2[0:0] == 1'b1) ? tmp1_V_4_fu_318 : select_ln281_2_fu_1772_p3);

assign select_ln281_4_fu_1888_p3 = ((and_ln281_fu_1726_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1691_p3 : tmp2_V_2_2_fu_198);

assign select_ln281_5_fu_1896_p3 = ((and_ln281_1_fu_1746_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1691_p3 : select_ln281_4_fu_1888_p3);

assign select_ln281_6_fu_1904_p3 = ((and_ln281_2_fu_1766_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1691_p3 : select_ln281_5_fu_1896_p3);

assign select_ln281_7_fu_1912_p3 = ((and_ln281_5_fu_1810_p2[0:0] == 1'b1) ? tmp2_V_2_fu_1691_p3 : select_ln281_6_fu_1904_p3);

assign select_ln281_8_fu_1960_p3 = ((and_ln281_fu_1726_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1660_p3 : select_ln279_1_fu_1952_p3);

assign select_ln281_9_fu_1968_p3 = ((and_ln281_1_fu_1746_p2[0:0] == 1'b1) ? tmp2_V_1_fu_1660_p3 : select_ln281_8_fu_1960_p3);

assign select_ln281_fu_1732_p3 = ((and_ln281_fu_1726_p2[0:0] == 1'b1) ? tmp1_V_1_fu_322 : select_ln279_fu_1708_p3);

assign select_ln285_10_fu_2008_p3 = ((and_ln285_2_fu_1860_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_194 : select_ln285_9_fu_2000_p3);

assign select_ln285_11_fu_2016_p3 = ((and_ln285_3_fu_1874_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_194 : select_ln285_10_fu_2008_p3);

assign select_ln285_12_fu_2064_p3 = ((or_ln285_fu_1824_p2[0:0] == 1'b1) ? select_ln281_15_fu_2056_p3 : tmp2_V_0_2_fu_190);

assign select_ln285_13_fu_2072_p3 = ((and_ln285_1_fu_1846_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_190 : select_ln285_12_fu_2064_p3);

assign select_ln285_14_fu_2080_p3 = ((and_ln285_2_fu_1860_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_190 : select_ln285_13_fu_2072_p3);

assign select_ln285_15_fu_2088_p3 = ((and_ln285_3_fu_1874_p2[0:0] == 1'b1) ? tmp2_V_0_2_fu_190 : select_ln285_14_fu_2080_p3);

assign select_ln285_1_fu_1852_p3 = ((and_ln285_1_fu_1846_p2[0:0] == 1'b1) ? tmp1_V_1_fu_322 : select_ln285_fu_1828_p3);

assign select_ln285_2_fu_1866_p3 = ((and_ln285_2_fu_1860_p2[0:0] == 1'b1) ? tmp1_V_2_fu_334 : select_ln285_1_fu_1852_p3);

assign select_ln285_3_fu_1880_p3 = ((and_ln285_3_fu_1874_p2[0:0] == 1'b1) ? tmp1_V_6_1_fu_1582_p3 : select_ln285_2_fu_1866_p3);

assign select_ln285_4_fu_1920_p3 = ((or_ln285_fu_1824_p2[0:0] == 1'b1) ? select_ln281_7_fu_1912_p3 : tmp2_V_2_2_fu_198);

assign select_ln285_5_fu_1928_p3 = ((and_ln285_1_fu_1846_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_198 : select_ln285_4_fu_1920_p3);

assign select_ln285_6_fu_1936_p3 = ((and_ln285_2_fu_1860_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_198 : select_ln285_5_fu_1928_p3);

assign select_ln285_7_fu_1944_p3 = ((and_ln285_3_fu_1874_p2[0:0] == 1'b1) ? tmp2_V_2_2_fu_198 : select_ln285_6_fu_1936_p3);

assign select_ln285_8_fu_1992_p3 = ((or_ln285_fu_1824_p2[0:0] == 1'b1) ? select_ln281_11_fu_1984_p3 : tmp2_V_1_2_fu_194);

assign select_ln285_9_fu_2000_p3 = ((and_ln285_1_fu_1846_p2[0:0] == 1'b1) ? tmp2_V_1_2_fu_194 : select_ln285_8_fu_1992_p3);

assign select_ln285_fu_1828_p3 = ((or_ln285_fu_1824_p2[0:0] == 1'b1) ? select_ln281_3_fu_1816_p3 : tmp2_V_5_2_fu_206);

assign select_ln288_fu_2096_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_6_1_fu_1582_p3 : tmp1_V_5_fu_330);

assign select_ln294_1_fu_2220_p3 = ((and_ln294_1_fu_2215_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_230 : select_ln294_fu_2207_p3);

assign select_ln294_2_fu_2296_p3 = ((and_ln294_fu_2203_p2[0:0] == 1'b1) ? tmp1_V_11_33_fu_2117_p3 : tmp2_V_10_2_fu_226);

assign select_ln294_3_fu_2304_p3 = ((and_ln294_1_fu_2215_p2[0:0] == 1'b1) ? tmp1_V_11_33_fu_2117_p3 : select_ln294_2_fu_2296_p3);

assign select_ln294_4_fu_2344_p3 = ((and_ln294_fu_2203_p2[0:0] == 1'b1) ? select_ln275_3_fu_2175_p3 : tmp2_V_9_2_fu_222);

assign select_ln294_5_fu_2352_p3 = ((and_ln294_1_fu_2215_p2[0:0] == 1'b1) ? select_ln275_3_fu_2175_p3 : select_ln294_4_fu_2344_p3);

assign select_ln294_6_fu_2392_p3 = ((and_ln294_fu_2203_p2[0:0] == 1'b1) ? tmp1_V_11_34_fu_2190_p3 : tmp1_V_11_27_fu_1606_p3);

assign select_ln294_7_fu_2400_p3 = ((and_ln294_1_fu_2215_p2[0:0] == 1'b1) ? tmp2_V_8_2_fu_218 : select_ln294_6_fu_2392_p3);

assign select_ln294_fu_2207_p3 = ((and_ln294_fu_2203_p2[0:0] == 1'b1) ? tmp2_V_11_fu_2198_p3 : tmp2_V_11_2_fu_230);

assign select_ln298_1_fu_2336_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? select_ln301_5_fu_2328_p3 : tmp2_V_10_2_fu_226);

assign select_ln298_2_fu_2384_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? select_ln301_8_fu_2376_p3 : tmp2_V_9_2_fu_222);

assign select_ln298_3_fu_2432_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? select_ln301_11_fu_2424_p3 : tmp2_V_8_2_fu_218);

assign select_ln298_5_fu_2448_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? select_ln275_2_fu_2132_p3 : tmp2_V_6_2_fu_210);

assign select_ln298_fu_2288_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? select_ln301_2_fu_2276_p3 : tmp2_V_11_2_fu_230);

assign select_ln301_10_fu_2416_p3 = ((and_ln301_2_fu_2257_p2[0:0] == 1'b1) ? tmp1_V_5_fu_330 : select_ln301_9_fu_2408_p3);

assign select_ln301_11_fu_2424_p3 = ((and_ln301_3_fu_2271_p2[0:0] == 1'b1) ? tmp1_V_4_fu_318 : select_ln301_10_fu_2416_p3);

assign select_ln301_1_fu_2263_p3 = ((and_ln301_2_fu_2257_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_230 : select_ln301_fu_2244_p3);

assign select_ln301_2_fu_2276_p3 = ((and_ln301_3_fu_2271_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_230 : select_ln301_1_fu_2263_p3);

assign select_ln301_3_fu_2312_p3 = ((and_ln301_fu_2238_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_226 : select_ln294_3_fu_2304_p3);

assign select_ln301_4_fu_2320_p3 = ((and_ln301_2_fu_2257_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_226 : select_ln301_3_fu_2312_p3);

assign select_ln301_5_fu_2328_p3 = ((and_ln301_3_fu_2271_p2[0:0] == 1'b1) ? tmp2_V_10_2_fu_226 : select_ln301_4_fu_2320_p3);

assign select_ln301_6_fu_2360_p3 = ((and_ln301_fu_2238_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_222 : select_ln294_5_fu_2352_p3);

assign select_ln301_7_fu_2368_p3 = ((and_ln301_2_fu_2257_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_222 : select_ln301_6_fu_2360_p3);

assign select_ln301_8_fu_2376_p3 = ((and_ln301_3_fu_2271_p2[0:0] == 1'b1) ? tmp2_V_9_2_fu_222 : select_ln301_7_fu_2368_p3);

assign select_ln301_9_fu_2408_p3 = ((and_ln301_fu_2238_p2[0:0] == 1'b1) ? tmp2_V_8_2_fu_218 : select_ln294_7_fu_2400_p3);

assign select_ln301_fu_2244_p3 = ((and_ln301_fu_2238_p2[0:0] == 1'b1) ? tmp2_V_11_2_fu_230 : select_ln294_1_fu_2220_p3);

assign sext_ln239_1_fu_927_p1 = i_7_fu_919_p3;

assign sext_ln239_fu_865_p0 = i_fu_314;

assign sext_ln239_fu_865_p1 = sext_ln239_fu_865_p0;

assign sext_ln247_1_fu_1343_p1 = d_9_fu_1335_p3;

assign sext_ln247_fu_1281_p0 = d_fu_262;

assign sext_ln247_fu_1281_p1 = sext_ln247_fu_1281_p0;

assign sext_ln254_10_fu_2580_p1 = $signed(firstKernel_f_V_3_1_q0);

assign sext_ln254_11_fu_2584_p1 = $signed(firstKernel_f_V_3_2_q0);

assign sext_ln254_1_fu_1497_p1 = $signed(firstKernel_f_V_0_1_q0);

assign sext_ln254_2_fu_2548_p1 = $signed(firstKernel_f_V_0_2_q0);

assign sext_ln254_3_fu_2552_p1 = $signed(firstKernel_f_V_1_0_q0);

assign sext_ln254_4_fu_2556_p1 = $signed(firstKernel_f_V_1_1_q0);

assign sext_ln254_5_fu_2560_p1 = $signed(firstKernel_f_V_1_2_q0);

assign sext_ln254_6_fu_2564_p1 = $signed(firstKernel_f_V_2_0_q0);

assign sext_ln254_7_fu_2568_p1 = $signed(firstKernel_f_V_2_1_q0);

assign sext_ln254_8_fu_2572_p1 = $signed(firstKernel_f_V_2_2_q0);

assign sext_ln254_9_fu_2576_p1 = $signed(firstKernel_f_V_3_0_q0);

assign sext_ln254_fu_1493_p1 = $signed(firstKernel_f_V_0_0_q0);

assign sext_ln260_fu_2662_p1 = $signed(firstBias_f_V_load_reg_3483);

assign sext_ln267_fu_1015_p0 = i_fu_314;

assign sext_ln267_fu_1015_p1 = sext_ln267_fu_1015_p0;

assign sub_ln239_fu_905_p2 = (8'd0 - p_and_t3_cast_fu_897_p3);

assign sub_ln247_fu_1321_p2 = (4'd0 - p_and_t7_cast_fu_1313_p3);

assign sub_ln323_fu_1203_p2 = (tmp_49_cast_fu_1195_p3 - trunc_ln323_fu_1187_p1);

assign t_fu_1003_p3 = ((icmp_ln267_fu_992_p2[0:0] == 1'b1) ? add_ln266_fu_987_p2 : xor_ln267_2_fu_998_p2);

assign tmp1_V_0_3_fu_1598_p3 = ((icmp_ln260_fu_1577_p2[0:0] == 1'b1) ? tmp1_V_0_fu_238 : tmp1_V_0_2_fu_234);

assign tmp1_V_11_21_fu_1446_p3 = ((icmp_ln267_2_fu_1441_p2[0:0] == 1'b1) ? tmp1_V_8_fu_254 : tmp1_V_11_32_fu_1433_p3);

assign tmp1_V_11_22_fu_1459_p3 = ((icmp_ln267_3_fu_1454_p2[0:0] == 1'b1) ? tmp1_V_8_fu_254 : tmp1_V_11_21_fu_1446_p3);

assign tmp1_V_11_23_fu_1467_p3 = ((icmp_ln267_2_fu_1441_p2[0:0] == 1'b1) ? tmp1_V_11_32_fu_1433_p3 : tmp1_V_7_fu_250);

assign tmp1_V_11_26_fu_1475_p3 = ((icmp_ln267_3_fu_1454_p2[0:0] == 1'b1) ? tmp1_V_7_fu_250 : tmp1_V_11_23_fu_1467_p3);

assign tmp1_V_11_27_fu_1606_p3 = ((icmp_ln267_3_reg_3344[0:0] == 1'b1) ? tmp1_V_11_32_reg_3339 : tmp1_V_11_fu_246);

assign tmp1_V_11_28_fu_2111_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_11_27_fu_1606_p3 : tmp1_V_11_22_reg_3349);

assign tmp1_V_11_30_fu_2183_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_4_fu_318 : tmp1_V_11_27_fu_1606_p3);

assign tmp1_V_11_32_fu_1433_p3 = ((or_ln267_fu_1395_p2[0:0] == 1'b1) ? select_ln267_fu_1409_p3 : select_ln267_1_fu_1425_p3);

assign tmp1_V_11_33_fu_2117_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_11_26_reg_3356 : tmp1_V_11_28_fu_2111_p3);

assign tmp1_V_11_34_fu_2190_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_5_fu_330 : tmp1_V_11_30_fu_2183_p3);

assign tmp1_V_3_1_fu_1590_p3 = ((icmp_ln260_fu_1577_p2[0:0] == 1'b1) ? tmp1_V_3_fu_242 : tmp1_V_0_fu_238);

assign tmp1_V_6_1_fu_1582_p3 = ((icmp_ln260_fu_1577_p2[0:0] == 1'b1) ? tmp1_V_11_fu_246 : tmp1_V_3_fu_242);

assign tmp2_V_0_fu_1675_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_0_3_fu_1598_p3 : tmp1_V_1_1_fu_326);

assign tmp2_V_11_fu_2198_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_11_26_reg_3356 : tmp1_V_11_22_reg_3349);

assign tmp2_V_1_fu_1660_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_1_1_fu_326 : select_ln274_fu_1653_p3);

assign tmp2_V_2_fu_1691_p3 = ((icmp_ln238_reg_3201_pp0_iter4_reg[0:0] == 1'b1) ? tmp1_V_1_1_fu_326 : tmp1_V_2_1_fu_338);

assign tmp2_V_3_fu_1637_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_3_1_fu_1590_p3 : tmp1_V_1_fu_322);

assign tmp2_V_6_fu_2124_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_6_1_fu_1582_p3 : tmp1_V_4_fu_318);

assign tmp2_V_7_1_fu_2440_p3 = ((or_ln298_fu_2284_p2[0:0] == 1'b1) ? tmp2_V_7_fu_2103_p3 : tmp2_V_7_2_fu_214);

assign tmp2_V_7_fu_2103_p3 = ((icmp_ln272_fu_1619_p2[0:0] == 1'b1) ? tmp1_V_4_fu_318 : select_ln288_fu_2096_p3);

assign tmp2_V_9_fu_2147_p13 = {{2'd2}, {trunc_ln213_reg_3190_pp0_iter4_reg}};

assign tmp_13_fu_1327_p3 = {{1'd0}, {trunc_ln247_1_fu_1303_p1}};

assign tmp_14_fu_1139_p3 = {{add_ln269_fu_1129_p2}, {2'd0}};

assign tmp_19_fu_1295_p3 = add_ln247_fu_1289_p2[32'd16];

assign tmp_20_fu_1025_p4 = {{add_ln267_fu_1019_p2[16:7]}};

assign tmp_21_fu_1085_p4 = {{add_ln268_fu_1079_p2[16:7]}};

assign tmp_22_fu_1171_p4 = {{add_ln298_fu_1165_p2[16:7]}};

assign tmp_23_fu_2889_p3 = add_ln712_11_fu_2879_p2[32'd35];

assign tmp_42_cast_fu_1059_p3 = {{trunc_ln267_2_fu_1055_p1}, {2'd0}};

assign tmp_43_cast_fu_1109_p3 = {{trunc_ln268_1_fu_1105_p1}, {2'd0}};

assign tmp_49_cast_fu_1195_p3 = {{trunc_ln323_1_fu_1191_p1}, {2'd0}};

assign tmp_51_cast_fu_2456_p3 = {{add_ln323_reg_3289_pp0_iter4_reg}, {3'd0}};

assign tmp_fu_879_p3 = add_ln239_fu_873_p2[32'd16];

assign tmp_s_fu_911_p3 = {{1'd0}, {trunc_ln239_1_fu_887_p1}};

assign trunc_ln213_fu_852_p1 = j_fu_182[1:0];

assign trunc_ln239_1_fu_887_p1 = add_ln239_fu_873_p2[6:0];

assign trunc_ln239_fu_869_p0 = i_fu_314;

assign trunc_ln239_fu_869_p1 = trunc_ln239_fu_869_p0[6:0];

assign trunc_ln247_1_fu_1303_p1 = add_ln247_fu_1289_p2[2:0];

assign trunc_ln247_fu_1285_p0 = d_fu_262;

assign trunc_ln247_fu_1285_p1 = trunc_ln247_fu_1285_p0[2:0];

assign trunc_ln267_1_fu_1051_p1 = add_ln267_fu_1019_p2[8:0];

assign trunc_ln267_2_fu_1055_p1 = add_ln267_fu_1019_p2[6:0];

assign trunc_ln267_3_fu_1401_p1 = input_r_q0[11:0];

assign trunc_ln267_4_fu_1405_p1 = input_r_q0[11:0];

assign trunc_ln267_5_fu_1417_p1 = input_r_q0[11:0];

assign trunc_ln267_6_fu_1421_p1 = input_r_q0[11:0];

assign trunc_ln267_fu_1011_p0 = i_fu_314;

assign trunc_ln267_fu_1011_p1 = trunc_ln267_fu_1011_p0[6:0];

assign trunc_ln268_1_fu_1105_p1 = add_ln268_fu_1079_p2[6:0];

assign trunc_ln268_fu_1101_p1 = add_ln268_fu_1079_p2[8:0];

assign trunc_ln323_1_fu_1191_p0 = i_fu_314;

assign trunc_ln323_1_fu_1191_p1 = trunc_ln323_1_fu_1191_p0[6:0];

assign trunc_ln323_2_fu_970_p1 = j_fu_182[8:0];

assign trunc_ln323_3_fu_2463_p1 = d_fu_262[11:0];

assign trunc_ln323_fu_1187_p0 = i_fu_314;

assign trunc_ln323_fu_1187_p1 = trunc_ln323_fu_1187_p0[8:0];

assign trunc_ln712_1_fu_2829_p1 = add_ln712_3_fu_2820_p2[34:0];

assign trunc_ln712_2_fu_2841_p1 = add_ln712_7_fu_2833_p2[34:0];

assign trunc_ln712_3_fu_2845_p1 = add_ln712_8_fu_2837_p2[34:0];

assign trunc_ln712_4_fu_2803_p1 = add_ln712_6_fu_2798_p2[34:0];

assign trunc_ln712_fu_2825_p1 = add_ln712_1_fu_2811_p2[34:0];

assign xor_ln239_fu_891_p2 = (trunc_ln239_fu_869_p1 ^ 7'd127);

assign xor_ln247_fu_1307_p2 = (trunc_ln247_fu_1285_p1 ^ 3'd7);

assign xor_ln267_1_fu_2228_p2 = (icmp_ln267_4_reg_3239_pp0_iter4_reg ^ 1'd1);

assign xor_ln267_2_fu_998_p2 = (trunc_ln213_reg_3190 ^ 2'd2);

assign xor_ln267_fu_1368_p2 = (1'd1 ^ and_ln267_fu_1364_p2);

assign xor_ln268_fu_1384_p2 = (or_ln268_fu_1379_p2 ^ 1'd1);

assign xor_ln273_fu_1836_p2 = (icmp_ln273_reg_3275_pp0_iter4_reg ^ 1'd1);

assign xor_ln279_fu_1698_p2 = (icmp_ln267_reg_3222_pp0_iter4_reg ^ 1'd1);

assign zext_ln267_1_fu_1218_p1 = newSecond75_reg_3254;

assign zext_ln267_fu_1214_p1 = t_reg_3232;

assign zext_ln268_fu_1222_p1 = newSecond77_reg_3265;

assign zext_ln269_1_fu_1226_p1 = newSecond_reg_3270;

assign zext_ln269_fu_1135_p1 = add_ln269_fu_1129_p2;

assign zext_ln270_fu_1047_p1 = t_fu_1003_p3;

assign zext_ln323_fu_2905_p1 = add_ln323_1_reg_3478_pp0_iter10_reg;

always @ (posedge ap_clk) begin
    idxprom82_reg_3314[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //master_fix_convolution1_fix_Pipeline_Conv_loop
