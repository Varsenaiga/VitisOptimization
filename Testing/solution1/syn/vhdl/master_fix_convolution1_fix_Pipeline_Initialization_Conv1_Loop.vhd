-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity master_fix_convolution1_fix_Pipeline_Initialization_Conv1_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    tmp1_V_11_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_11_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_10_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_10_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_11_4_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_11_4_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_11_6_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_11_6_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_5_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_5_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_4_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_4_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_2_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_2_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_1_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_1_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_0_0_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_0_0_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_11_9_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_11_9_out_ap_vld : OUT STD_LOGIC;
    tmp1_V_11_11_out : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp1_V_11_11_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of master_fix_convolution1_fix_Pipeline_Initialization_Conv1_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv12_FF9 : STD_LOGIC_VECTOR (11 downto 0) := "111111111001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln19_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_2_reg_838 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_2_reg_838_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln19_reg_847 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_271_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_851 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln24_1_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal r_fu_88 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_r_2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln19_fu_253_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp1_V_11_2_fu_92 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_20_fu_639_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_9_fu_96 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_19_fu_631_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_0_0_fu_100 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_8_fu_539_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_1_0_fu_104 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_7_fu_531_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_2_0_fu_108 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_5_fu_515_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_4_0_fu_112 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_3_fu_499_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_5_0_fu_116 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_1_fu_483_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_6_fu_120 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_18_fu_607_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_4_fu_124 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_16_fu_591_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_11_fu_128 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_15_fu_575_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_13_fu_132 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_fu_559_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_fu_136 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln21_fu_342_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln21_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal empty_fu_243_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln20_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln20_fu_265_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln21_fu_288_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln21_fu_292_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln21_fu_288_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln21_fu_296_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln21_fu_292_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln21_fu_314_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_and_t_cast_fu_320_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln21_1_fu_310_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_302_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_fu_328_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_334_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln24_1_fu_367_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_29_cast_fu_371_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln24_fu_363_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln24_fu_379_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln24_fu_385_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln24_fu_388_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln23_4_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_3_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_2_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln23_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln23_1_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln23_2_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_fu_469_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_2_fu_491_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_4_fu_507_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln23_6_fu_523_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_21_fu_547_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_fu_551_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_2_fu_567_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_4_fu_583_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_V_11_17_fu_599_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_8_fu_615_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln24_9_fu_623_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_511 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component master_fix_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component master_fix_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_511)) then 
                    i_fu_136 <= select_ln21_fu_342_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_136 <= ap_const_lv16_FFFF;
                end if;
            end if; 
        end if;
    end process;

    r_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln19_fu_247_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    r_fu_88 <= add_ln19_fu_253_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    r_fu_88 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln19_reg_847 <= icmp_ln19_fu_247_p2;
                r_2_reg_838 <= ap_sig_allocacmp_r_2;
                r_2_reg_838_pp0_iter1_reg <= r_2_reg_838;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln19_fu_247_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_851 <= j_fu_271_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp1_V_0_0_fu_100 <= select_ln23_8_fu_539_p3;
                tmp1_V_11_11_fu_128 <= tmp1_V_11_15_fu_575_p3;
                tmp1_V_11_13_fu_132 <= tmp1_V_11_fu_559_p3;
                tmp1_V_11_2_fu_92 <= tmp1_V_11_20_fu_639_p3;
                tmp1_V_11_4_fu_124 <= tmp1_V_11_16_fu_591_p3;
                tmp1_V_11_6_fu_120 <= tmp1_V_11_18_fu_607_p3;
                tmp1_V_11_9_fu_96 <= tmp1_V_11_19_fu_631_p3;
                tmp1_V_1_0_fu_104 <= select_ln23_7_fu_531_p3;
                tmp1_V_2_0_fu_108 <= select_ln23_5_fu_515_p3;
                tmp1_V_4_0_fu_112 <= select_ln23_3_fu_499_p3;
                tmp1_V_5_0_fu_116 <= select_ln23_1_fu_483_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln19_fu_253_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_2) + unsigned(ap_const_lv3_1));
    add_ln20_fu_265_p2 <= std_logic_vector(unsigned(empty_fu_243_p1) + unsigned(ap_const_lv2_1));
    add_ln21_fu_296_p2 <= std_logic_vector(signed(sext_ln21_fu_288_p1) + signed(ap_const_lv17_1));
    add_ln24_fu_388_p2 <= std_logic_vector(unsigned(sub_ln24_fu_379_p2) + unsigned(zext_ln24_fu_385_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_511_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_fu_247_p2, icmp_ln21_fu_279_p2)
    begin
                ap_condition_511 <= ((icmp_ln19_fu_247_p2 = ap_const_lv1_0) and (icmp_ln21_fu_279_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln19_fu_247_p2)
    begin
        if (((icmp_ln19_fu_247_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_136)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv16_FFFF;
        else 
            ap_sig_allocacmp_i_load <= i_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_r_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, r_fu_88, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_r_2 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_r_2 <= r_fu_88;
        end if; 
    end process;

    empty_fu_243_p1 <= ap_sig_allocacmp_r_2(2 - 1 downto 0);
    icmp_ln19_fu_247_p2 <= "1" when (ap_sig_allocacmp_r_2 = ap_const_lv3_6) else "0";
    icmp_ln20_fu_259_p2 <= "1" when (unsigned(ap_sig_allocacmp_r_2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln21_fu_279_p2 <= "1" when (j_fu_271_p3 = ap_const_lv2_0) else "0";
    icmp_ln23_1_fu_437_p2 <= "1" when (r_2_reg_838_pp0_iter1_reg = ap_const_lv3_3) else "0";
    icmp_ln23_2_fu_442_p2 <= "1" when (r_2_reg_838_pp0_iter1_reg = ap_const_lv3_2) else "0";
    icmp_ln23_3_fu_447_p2 <= "1" when (r_2_reg_838_pp0_iter1_reg = ap_const_lv3_1) else "0";
    icmp_ln23_4_fu_452_p2 <= "1" when (r_2_reg_838_pp0_iter1_reg = ap_const_lv3_0) else "0";
    icmp_ln23_fu_432_p2 <= "1" when (r_2_reg_838_pp0_iter1_reg = ap_const_lv3_4) else "0";
    input_r_address0 <= zext_ln24_1_fu_394_p1(9 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_271_p3 <= 
        empty_fu_243_p1 when (icmp_ln20_fu_259_p2(0) = '1') else 
        add_ln20_fu_265_p2;
    or_ln23_1_fu_463_p2 <= (icmp_ln23_2_fu_442_p2 or icmp_ln23_1_fu_437_p2);
    or_ln23_2_fu_477_p2 <= (or_ln23_fu_457_p2 or or_ln23_1_fu_463_p2);
    or_ln23_fu_457_p2 <= (icmp_ln23_4_fu_452_p2 or icmp_ln23_3_fu_447_p2);
    p_and_t_cast_fu_320_p3 <= (ap_const_lv9_0 & xor_ln21_fu_314_p2);
    select_ln21_fu_342_p3 <= 
        sub_ln21_fu_328_p2 when (tmp_fu_302_p3(0) = '1') else 
        tmp_s_fu_334_p3;
    select_ln23_1_fu_483_p3 <= 
        tmp1_V_5_0_fu_116 when (or_ln23_2_fu_477_p2(0) = '1') else 
        select_ln23_fu_469_p3;
    select_ln23_2_fu_491_p3 <= 
        ap_const_lv12_FF9 when (icmp_ln23_fu_432_p2(0) = '1') else 
        tmp1_V_4_0_fu_112;
    select_ln23_3_fu_499_p3 <= 
        tmp1_V_4_0_fu_112 when (or_ln23_2_fu_477_p2(0) = '1') else 
        select_ln23_2_fu_491_p3;
    select_ln23_4_fu_507_p3 <= 
        ap_const_lv12_FF9 when (icmp_ln23_2_fu_442_p2(0) = '1') else 
        tmp1_V_2_0_fu_108;
    select_ln23_5_fu_515_p3 <= 
        tmp1_V_2_0_fu_108 when (or_ln23_fu_457_p2(0) = '1') else 
        select_ln23_4_fu_507_p3;
    select_ln23_6_fu_523_p3 <= 
        ap_const_lv12_FF9 when (icmp_ln23_3_fu_447_p2(0) = '1') else 
        tmp1_V_1_0_fu_104;
    select_ln23_7_fu_531_p3 <= 
        tmp1_V_1_0_fu_104 when (icmp_ln23_4_fu_452_p2(0) = '1') else 
        select_ln23_6_fu_523_p3;
    select_ln23_8_fu_539_p3 <= 
        ap_const_lv12_FF9 when (icmp_ln23_4_fu_452_p2(0) = '1') else 
        tmp1_V_0_0_fu_100;
    select_ln23_fu_469_p3 <= 
        tmp1_V_5_0_fu_116 when (icmp_ln23_fu_432_p2(0) = '1') else 
        ap_const_lv12_FF9;
    select_ln24_2_fu_567_p3 <= 
        tmp1_V_11_21_fu_547_p1 when (icmp_ln23_fu_432_p2(0) = '1') else 
        tmp1_V_11_11_fu_128;
    select_ln24_4_fu_583_p3 <= 
        tmp1_V_11_21_fu_547_p1 when (icmp_ln23_2_fu_442_p2(0) = '1') else 
        tmp1_V_11_4_fu_124;
    select_ln24_8_fu_615_p3 <= 
        tmp1_V_11_9_fu_96 when (icmp_ln23_2_fu_442_p2(0) = '1') else 
        tmp1_V_11_21_fu_547_p1;
    select_ln24_9_fu_623_p3 <= 
        tmp1_V_11_9_fu_96 when (or_ln23_fu_457_p2(0) = '1') else 
        select_ln24_8_fu_615_p3;
    select_ln24_fu_551_p3 <= 
        tmp1_V_11_13_fu_132 when (icmp_ln23_fu_432_p2(0) = '1') else 
        tmp1_V_11_21_fu_547_p1;
    sext_ln21_fu_288_p0 <= ap_sig_allocacmp_i_load;
        sext_ln21_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln21_fu_288_p0),17));

    sub_ln21_fu_328_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_and_t_cast_fu_320_p3));
    sub_ln24_fu_379_p2 <= std_logic_vector(unsigned(tmp_29_cast_fu_371_p3) - unsigned(trunc_ln24_fu_363_p1));
    tmp1_V_0_0_out <= tmp1_V_0_0_fu_100;

    tmp1_V_0_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_0_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_0_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_10_0_out <= tmp1_V_11_11_fu_128;

    tmp1_V_10_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_10_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_10_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_0_out <= tmp1_V_11_13_fu_132;

    tmp1_V_11_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_11_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_11_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_11_out <= tmp1_V_11_2_fu_92;

    tmp1_V_11_11_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_11_11_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_11_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_15_fu_575_p3 <= 
        tmp1_V_11_11_fu_128 when (or_ln23_2_fu_477_p2(0) = '1') else 
        select_ln24_2_fu_567_p3;
    tmp1_V_11_16_fu_591_p3 <= 
        tmp1_V_11_4_fu_124 when (or_ln23_fu_457_p2(0) = '1') else 
        select_ln24_4_fu_583_p3;
    tmp1_V_11_17_fu_599_p3 <= 
        tmp1_V_11_21_fu_547_p1 when (icmp_ln23_3_fu_447_p2(0) = '1') else 
        tmp1_V_11_6_fu_120;
    tmp1_V_11_18_fu_607_p3 <= 
        tmp1_V_11_6_fu_120 when (icmp_ln23_4_fu_452_p2(0) = '1') else 
        tmp1_V_11_17_fu_599_p3;
    tmp1_V_11_19_fu_631_p3 <= 
        select_ln24_9_fu_623_p3 when (or_ln23_2_fu_477_p2(0) = '1') else 
        tmp1_V_11_9_fu_96;
    tmp1_V_11_20_fu_639_p3 <= 
        tmp1_V_11_21_fu_547_p1 when (icmp_ln23_4_fu_452_p2(0) = '1') else 
        tmp1_V_11_2_fu_92;
    tmp1_V_11_21_fu_547_p1 <= input_r_q0(12 - 1 downto 0);
    tmp1_V_11_4_out <= tmp1_V_11_4_fu_124;

    tmp1_V_11_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_11_4_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_11_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_6_out <= tmp1_V_11_6_fu_120;

    tmp1_V_11_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_11_6_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_11_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_9_out <= tmp1_V_11_9_fu_96;

    tmp1_V_11_9_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_11_9_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_11_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_11_fu_559_p3 <= 
        tmp1_V_11_13_fu_132 when (or_ln23_2_fu_477_p2(0) = '1') else 
        select_ln24_fu_551_p3;
    tmp1_V_1_0_out <= tmp1_V_1_0_fu_104;

    tmp1_V_1_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_2_0_out <= tmp1_V_2_0_fu_108;

    tmp1_V_2_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_4_0_out <= tmp1_V_4_0_fu_112;

    tmp1_V_4_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_4_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_4_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_V_5_0_out <= tmp1_V_5_0_fu_116;

    tmp1_V_5_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln19_reg_847)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_847 = ap_const_lv1_1))) then 
            tmp1_V_5_0_out_ap_vld <= ap_const_logic_1;
        else 
            tmp1_V_5_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_29_cast_fu_371_p3 <= (trunc_ln24_1_fu_367_p1 & ap_const_lv2_0);
    tmp_fu_302_p3 <= add_ln21_fu_296_p2(16 downto 16);
    tmp_s_fu_334_p3 <= (ap_const_lv9_0 & trunc_ln21_1_fu_310_p1);
    trunc_ln21_1_fu_310_p1 <= add_ln21_fu_296_p2(7 - 1 downto 0);
    trunc_ln21_fu_292_p0 <= ap_sig_allocacmp_i_load;
    trunc_ln21_fu_292_p1 <= trunc_ln21_fu_292_p0(7 - 1 downto 0);
    trunc_ln24_1_fu_367_p1 <= i_fu_136(7 - 1 downto 0);
    trunc_ln24_fu_363_p1 <= i_fu_136(9 - 1 downto 0);
    xor_ln21_fu_314_p2 <= (trunc_ln21_fu_292_p1 xor ap_const_lv7_7F);
    zext_ln24_1_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln24_fu_388_p2),64));
    zext_ln24_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_851),9));
end behav;
