// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __master_fix_convolution2_fix_secondKernel_f_V_2_H__
#define __master_fix_convolution2_fix_secondKernel_f_V_2_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct master_fix_convolution2_fix_secondKernel_f_V_2_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 21;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(master_fix_convolution2_fix_secondKernel_f_V_2_ram) {
        ram[0] = "0b000000101010000000111";
        ram[1] = "0b000001011000111010011";
        ram[2] = "0b111110100001010111011";
        ram[3] = "0b000000100111111110000";
        ram[4] = "0b111111001101110100101";
        ram[5] = "0b111101000101000110000";
        ram[6] = "0b111100101000110111100";
        ram[7] = "0b000011110000001000100";
        ram[8] = "0b111110100010010001011";
        ram[9] = "0b111111001010111110010";
        ram[10] = "0b111110011001101000000";
        ram[11] = "0b111111011011111111111";
        ram[12] = "0b111111101001011100110";
        ram[13] = "0b000000001100000010101";
        ram[14] = "0b000000101010001011010";
        ram[15] = "0b111110011110000011001";
        ram[16] = "0b111111010010000110110";
        ram[17] = "0b111111110011101000110";
        ram[18] = "0b111101101010011100010";
        ram[19] = "0b111011000001110011000";
        ram[20] = "0b111110001110011011111";
        ram[21] = "0b000000001110000010000";
        ram[22] = "0b111111100001110001001";
        ram[23] = "0b000000100111100000001";
        ram[24] = "0b111110010010110110111";
        ram[25] = "0b000011111001000111101";
        ram[26] = "0b000001011001011101111";
        ram[27] = "0b111100100100001000010";
        ram[28] = "0b111100110110101010001";
        ram[29] = "0b110101011010110100101";
        ram[30] = "0b110101110001000000011";
        ram[31] = "0b000000111100011010010";
        ram[32] = "0b111101101110110100110";
        ram[33] = "0b000001000011111111010";
        ram[34] = "0b111110000100101001001";
        ram[35] = "0b111111100011101001100";
        ram[36] = "0b111110111100101011101";
        ram[37] = "0b111110100111000001011";
        ram[38] = "0b111100110010100110100";
        ram[39] = "0b000011000111011000110";
        ram[40] = "0b000010011010011100100";
        ram[41] = "0b000000101010011111000";
        ram[42] = "0b000010011010010110101";
        ram[43] = "0b111110010111010001011";
        ram[44] = "0b000100110010110110001";
        ram[45] = "0b111100011100001010111";
        ram[46] = "0b111011011111010111001";
        ram[47] = "0b111010100010000000001";
        ram[48] = "0b111111000100110111011";
        ram[49] = "0b111110000110100101110";
        ram[50] = "0b111111010101111011000";
        ram[51] = "0b111110100110001000100";
        ram[52] = "0b111111101010100011010";
        ram[53] = "0b111011111010110001011";
        ram[54] = "0b111111001001101001010";
        ram[55] = "0b111101111100111101110";
        ram[56] = "0b000000000111011011011";
        ram[57] = "0b000000010100010110110";
        ram[58] = "0b111101100010010101111";
        ram[59] = "0b111101000101111000000";
        ram[60] = "0b111111010001101111110";
        ram[61] = "0b000001000000110100010";
        ram[62] = "0b111111101001101000001";
        ram[63] = "0b111011001010110100101";
        ram[64] = "0b000011100111100011001";
        ram[65] = "0b111111110110110100010";
        ram[66] = "0b111111101010100001101";
        ram[67] = "0b111111000011010110010";
        ram[68] = "0b000101101000011111101";
        ram[69] = "0b111110010110001000101";
        ram[70] = "0b111011110010010010010";
        ram[71] = "0b111001001101001100110";
        ram[72] = "0b000010011101100011000";
        ram[73] = "0b000110000100010001011";
        ram[74] = "0b111001111111000101001";
        ram[75] = "0b111111111100001100100";
        ram[76] = "0b000001101111001000001";
        ram[77] = "0b111110000000110001111";
        ram[78] = "0b111110000100110011001";
        ram[79] = "0b111111110111100001110";
        ram[80] = "0b111111110111101111111";
        ram[81] = "0b111111001111011010101";
        ram[82] = "0b111100101101000110010";
        ram[83] = "0b111110011100000000001";
        ram[84] = "0b111110100010110100100";
        ram[85] = "0b111110011011101000110";
        ram[86] = "0b111101111010101010110";
        ram[87] = "0b000111100101000111111";
        ram[88] = "0b111110011110010100010";
        ram[89] = "0b111011110000101000111";
        ram[90] = "0b000000101111100111010";
        ram[91] = "0b111101101100101011100";
        ram[92] = "0b111100101010111011101";
        ram[93] = "0b000010001110000000111";
        ram[94] = "0b000010101110010011010";
        ram[95] = "0b111110001010110010110";
        ram[96] = "0b111111011100110001010";
        ram[97] = "0b111101000010111011010";
        ram[98] = "0b000010100011011101100";
        ram[99] = "0b000000010011001000011";
        ram[100] = "0b111000010110101110001";
        ram[101] = "0b111100010011100101100";
        ram[102] = "0b111110000100111000100";
        ram[103] = "0b111111101010000101100";
        ram[104] = "0b000010110011000111011";
        ram[105] = "0b000011001111111111011";
        ram[106] = "0b000000101110110111110";
        ram[107] = "0b111110010010101100000";
        ram[108] = "0b110101111100101110110";
        ram[109] = "0b111110000110010000111";
        ram[110] = "0b111010111001111111010";
        ram[111] = "0b111111101000100101111";
        ram[112] = "0b000000001001010101010";
        ram[113] = "0b101110111001101111110";
        ram[114] = "0b000000110111011010001";
        ram[115] = "0b000011110001001100100";
        ram[116] = "0b111111110111111010111";
        ram[117] = "0b111101011000110000111";
        ram[118] = "0b111111110011001001011";
        ram[119] = "0b000000010011101111000";
        ram[120] = "0b111101110000010001110";
        ram[121] = "0b111110101010001001101";
        ram[122] = "0b111111001000111100000";
        ram[123] = "0b111111011001100001000";
        ram[124] = "0b000000000010000010101";
        ram[125] = "0b000000001001101001010";
        ram[126] = "0b111111111001000101101";
        ram[127] = "0b000001100001101011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(master_fix_convolution2_fix_secondKernel_f_V_2) {


static const unsigned DataWidth = 21;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


master_fix_convolution2_fix_secondKernel_f_V_2_ram* meminst;


SC_CTOR(master_fix_convolution2_fix_secondKernel_f_V_2) {
meminst = new master_fix_convolution2_fix_secondKernel_f_V_2_ram("master_fix_convolution2_fix_secondKernel_f_V_2_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~master_fix_convolution2_fix_secondKernel_f_V_2() {
    delete meminst;
}


};//endmodule
#endif
