// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __master_fix_convolution2_fix_secondKernel_f_V_3_H__
#define __master_fix_convolution2_fix_secondKernel_f_V_3_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct master_fix_convolution2_fix_secondKernel_f_V_3_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 21;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(master_fix_convolution2_fix_secondKernel_f_V_3_ram) {
        ram[0] = "0b000001110110001110001";
        ram[1] = "0b000000111000011110110";
        ram[2] = "0b000001001110010001010";
        ram[3] = "0b000000100000110011011";
        ram[4] = "0b000000000010101000001";
        ram[5] = "0b111110101011000000110";
        ram[6] = "0b111101010000000001010";
        ram[7] = "0b000000100001001100110";
        ram[8] = "0b111110110111011000111";
        ram[9] = "0b111111110011101001001";
        ram[10] = "0b111111110011011000111";
        ram[11] = "0b000000011111000110011";
        ram[12] = "0b000010101101111011011";
        ram[13] = "0b111111100111001000011";
        ram[14] = "0b111110000000100011000";
        ram[15] = "0b111110111100101011111";
        ram[16] = "0b001001110111010101111";
        ram[17] = "0b000000111000011010010";
        ram[18] = "0b111101101001110101010";
        ram[19] = "0b111100101111011000110";
        ram[20] = "0b000011100011101011001";
        ram[21] = "0b111111101110101001001";
        ram[22] = "0b111111101110000000101";
        ram[23] = "0b000001101011000100001";
        ram[24] = "0b111101111111101011111";
        ram[25] = "0b100111111001011100101";
        ram[26] = "0b111111000000101101111";
        ram[27] = "0b000001000000100001001";
        ram[28] = "0b111100001010110101110";
        ram[29] = "0b110101000111100101000";
        ram[30] = "0b110100010011000101110";
        ram[31] = "0b111110001100111100110";
        ram[32] = "0b111110010110011011001";
        ram[33] = "0b110110110100001011101";
        ram[34] = "0b111101000110001010111";
        ram[35] = "0b000000111000101111001";
        ram[36] = "0b111001111001100001000";
        ram[37] = "0b111101010100000010101";
        ram[38] = "0b111100001001011101011";
        ram[39] = "0b000011100011001110011";
        ram[40] = "0b000000100000001111001";
        ram[41] = "0b111110110111110011100";
        ram[42] = "0b111110011000111100110";
        ram[43] = "0b000000100000000111010";
        ram[44] = "0b000010000100010000001";
        ram[45] = "0b000100000100000001101";
        ram[46] = "0b000111101000001110010";
        ram[47] = "0b111100010111111110111";
        ram[48] = "0b111110101001101011010";
        ram[49] = "0b000000101000000001001";
        ram[50] = "0b111101011011100111010";
        ram[51] = "0b111101010111110110001";
        ram[52] = "0b111101010100100111011";
        ram[53] = "0b111101111001101110000";
        ram[54] = "0b111110100110100110000";
        ram[55] = "0b000000000001000000011";
        ram[56] = "0b000000011001001110011";
        ram[57] = "0b000001000100001111110";
        ram[58] = "0b111111011101001100011";
        ram[59] = "0b111101000011111000001";
        ram[60] = "0b000000010000011001110";
        ram[61] = "0b111111010111000101111";
        ram[62] = "0b000000000111101110000";
        ram[63] = "0b111001111000101011010";
        ram[64] = "0b000001000000001011101";
        ram[65] = "0b111100110010100110111";
        ram[66] = "0b000011011000100100011";
        ram[67] = "0b111101110001000000111";
        ram[68] = "0b000110011101100100001";
        ram[69] = "0b111010011000011011101";
        ram[70] = "0b111010100011111100011";
        ram[71] = "0b110101001101011100010";
        ram[72] = "0b000001001000000011110";
        ram[73] = "0b000011011001010010010";
        ram[74] = "0b111010000010100111000";
        ram[75] = "0b111111101100000100111";
        ram[76] = "0b000001101110100100000";
        ram[77] = "0b111111000010111111111";
        ram[78] = "0b000000000110101011010";
        ram[79] = "0b111111100000110110100";
        ram[80] = "0b111111000101110001011";
        ram[81] = "0b111001100101110100110";
        ram[82] = "0b000000001100000000100";
        ram[83] = "0b000001111001000000100";
        ram[84] = "0b000001010101001110101";
        ram[85] = "0b111101100000010011101";
        ram[86] = "0b111101101011001111101";
        ram[87] = "0b111011101100001101001";
        ram[88] = "0b111110011110000011110";
        ram[89] = "0b111101010101001000000";
        ram[90] = "0b111110010011000111111";
        ram[91] = "0b111100001101101001000";
        ram[92] = "0b111101110000000101101";
        ram[93] = "0b000010001100110000111";
        ram[94] = "0b000011011110110100011";
        ram[95] = "0b111101110010100100000";
        ram[96] = "0b111111101110101100100";
        ram[97] = "0b111011100110011101011";
        ram[98] = "0b111111000001100110010";
        ram[99] = "0b111110100100011101100";
        ram[100] = "0b111101100101001100101";
        ram[101] = "0b000010101110000101001";
        ram[102] = "0b000011110001101000110";
        ram[103] = "0b111111101000001100100";
        ram[104] = "0b111110010101100111111";
        ram[105] = "0b110100001100011000000";
        ram[106] = "0b000001000010100110111";
        ram[107] = "0b000001011110001001110";
        ram[108] = "0b110000000000110010011";
        ram[109] = "0b110001011000110101111";
        ram[110] = "0b110001011000010100011";
        ram[111] = "0b000000010011111110010";
        ram[112] = "0b111110011110011001010";
        ram[113] = "0b110000111111110001101";
        ram[114] = "0b000000000110101011111";
        ram[115] = "0b000001110110010011011";
        ram[116] = "0b111111110101110010001";
        ram[117] = "0b111011110111111110100";
        ram[118] = "0b000000011010000000001";
        ram[119] = "0b111101110111111111100";
        ram[120] = "0b111111000000111001000";
        ram[121] = "0b111100111010000010001";
        ram[122] = "0b000001110000111011011";
        ram[123] = "0b000010010011110101010";
        ram[124] = "0b111110001010100101001";
        ram[125] = "0b111111001010011101010";
        ram[126] = "0b000001011000100001100";
        ram[127] = "0b000001010010110111110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(master_fix_convolution2_fix_secondKernel_f_V_3) {


static const unsigned DataWidth = 21;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


master_fix_convolution2_fix_secondKernel_f_V_3_ram* meminst;


SC_CTOR(master_fix_convolution2_fix_secondKernel_f_V_3) {
meminst = new master_fix_convolution2_fix_secondKernel_f_V_3_ram("master_fix_convolution2_fix_secondKernel_f_V_3_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~master_fix_convolution2_fix_secondKernel_f_V_3() {
    delete meminst;
}


};//endmodule
#endif
