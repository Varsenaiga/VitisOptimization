-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity master_fix_convolution2_fix is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_0_0_0_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    m_0_0_0_0_ce0 : OUT STD_LOGIC;
    m_0_0_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_0_0_0_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    m_0_0_0_0_ce1 : OUT STD_LOGIC;
    m_0_0_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_0_0_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_0_0_0_0_ce0 : OUT STD_LOGIC;
    out_0_0_0_0_we0 : OUT STD_LOGIC;
    out_0_0_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of master_fix_convolution2_fix is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal secondBias_f_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal secondBias_f_V_ce0 : STD_LOGIC;
    signal secondBias_f_V_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal secondKernel_f_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal secondKernel_f_V_1_ce0 : STD_LOGIC;
    signal secondKernel_f_V_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal secondKernel_f_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal secondKernel_f_V_0_ce0 : STD_LOGIC;
    signal secondKernel_f_V_0_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal secondKernel_f_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal secondKernel_f_V_2_ce0 : STD_LOGIC;
    signal secondKernel_f_V_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal secondKernel_f_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal secondKernel_f_V_3_ce0 : STD_LOGIC;
    signal secondKernel_f_V_3_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1171_fu_373_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1171_reg_1059 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_cast_fu_381_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_cast_reg_1064 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln213_fu_395_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln213_reg_1075 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln213_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln215_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_s_fu_405_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1090 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal out_0_0_0_0_addr_reg_1095 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvars_iv_next20_fu_437_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv_next20_reg_1103 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln221_fu_481_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln221_reg_1123 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_493_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_reg_1128 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln221_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp50_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp50_reg_1133 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_507_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_reg_1137 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp27_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp27_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp87_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp87_reg_1147 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_531_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_reg_1151 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln415_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln226_fu_659_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln226_reg_1174 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln415_2_fu_745_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln235_fu_785_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln235_reg_1197 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln231_fu_836_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln231_reg_1225 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_1230 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln231_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_4_fu_930_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln415_3_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_reg_231 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal h_reg_243 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond238_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_1_reg_265 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_5_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal V1_i_i_i_i_i67279_promoted_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_3_reg_300 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_10_reg_311 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_2_reg_323 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_8_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_empty_72_phi_fu_349_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_72_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln213_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_9_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_12_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_3_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_18_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_6_fu_774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1171_15_fu_804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_4_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1169_5_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_fu_92 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1171_fu_377_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_413_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln220_fu_421_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1171_8_fu_451_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1171_fu_455_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_7_fu_447_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1169_1_fu_465_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_68_fu_487_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1169_fu_525_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal lhs_4_fu_553_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_20_fu_547_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_fu_561_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal trunc_ln727_fu_593_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_s_fu_577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_fu_585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln412_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_567_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln415_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1171_11_fu_629_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1171_3_fu_633_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_10_fu_625_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1169_2_fu_643_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_6_fu_679_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_21_fu_673_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_7_fu_687_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal trunc_ln727_2_fu_719_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_13_fu_703_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_2_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_19_fu_711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln412_2_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_fu_693_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln415_2_fu_741_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1171_17_fu_755_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1171_5_fu_759_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_16_fu_751_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1169_5_fu_769_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1171_14_fu_795_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1171_4_fu_799_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1171_13_fu_791_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1169_3_fu_810_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1169_4_fu_820_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_11_fu_864_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_24_fu_858_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_10_fu_872_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal trunc_ln727_3_fu_904_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_17_fu_888_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_4_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_4_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_fu_896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln412_4_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_878_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln415_4_fu_926_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_22_fu_944_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_23_fu_962_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_9_fu_978_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_8_fu_972_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_9_fu_986_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal trunc_ln1168_fu_950_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1168_1_fu_968_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln727_fu_1018_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_15_fu_1002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_3_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_3_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln412_3_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_992_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln415_3_fu_1042_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_condition_280 : BOOLEAN;
    signal ap_condition_307 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component master_fix_mul_20s_32s_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component master_fix_mul_21s_32s_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component master_fix_convolution2_fix_secondBias_f_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component master_fix_convolution2_fix_secondKernel_f_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component master_fix_convolution2_fix_secondKernel_f_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component master_fix_convolution2_fix_secondKernel_f_V_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component master_fix_convolution2_fix_secondKernel_f_V_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    secondBias_f_V_U : component master_fix_convolution2_fix_secondBias_f_V
    generic map (
        DataWidth => 21,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => secondBias_f_V_address0,
        ce0 => secondBias_f_V_ce0,
        q0 => secondBias_f_V_q0);

    secondKernel_f_V_1_U : component master_fix_convolution2_fix_secondKernel_f_V_1
    generic map (
        DataWidth => 20,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => secondKernel_f_V_1_address0,
        ce0 => secondKernel_f_V_1_ce0,
        q0 => secondKernel_f_V_1_q0);

    secondKernel_f_V_0_U : component master_fix_convolution2_fix_secondKernel_f_V_0
    generic map (
        DataWidth => 20,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => secondKernel_f_V_0_address0,
        ce0 => secondKernel_f_V_0_ce0,
        q0 => secondKernel_f_V_0_q0);

    secondKernel_f_V_2_U : component master_fix_convolution2_fix_secondKernel_f_V_2
    generic map (
        DataWidth => 21,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => secondKernel_f_V_2_address0,
        ce0 => secondKernel_f_V_2_ce0,
        q0 => secondKernel_f_V_2_q0);

    secondKernel_f_V_3_U : component master_fix_convolution2_fix_secondKernel_f_V_3
    generic map (
        DataWidth => 21,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => secondKernel_f_V_3_address0,
        ce0 => secondKernel_f_V_3_ce0,
        q0 => secondKernel_f_V_3_q0);

    mul_20s_32s_51_1_1_U36 : component master_fix_mul_20s_32s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 32,
        dout_WIDTH => 51)
    port map (
        din0 => secondKernel_f_V_1_q0,
        din1 => m_0_0_0_0_q0,
        dout => r_V_20_fu_547_p2);

    mul_20s_32s_51_1_1_U37 : component master_fix_mul_20s_32s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 32,
        dout_WIDTH => 51)
    port map (
        din0 => secondKernel_f_V_0_q0,
        din1 => m_0_0_0_0_q0,
        dout => r_V_21_fu_673_p2);

    mul_21s_32s_51_1_1_U38 : component master_fix_mul_21s_32s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 32,
        dout_WIDTH => 51)
    port map (
        din0 => secondKernel_f_V_2_q0,
        din1 => m_0_0_0_0_q0,
        dout => r_V_24_fu_858_p2);

    mul_21s_32s_51_1_1_U39 : component master_fix_mul_21s_32s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 32,
        dout_WIDTH => 51)
    port map (
        din0 => secondKernel_f_V_2_q0,
        din1 => m_0_0_0_0_q1,
        dout => r_V_22_fu_944_p2);

    mul_21s_32s_51_1_1_U40 : component master_fix_mul_21s_32s_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 32,
        dout_WIDTH => 51)
    port map (
        din0 => secondKernel_f_V_3_q0,
        din1 => m_0_0_0_0_q0,
        dout => r_V_23_fu_962_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    V1_i_i_i_i_i67279_promoted_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (cmp27_fu_514_p2 = ap_const_lv1_1) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then 
                V1_i_i_i_i_i67279_promoted_reg_288 <= lhs_reg_254;
            elsif (((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (cmp27_reg_1143 = ap_const_lv1_0))) then 
                V1_i_i_i_i_i67279_promoted_reg_288 <= lhs_5_reg_276;
            end if; 
        end if;
    end process;

    d_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                d_fu_92 <= ap_const_lv5_0;
            elsif (((exitcond238_fu_431_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_fu_92 <= add_ln213_reg_1075;
            end if; 
        end if;
    end process;

    empty_72_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (cmp87_reg_1147 = ap_const_lv1_0) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((cmp87_reg_1147 = ap_const_lv1_0) and (cmp27_reg_1143 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))))) then 
                empty_72_reg_346 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
            elsif (((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))) then 
                empty_72_reg_346 <= lhs_10_reg_311;
            elsif (((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1))) then 
                empty_72_reg_346 <= lhs_8_reg_334;
            end if; 
        end if;
    end process;

    h_1_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (cmp27_fu_514_p2 = ap_const_lv1_0) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then 
                h_1_reg_265 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                h_1_reg_265 <= add_ln226_reg_1174;
            end if; 
        end if;
    end process;

    h_2_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((cmp27_reg_1143 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1)) or ((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1))))) then 
                h_2_reg_323 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                h_2_reg_323 <= add_ln231_reg_1225;
            end if; 
        end if;
    end process;

    h_3_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((cmp87_reg_1147 = ap_const_lv1_1) and (cmp27_reg_1143 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))))) then 
                h_3_reg_300 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                h_3_reg_300 <= add_ln235_reg_1197;
            end if; 
        end if;
    end process;

    h_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                h_reg_243 <= add_ln221_reg_1123;
            elsif (((exitcond238_fu_431_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                h_reg_243 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_231 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_reg_231 <= indvars_iv_next20_reg_1103;
            end if; 
        end if;
    end process;

    lhs_10_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((cmp87_reg_1147 = ap_const_lv1_1) and (cmp27_reg_1143 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))))) then 
                lhs_10_reg_311 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                lhs_10_reg_311 <= add_ln415_4_fu_930_p2;
            end if; 
        end if;
    end process;

    lhs_5_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (cmp27_fu_514_p2 = ap_const_lv1_0) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then 
                lhs_5_reg_276 <= lhs_reg_254;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                lhs_5_reg_276 <= add_ln415_2_fu_745_p2;
            end if; 
        end if;
    end process;

    lhs_8_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((cmp27_reg_1143 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1)) or ((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1))))) then 
                lhs_8_reg_334 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                lhs_8_reg_334 <= add_ln415_3_fu_1046_p2;
            end if; 
        end if;
    end process;

    lhs_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                lhs_reg_254 <= add_ln415_fu_619_p2;
            elsif (((exitcond238_fu_431_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                lhs_reg_254 <= sext_ln215_reg_1085;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln213_reg_1075 <= add_ln213_fu_395_p2;
                    tmp_cast_reg_1064(6 downto 3) <= tmp_cast_fu_381_p3(6 downto 3);
                    zext_ln1171_reg_1059(4 downto 0) <= zext_ln1171_fu_373_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln221_reg_1123 <= add_ln221_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (cmp27_reg_1143 = ap_const_lv1_0))) then
                add_ln226_reg_1174 <= add_ln226_fu_659_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1))) then
                add_ln231_reg_1225 <= add_ln231_fu_836_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))) then
                add_ln235_reg_1197 <= add_ln235_fu_785_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then
                cmp27_reg_1143 <= cmp27_fu_514_p2;
                cmp50_reg_1133 <= cmp50_fu_501_p2;
                cmp87_reg_1147 <= cmp87_fu_520_p2;
                    tmp_2_reg_1128(8 downto 3) <= tmp_2_fu_493_p3(8 downto 3);
                    tmp_3_reg_1137(8 downto 3) <= tmp_3_fu_507_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                indvars_iv_next20_reg_1103 <= indvars_iv_next20_fu_437_p2;
                out_0_0_0_0_addr_reg_1095 <= zext_ln220_fu_426_p1(10 - 1 downto 0);
                    tmp_s_reg_1090(8 downto 3) <= tmp_s_fu_405_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sext_ln215_reg_1085 <= sext_ln215_fu_401_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (cmp27_fu_514_p2 = ap_const_lv1_0) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then
                    tmp_4_reg_1151(8 downto 3) <= tmp_4_fu_531_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1))) or ((cmp87_reg_1147 = ap_const_lv1_0) and (cmp50_reg_1133 = ap_const_lv1_0))))) then
                tmp_reg_1230 <= ap_phi_mux_empty_72_phi_fu_349_p6(31 downto 31);
            end if;
        end if;
    end process;
    zext_ln1171_reg_1059(9 downto 5) <= "00000";
    tmp_cast_reg_1064(2 downto 0) <= "000";
    tmp_s_reg_1090(2 downto 0) <= "000";
    tmp_2_reg_1128(2 downto 0) <= "000";
    tmp_3_reg_1137(2 downto 0) <= "000";
    tmp_4_reg_1151(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln213_fu_389_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln221_fu_475_p2, cmp50_reg_1133, cmp27_reg_1143, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2, exitcond238_fu_431_p2, icmp_ln226_fu_653_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln213_fu_389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((exitcond238_fu_431_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln226_fu_653_p2 = ap_const_lv1_1) or (cmp27_reg_1143 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1))) or ((cmp87_reg_1147 = ap_const_lv1_0) and (cmp50_reg_1133 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((icmp_ln231_fu_830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln1169_1_fu_465_p2 <= std_logic_vector(unsigned(tmp_s_reg_1090) + unsigned(zext_ln1171_7_fu_447_p1));
    add_ln1169_2_fu_643_p2 <= std_logic_vector(unsigned(tmp_4_reg_1151) + unsigned(zext_ln1171_10_fu_625_p1));
    add_ln1169_3_fu_810_p2 <= std_logic_vector(unsigned(tmp_3_reg_1137) + unsigned(zext_ln1171_13_fu_791_p1));
    add_ln1169_4_fu_820_p2 <= std_logic_vector(unsigned(tmp_2_reg_1128) + unsigned(zext_ln1171_13_fu_791_p1));
    add_ln1169_5_fu_769_p2 <= std_logic_vector(unsigned(tmp_3_reg_1137) + unsigned(zext_ln1171_16_fu_751_p1));
    add_ln1169_fu_525_p2 <= std_logic_vector(unsigned(i_reg_231) + unsigned(ap_const_lv6_3F));
    add_ln1171_3_fu_633_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1064) + unsigned(zext_ln1171_11_fu_629_p1));
    add_ln1171_4_fu_799_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1064) + unsigned(zext_ln1171_14_fu_795_p1));
    add_ln1171_5_fu_759_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1064) + unsigned(zext_ln1171_17_fu_755_p1));
    add_ln1171_fu_455_p2 <= std_logic_vector(unsigned(tmp_cast_reg_1064) + unsigned(zext_ln1171_8_fu_451_p1));
    add_ln213_fu_395_p2 <= std_logic_vector(unsigned(d_fu_92) + unsigned(ap_const_lv5_1));
    add_ln220_fu_421_p2 <= std_logic_vector(unsigned(tmp_1_fu_413_p3) + unsigned(zext_ln1171_reg_1059));
    add_ln221_fu_481_p2 <= std_logic_vector(unsigned(h_reg_243) + unsigned(ap_const_lv4_1));
    add_ln226_fu_659_p2 <= std_logic_vector(unsigned(h_1_reg_265) + unsigned(ap_const_lv4_1));
    add_ln231_fu_836_p2 <= std_logic_vector(unsigned(h_2_reg_323) + unsigned(ap_const_lv4_1));
    add_ln235_fu_785_p2 <= std_logic_vector(unsigned(h_3_reg_300) + unsigned(ap_const_lv4_1));
    add_ln415_2_fu_745_p2 <= std_logic_vector(unsigned(p_Val2_8_fu_693_p4) + unsigned(zext_ln415_2_fu_741_p1));
    add_ln415_3_fu_1046_p2 <= std_logic_vector(unsigned(p_Val2_10_fu_992_p4) + unsigned(zext_ln415_3_fu_1042_p1));
    add_ln415_4_fu_930_p2 <= std_logic_vector(unsigned(p_Val2_12_fu_878_p4) + unsigned(zext_ln415_4_fu_926_p1));
    add_ln415_fu_619_p2 <= std_logic_vector(unsigned(p_Val2_6_fu_567_p4) + unsigned(zext_ln415_fu_615_p1));
    and_ln412_2_fu_735_p2 <= (p_Result_19_fu_711_p3 and or_ln412_2_fu_729_p2);
    and_ln412_3_fu_1036_p2 <= (p_Result_20_fu_1010_p3 and or_ln412_3_fu_1030_p2);
    and_ln412_4_fu_920_p2 <= (p_Result_21_fu_896_p3 and or_ln412_4_fu_914_p2);
    and_ln412_fu_609_p2 <= (p_Result_18_fu_585_p3 and or_ln412_fu_603_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_280_assign_proc : process(cmp50_reg_1133, cmp87_reg_1147, icmp_ln235_fu_779_p2)
    begin
                ap_condition_280 <= ((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0));
    end process;


    ap_condition_307_assign_proc : process(cmp50_reg_1133, cmp87_reg_1147, icmp_ln235_fu_779_p2)
    begin
                ap_condition_307 <= ((icmp_ln235_fu_779_p2 = ap_const_lv1_0) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln213_fu_389_p2)
    begin
        if ((((icmp_ln213_fu_389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4_assign_proc : process(cmp27_reg_1143, ap_CS_fsm_state7, lhs_5_reg_276, V1_i_i_i_i_i67279_promoted_reg_288, icmp_ln226_fu_653_p2)
    begin
        if (((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (cmp27_reg_1143 = ap_const_lv1_0))) then 
            ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4 <= lhs_5_reg_276;
        else 
            ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4 <= V1_i_i_i_i_i67279_promoted_reg_288;
        end if; 
    end process;


    ap_phi_mux_empty_72_phi_fu_349_p6_assign_proc : process(cmp50_reg_1133, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, lhs_10_reg_311, lhs_8_reg_334, empty_72_reg_346, ap_condition_280)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
            if ((ap_const_boolean_1 = ap_condition_280)) then 
                ap_phi_mux_empty_72_phi_fu_349_p6 <= lhs_10_reg_311;
            elsif (((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_1))) then 
                ap_phi_mux_empty_72_phi_fu_349_p6 <= lhs_8_reg_334;
            else 
                ap_phi_mux_empty_72_phi_fu_349_p6 <= empty_72_reg_346;
            end if;
        else 
            ap_phi_mux_empty_72_phi_fu_349_p6 <= empty_72_reg_346;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln213_fu_389_p2)
    begin
        if (((icmp_ln213_fu_389_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp27_fu_514_p2 <= "1" when (i_reg_231 = ap_const_lv6_0) else "0";
    cmp50_fu_501_p2 <= "1" when (unsigned(empty_68_fu_487_p2) < unsigned(ap_const_lv6_2A)) else "0";
    cmp87_fu_520_p2 <= "1" when (unsigned(indvars_iv_next20_reg_1103) < unsigned(ap_const_lv6_2A)) else "0";
    empty_68_fu_487_p2 <= std_logic_vector(unsigned(i_reg_231) + unsigned(ap_const_lv6_2));
    exitcond238_fu_431_p2 <= "1" when (i_reg_231 = ap_const_lv6_2A) else "0";
    icmp_ln213_fu_389_p2 <= "1" when (d_fu_92 = ap_const_lv5_10) else "0";
    icmp_ln221_fu_475_p2 <= "1" when (h_reg_243 = ap_const_lv4_8) else "0";
    icmp_ln226_fu_653_p2 <= "1" when (h_1_reg_265 = ap_const_lv4_8) else "0";
    icmp_ln231_fu_830_p2 <= "1" when (h_2_reg_323 = ap_const_lv4_8) else "0";
    icmp_ln235_fu_779_p2 <= "1" when (h_3_reg_300 = ap_const_lv4_8) else "0";
    indvars_iv_next20_fu_437_p2 <= std_logic_vector(unsigned(i_reg_231) + unsigned(ap_const_lv6_1));
    lhs_11_fu_864_p3 <= (lhs_10_reg_311 & ap_const_lv19_0);
    lhs_4_fu_553_p3 <= (lhs_reg_254 & ap_const_lv19_0);
    lhs_6_fu_679_p3 <= (lhs_5_reg_276 & ap_const_lv19_0);
    lhs_9_fu_978_p3 <= (lhs_8_reg_334 & ap_const_lv19_0);

    m_0_0_0_0_address0_assign_proc : process(ap_CS_fsm_state5, cmp50_reg_1133, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2, zext_ln1169_fu_470_p1, zext_ln1169_3_fu_648_p1, zext_ln1169_6_fu_774_p1, zext_ln1169_5_fu_825_p1)
    begin
        if (((icmp_ln231_fu_830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1))) then 
            m_0_0_0_0_address0 <= zext_ln1169_5_fu_825_p1(9 - 1 downto 0);
        elsif (((icmp_ln235_fu_779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))) then 
            m_0_0_0_0_address0 <= zext_ln1169_6_fu_774_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            m_0_0_0_0_address0 <= zext_ln1169_3_fu_648_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            m_0_0_0_0_address0 <= zext_ln1169_fu_470_p1(9 - 1 downto 0);
        else 
            m_0_0_0_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    m_0_0_0_0_address1 <= zext_ln1169_4_fu_815_p1(9 - 1 downto 0);

    m_0_0_0_0_ce0_assign_proc : process(ap_CS_fsm_state5, cmp50_reg_1133, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln231_fu_830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1)) or ((icmp_ln235_fu_779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)))) then 
            m_0_0_0_0_ce0 <= ap_const_logic_1;
        else 
            m_0_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m_0_0_0_0_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            m_0_0_0_0_ce1 <= ap_const_logic_1;
        else 
            m_0_0_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln412_2_fu_729_p2 <= (r_2_fu_723_p2 or p_Result_13_fu_703_p3);
    or_ln412_3_fu_1030_p2 <= (r_3_fu_1024_p2 or p_Result_15_fu_1002_p3);
    or_ln412_4_fu_914_p2 <= (r_4_fu_908_p2 or p_Result_17_fu_888_p3);
    or_ln412_fu_603_p2 <= (r_fu_597_p2 or p_Result_s_fu_577_p3);
    out_0_0_0_0_address0 <= out_0_0_0_0_addr_reg_1095;

    out_0_0_0_0_ce0_assign_proc : process(ap_CS_fsm_state5, cmp50_reg_1133, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1)))) then 
            out_0_0_0_0_ce0 <= ap_const_logic_1;
        else 
            out_0_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_0_0_0_0_d0_assign_proc : process(ap_CS_fsm_state5, cmp50_reg_1133, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2, ap_CS_fsm_state12, lhs_reg_254, lhs_5_reg_276, lhs_10_reg_311, lhs_8_reg_334)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_0_0_0_0_d0 <= ap_const_lv32_0;
        elsif (((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1))) then 
            out_0_0_0_0_d0 <= lhs_8_reg_334;
        elsif (((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0))) then 
            out_0_0_0_0_d0 <= lhs_10_reg_311;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_0_0_0_0_d0 <= lhs_5_reg_276;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_0_0_0_0_d0 <= lhs_reg_254;
        else 
            out_0_0_0_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_0_0_0_0_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln221_fu_475_p2, cmp50_reg_1133, cmp27_reg_1143, cmp87_reg_1147, ap_CS_fsm_state7, ap_CS_fsm_state9, tmp_reg_1230, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2, ap_CS_fsm_state12, icmp_ln226_fu_653_p2)
    begin
        if ((((tmp_reg_1230 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln226_fu_653_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (cmp27_reg_1143 = ap_const_lv1_0)) or ((icmp_ln235_fu_779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)) or ((icmp_ln231_fu_830_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln221_fu_475_p2 = ap_const_lv1_1)))) then 
            out_0_0_0_0_we0 <= ap_const_logic_1;
        else 
            out_0_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_13_fu_703_p3 <= ret_V_7_fu_687_p2(19 downto 19);
    p_Result_15_fu_1002_p3 <= ret_V_9_fu_986_p2(19 downto 19);
    p_Result_17_fu_888_p3 <= ret_V_10_fu_872_p2(19 downto 19);
    p_Result_18_fu_585_p3 <= ret_V_fu_561_p2(18 downto 18);
    p_Result_19_fu_711_p3 <= ret_V_7_fu_687_p2(18 downto 18);
    p_Result_20_fu_1010_p3 <= ret_V_8_fu_972_p2(18 downto 18);
    p_Result_21_fu_896_p3 <= ret_V_10_fu_872_p2(18 downto 18);
    p_Result_s_fu_577_p3 <= ret_V_fu_561_p2(19 downto 19);
    p_Val2_10_fu_992_p4 <= ret_V_9_fu_986_p2(50 downto 19);
    p_Val2_12_fu_878_p4 <= ret_V_10_fu_872_p2(50 downto 19);
    p_Val2_6_fu_567_p4 <= ret_V_fu_561_p2(50 downto 19);
    p_Val2_8_fu_693_p4 <= ret_V_7_fu_687_p2(50 downto 19);
    r_2_fu_723_p2 <= "0" when (trunc_ln727_2_fu_719_p1 = ap_const_lv18_0) else "1";
    r_3_fu_1024_p2 <= "0" when (trunc_ln1168_1_fu_968_p1 = sub_ln727_fu_1018_p2) else "1";
    r_4_fu_908_p2 <= "0" when (trunc_ln727_3_fu_904_p1 = ap_const_lv18_0) else "1";
    r_fu_597_p2 <= "0" when (trunc_ln727_fu_593_p1 = ap_const_lv18_0) else "1";
    ret_V_10_fu_872_p2 <= std_logic_vector(unsigned(lhs_11_fu_864_p3) + unsigned(r_V_24_fu_858_p2));
    ret_V_7_fu_687_p2 <= std_logic_vector(unsigned(lhs_6_fu_679_p3) + unsigned(r_V_21_fu_673_p2));
    ret_V_8_fu_972_p2 <= std_logic_vector(unsigned(r_V_23_fu_962_p2) + unsigned(r_V_22_fu_944_p2));
    ret_V_9_fu_986_p2 <= std_logic_vector(unsigned(lhs_9_fu_978_p3) + unsigned(ret_V_8_fu_972_p2));
    ret_V_fu_561_p2 <= std_logic_vector(unsigned(lhs_4_fu_553_p3) + unsigned(r_V_20_fu_547_p2));
    secondBias_f_V_address0 <= zext_ln213_fu_368_p1(4 - 1 downto 0);

    secondBias_f_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            secondBias_f_V_ce0 <= ap_const_logic_1;
        else 
            secondBias_f_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    secondKernel_f_V_0_address0 <= zext_ln1171_12_fu_638_p1(7 - 1 downto 0);

    secondKernel_f_V_0_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            secondKernel_f_V_0_ce0 <= ap_const_logic_1;
        else 
            secondKernel_f_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    secondKernel_f_V_1_address0 <= zext_ln1171_9_fu_460_p1(7 - 1 downto 0);

    secondKernel_f_V_1_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            secondKernel_f_V_1_ce0 <= ap_const_logic_1;
        else 
            secondKernel_f_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    secondKernel_f_V_2_address0_assign_proc : process(cmp50_reg_1133, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, zext_ln1171_18_fu_764_p1, zext_ln1171_15_fu_804_p1, ap_condition_307)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
            if (((icmp_ln231_fu_830_p2 = ap_const_lv1_0) and (cmp50_reg_1133 = ap_const_lv1_1))) then 
                secondKernel_f_V_2_address0 <= zext_ln1171_15_fu_804_p1(7 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_307)) then 
                secondKernel_f_V_2_address0 <= zext_ln1171_18_fu_764_p1(7 - 1 downto 0);
            else 
                secondKernel_f_V_2_address0 <= "XXXXXXX";
            end if;
        else 
            secondKernel_f_V_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    secondKernel_f_V_2_ce0_assign_proc : process(cmp50_reg_1133, cmp87_reg_1147, ap_CS_fsm_state9, icmp_ln231_fu_830_p2, icmp_ln235_fu_779_p2)
    begin
        if ((((icmp_ln231_fu_830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp50_reg_1133 = ap_const_lv1_1)) or ((icmp_ln235_fu_779_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (cmp87_reg_1147 = ap_const_lv1_1) and (cmp50_reg_1133 = ap_const_lv1_0)))) then 
            secondKernel_f_V_2_ce0 <= ap_const_logic_1;
        else 
            secondKernel_f_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    secondKernel_f_V_3_address0 <= zext_ln1171_15_fu_804_p1(7 - 1 downto 0);

    secondKernel_f_V_3_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            secondKernel_f_V_3_ce0 <= ap_const_logic_1;
        else 
            secondKernel_f_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln215_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(secondBias_f_V_q0),32));

    sub_ln727_fu_1018_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(trunc_ln1168_fu_950_p1));
    tmp_1_fu_413_p3 <= (i_reg_231 & ap_const_lv4_0);
    tmp_2_fu_493_p3 <= (empty_68_fu_487_p2 & ap_const_lv3_0);
    tmp_3_fu_507_p3 <= (indvars_iv_next20_reg_1103 & ap_const_lv3_0);
    tmp_4_fu_531_p3 <= (add_ln1169_fu_525_p2 & ap_const_lv3_0);
    tmp_cast_fu_381_p3 <= (trunc_ln1171_fu_377_p1 & ap_const_lv3_0);
    tmp_s_fu_405_p3 <= (i_reg_231 & ap_const_lv3_0);
    trunc_ln1168_1_fu_968_p1 <= r_V_23_fu_962_p2(18 - 1 downto 0);
    trunc_ln1168_fu_950_p1 <= r_V_22_fu_944_p2(18 - 1 downto 0);
    trunc_ln1171_fu_377_p1 <= d_fu_92(4 - 1 downto 0);
    trunc_ln727_2_fu_719_p1 <= r_V_21_fu_673_p2(18 - 1 downto 0);
    trunc_ln727_3_fu_904_p1 <= r_V_24_fu_858_p2(18 - 1 downto 0);
    trunc_ln727_fu_593_p1 <= r_V_20_fu_547_p2(18 - 1 downto 0);
    zext_ln1169_3_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_2_fu_643_p2),64));
    zext_ln1169_4_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_3_fu_810_p2),64));
    zext_ln1169_5_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_4_fu_820_p2),64));
    zext_ln1169_6_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_5_fu_769_p2),64));
    zext_ln1169_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1169_1_fu_465_p2),64));
    zext_ln1171_10_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_1_reg_265),9));
    zext_ln1171_11_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_1_reg_265),7));
    zext_ln1171_12_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1171_3_fu_633_p2),64));
    zext_ln1171_13_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_2_reg_323),9));
    zext_ln1171_14_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_2_reg_323),7));
    zext_ln1171_15_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1171_4_fu_799_p2),64));
    zext_ln1171_16_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_3_reg_300),9));
    zext_ln1171_17_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_3_reg_300),7));
    zext_ln1171_18_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1171_5_fu_759_p2),64));
    zext_ln1171_7_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_243),9));
    zext_ln1171_8_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_243),7));
    zext_ln1171_9_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1171_fu_455_p2),64));
    zext_ln1171_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_fu_92),10));
    zext_ln213_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_fu_92),64));
    zext_ln220_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln220_fu_421_p2),64));
    zext_ln415_2_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln412_2_fu_735_p2),32));
    zext_ln415_3_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln412_3_fu_1036_p2),32));
    zext_ln415_4_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln412_4_fu_920_p2),32));
    zext_ln415_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln412_fu_609_p2),32));
end behav;
