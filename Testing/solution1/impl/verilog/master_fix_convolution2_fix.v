// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution2_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_0_0_0_0_address0,
        m_0_0_0_0_ce0,
        m_0_0_0_0_q0,
        m_0_0_0_0_address1,
        m_0_0_0_0_ce1,
        m_0_0_0_0_q1,
        out_0_0_0_0_address0,
        out_0_0_0_0_ce0,
        out_0_0_0_0_we0,
        out_0_0_0_0_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] m_0_0_0_0_address0;
output   m_0_0_0_0_ce0;
input  [31:0] m_0_0_0_0_q0;
output  [8:0] m_0_0_0_0_address1;
output   m_0_0_0_0_ce1;
input  [31:0] m_0_0_0_0_q1;
output  [9:0] out_0_0_0_0_address0;
output   out_0_0_0_0_ce0;
output   out_0_0_0_0_we0;
output  [31:0] out_0_0_0_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] m_0_0_0_0_address0;
reg m_0_0_0_0_ce0;
reg m_0_0_0_0_ce1;
reg out_0_0_0_0_ce0;
reg out_0_0_0_0_we0;
reg[31:0] out_0_0_0_0_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] secondBias_f_V_address0;
reg    secondBias_f_V_ce0;
wire   [20:0] secondBias_f_V_q0;
wire   [6:0] secondKernel_f_V_1_address0;
reg    secondKernel_f_V_1_ce0;
wire  signed [19:0] secondKernel_f_V_1_q0;
wire   [6:0] secondKernel_f_V_0_address0;
reg    secondKernel_f_V_0_ce0;
wire  signed [19:0] secondKernel_f_V_0_q0;
reg   [6:0] secondKernel_f_V_2_address0;
reg    secondKernel_f_V_2_ce0;
wire  signed [20:0] secondKernel_f_V_2_q0;
wire   [6:0] secondKernel_f_V_3_address0;
reg    secondKernel_f_V_3_ce0;
wire  signed [20:0] secondKernel_f_V_3_q0;
wire   [9:0] zext_ln1171_fu_373_p1;
reg   [9:0] zext_ln1171_reg_1059;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_cast_fu_381_p3;
reg   [6:0] tmp_cast_reg_1064;
wire   [4:0] add_ln213_fu_395_p2;
reg   [4:0] add_ln213_reg_1075;
wire   [0:0] icmp_ln213_fu_389_p2;
wire  signed [31:0] sext_ln215_fu_401_p1;
reg  signed [31:0] sext_ln215_reg_1085;
wire    ap_CS_fsm_state3;
wire   [8:0] tmp_s_fu_405_p3;
reg   [8:0] tmp_s_reg_1090;
wire    ap_CS_fsm_state4;
reg   [9:0] out_0_0_0_0_addr_reg_1095;
wire   [5:0] indvars_iv_next20_fu_437_p2;
reg   [5:0] indvars_iv_next20_reg_1103;
wire    ap_CS_fsm_state5;
wire   [3:0] add_ln221_fu_481_p2;
reg   [3:0] add_ln221_reg_1123;
wire   [8:0] tmp_2_fu_493_p3;
reg   [8:0] tmp_2_reg_1128;
wire   [0:0] icmp_ln221_fu_475_p2;
wire   [0:0] cmp50_fu_501_p2;
reg   [0:0] cmp50_reg_1133;
wire   [8:0] tmp_3_fu_507_p3;
reg   [8:0] tmp_3_reg_1137;
wire   [0:0] cmp27_fu_514_p2;
reg   [0:0] cmp27_reg_1143;
wire   [0:0] cmp87_fu_520_p2;
reg   [0:0] cmp87_reg_1147;
wire   [8:0] tmp_4_fu_531_p3;
reg   [8:0] tmp_4_reg_1151;
wire   [31:0] add_ln415_fu_619_p2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [3:0] add_ln226_fu_659_p2;
reg   [3:0] add_ln226_reg_1174;
wire   [31:0] add_ln415_2_fu_745_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [3:0] add_ln235_fu_785_p2;
reg   [3:0] add_ln235_reg_1197;
wire   [3:0] add_ln231_fu_836_p2;
reg   [3:0] add_ln231_reg_1225;
reg   [0:0] tmp_reg_1230;
wire   [0:0] icmp_ln231_fu_830_p2;
wire   [0:0] icmp_ln235_fu_779_p2;
wire   [31:0] add_ln415_4_fu_930_p2;
wire    ap_CS_fsm_state10;
wire   [31:0] add_ln415_3_fu_1046_p2;
wire    ap_CS_fsm_state11;
reg   [5:0] i_reg_231;
wire    ap_CS_fsm_state12;
reg   [3:0] h_reg_243;
wire   [0:0] exitcond238_fu_431_p2;
reg   [31:0] lhs_reg_254;
reg   [3:0] h_1_reg_265;
reg   [31:0] lhs_5_reg_276;
reg   [31:0] ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
reg   [31:0] V1_i_i_i_i_i67279_promoted_reg_288;
wire   [0:0] icmp_ln226_fu_653_p2;
reg   [3:0] h_3_reg_300;
reg   [31:0] lhs_10_reg_311;
reg   [3:0] h_2_reg_323;
reg   [31:0] lhs_8_reg_334;
reg   [31:0] ap_phi_mux_empty_72_phi_fu_349_p6;
reg   [31:0] empty_72_reg_346;
wire   [63:0] zext_ln213_fu_368_p1;
wire   [63:0] zext_ln220_fu_426_p1;
wire   [63:0] zext_ln1171_9_fu_460_p1;
wire   [63:0] zext_ln1169_fu_470_p1;
wire   [63:0] zext_ln1171_12_fu_638_p1;
wire   [63:0] zext_ln1169_3_fu_648_p1;
wire   [63:0] zext_ln1171_18_fu_764_p1;
wire   [63:0] zext_ln1169_6_fu_774_p1;
wire   [63:0] zext_ln1171_15_fu_804_p1;
wire   [63:0] zext_ln1169_4_fu_815_p1;
wire   [63:0] zext_ln1169_5_fu_825_p1;
reg   [4:0] d_fu_92;
wire   [3:0] trunc_ln1171_fu_377_p1;
wire   [9:0] tmp_1_fu_413_p3;
wire   [9:0] add_ln220_fu_421_p2;
wire   [6:0] zext_ln1171_8_fu_451_p1;
wire   [6:0] add_ln1171_fu_455_p2;
wire   [8:0] zext_ln1171_7_fu_447_p1;
wire   [8:0] add_ln1169_1_fu_465_p2;
wire   [5:0] empty_68_fu_487_p2;
wire   [5:0] add_ln1169_fu_525_p2;
wire   [50:0] lhs_4_fu_553_p3;
wire   [50:0] r_V_20_fu_547_p2;
wire   [50:0] ret_V_fu_561_p2;
wire   [17:0] trunc_ln727_fu_593_p1;
wire   [0:0] p_Result_s_fu_577_p3;
wire   [0:0] r_fu_597_p2;
wire   [0:0] or_ln412_fu_603_p2;
wire   [0:0] p_Result_18_fu_585_p3;
wire   [0:0] and_ln412_fu_609_p2;
wire   [31:0] p_Val2_6_fu_567_p4;
wire   [31:0] zext_ln415_fu_615_p1;
wire   [6:0] zext_ln1171_11_fu_629_p1;
wire   [6:0] add_ln1171_3_fu_633_p2;
wire   [8:0] zext_ln1171_10_fu_625_p1;
wire   [8:0] add_ln1169_2_fu_643_p2;
wire   [50:0] lhs_6_fu_679_p3;
wire   [50:0] r_V_21_fu_673_p2;
wire   [50:0] ret_V_7_fu_687_p2;
wire   [17:0] trunc_ln727_2_fu_719_p1;
wire   [0:0] p_Result_13_fu_703_p3;
wire   [0:0] r_2_fu_723_p2;
wire   [0:0] or_ln412_2_fu_729_p2;
wire   [0:0] p_Result_19_fu_711_p3;
wire   [0:0] and_ln412_2_fu_735_p2;
wire   [31:0] p_Val2_8_fu_693_p4;
wire   [31:0] zext_ln415_2_fu_741_p1;
wire   [6:0] zext_ln1171_17_fu_755_p1;
wire   [6:0] add_ln1171_5_fu_759_p2;
wire   [8:0] zext_ln1171_16_fu_751_p1;
wire   [8:0] add_ln1169_5_fu_769_p2;
wire   [6:0] zext_ln1171_14_fu_795_p1;
wire   [6:0] add_ln1171_4_fu_799_p2;
wire   [8:0] zext_ln1171_13_fu_791_p1;
wire   [8:0] add_ln1169_3_fu_810_p2;
wire   [8:0] add_ln1169_4_fu_820_p2;
wire   [50:0] lhs_11_fu_864_p3;
wire   [50:0] r_V_24_fu_858_p2;
wire   [50:0] ret_V_10_fu_872_p2;
wire   [17:0] trunc_ln727_3_fu_904_p1;
wire   [0:0] p_Result_17_fu_888_p3;
wire   [0:0] r_4_fu_908_p2;
wire   [0:0] or_ln412_4_fu_914_p2;
wire   [0:0] p_Result_21_fu_896_p3;
wire   [0:0] and_ln412_4_fu_920_p2;
wire   [31:0] p_Val2_12_fu_878_p4;
wire   [31:0] zext_ln415_4_fu_926_p1;
wire   [50:0] r_V_22_fu_944_p2;
wire   [50:0] r_V_23_fu_962_p2;
wire   [50:0] lhs_9_fu_978_p3;
wire   [50:0] ret_V_8_fu_972_p2;
wire   [50:0] ret_V_9_fu_986_p2;
wire   [17:0] trunc_ln1168_fu_950_p1;
wire   [17:0] trunc_ln1168_1_fu_968_p1;
wire   [17:0] sub_ln727_fu_1018_p2;
wire   [0:0] p_Result_15_fu_1002_p3;
wire   [0:0] r_3_fu_1024_p2;
wire   [0:0] or_ln412_3_fu_1030_p2;
wire   [0:0] p_Result_20_fu_1010_p3;
wire   [0:0] and_ln412_3_fu_1036_p2;
wire   [31:0] p_Val2_10_fu_992_p4;
wire   [31:0] zext_ln415_3_fu_1042_p1;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_condition_280;
reg    ap_condition_307;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

master_fix_convolution2_fix_secondBias_f_V #(
    .DataWidth( 21 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
secondBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondBias_f_V_address0),
    .ce0(secondBias_f_V_ce0),
    .q0(secondBias_f_V_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_1 #(
    .DataWidth( 20 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_1_address0),
    .ce0(secondKernel_f_V_1_ce0),
    .q0(secondKernel_f_V_1_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_0 #(
    .DataWidth( 20 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_0_address0),
    .ce0(secondKernel_f_V_0_ce0),
    .q0(secondKernel_f_V_0_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_2 #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_2_address0),
    .ce0(secondKernel_f_V_2_ce0),
    .q0(secondKernel_f_V_2_q0)
);

master_fix_convolution2_fix_secondKernel_f_V_3 #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
secondKernel_f_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondKernel_f_V_3_address0),
    .ce0(secondKernel_f_V_3_ce0),
    .q0(secondKernel_f_V_3_q0)
);

master_fix_mul_20s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_20s_32s_51_1_1_U36(
    .din0(secondKernel_f_V_1_q0),
    .din1(m_0_0_0_0_q0),
    .dout(r_V_20_fu_547_p2)
);

master_fix_mul_20s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_20s_32s_51_1_1_U37(
    .din0(secondKernel_f_V_0_q0),
    .din1(m_0_0_0_0_q0),
    .dout(r_V_21_fu_673_p2)
);

master_fix_mul_21s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_21s_32s_51_1_1_U38(
    .din0(secondKernel_f_V_2_q0),
    .din1(m_0_0_0_0_q0),
    .dout(r_V_24_fu_858_p2)
);

master_fix_mul_21s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_21s_32s_51_1_1_U39(
    .din0(secondKernel_f_V_2_q0),
    .din1(m_0_0_0_0_q1),
    .dout(r_V_22_fu_944_p2)
);

master_fix_mul_21s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_21s_32s_51_1_1_U40(
    .din0(secondKernel_f_V_3_q0),
    .din1(m_0_0_0_0_q0),
    .dout(r_V_23_fu_962_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_514_p2 == 1'd1) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
        V1_i_i_i_i_i67279_promoted_reg_288 <= lhs_reg_254;
    end else if (((icmp_ln226_fu_653_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (cmp27_reg_1143 == 1'd0))) begin
        V1_i_i_i_i_i67279_promoted_reg_288 <= lhs_5_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        d_fu_92 <= 5'd0;
    end else if (((exitcond238_fu_431_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        d_fu_92 <= add_ln213_reg_1075;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln226_fu_653_p2 == 1'd1) & (cmp87_reg_1147 == 1'd0) & (cmp50_reg_1133 == 1'd0)) | ((cmp87_reg_1147 == 1'd0) & (cmp27_reg_1143 == 1'd1) & (cmp50_reg_1133 == 1'd0))))) begin
        empty_72_reg_346 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
    end else if (((icmp_ln235_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0))) begin
        empty_72_reg_346 <= lhs_10_reg_311;
    end else if (((icmp_ln231_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1))) begin
        empty_72_reg_346 <= lhs_8_reg_334;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_514_p2 == 1'd0) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
        h_1_reg_265 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        h_1_reg_265 <= add_ln226_reg_1174;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((cmp27_reg_1143 == 1'd1) & (cmp50_reg_1133 == 1'd1)) | ((icmp_ln226_fu_653_p2 == 1'd1) & (cmp50_reg_1133 == 1'd1))))) begin
        h_2_reg_323 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        h_2_reg_323 <= add_ln231_reg_1225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln226_fu_653_p2 == 1'd1) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((cmp87_reg_1147 == 1'd1) & (cmp27_reg_1143 == 1'd1) & (cmp50_reg_1133 == 1'd0))))) begin
        h_3_reg_300 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        h_3_reg_300 <= add_ln235_reg_1197;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        h_reg_243 <= add_ln221_reg_1123;
    end else if (((exitcond238_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        h_reg_243 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_231 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_231 <= indvars_iv_next20_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((icmp_ln226_fu_653_p2 == 1'd1) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((cmp87_reg_1147 == 1'd1) & (cmp27_reg_1143 == 1'd1) & (cmp50_reg_1133 == 1'd0))))) begin
        lhs_10_reg_311 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs_10_reg_311 <= add_ln415_4_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_514_p2 == 1'd0) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
        lhs_5_reg_276 <= lhs_reg_254;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        lhs_5_reg_276 <= add_ln415_2_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (((cmp27_reg_1143 == 1'd1) & (cmp50_reg_1133 == 1'd1)) | ((icmp_ln226_fu_653_p2 == 1'd1) & (cmp50_reg_1133 == 1'd1))))) begin
        lhs_8_reg_334 <= ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        lhs_8_reg_334 <= add_ln415_3_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        lhs_reg_254 <= add_ln415_fu_619_p2;
    end else if (((exitcond238_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        lhs_reg_254 <= sext_ln215_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln213_reg_1075 <= add_ln213_fu_395_p2;
        tmp_cast_reg_1064[6 : 3] <= tmp_cast_fu_381_p3[6 : 3];
        zext_ln1171_reg_1059[4 : 0] <= zext_ln1171_fu_373_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln221_reg_1123 <= add_ln221_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (cmp27_reg_1143 == 1'd0))) begin
        add_ln226_reg_1174 <= add_ln226_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1))) begin
        add_ln231_reg_1225 <= add_ln231_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0))) begin
        add_ln235_reg_1197 <= add_ln235_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
        cmp27_reg_1143 <= cmp27_fu_514_p2;
        cmp50_reg_1133 <= cmp50_fu_501_p2;
        cmp87_reg_1147 <= cmp87_fu_520_p2;
        tmp_2_reg_1128[8 : 3] <= tmp_2_fu_493_p3[8 : 3];
        tmp_3_reg_1137[8 : 3] <= tmp_3_fu_507_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvars_iv_next20_reg_1103 <= indvars_iv_next20_fu_437_p2;
        out_0_0_0_0_addr_reg_1095 <= zext_ln220_fu_426_p1;
        tmp_s_reg_1090[8 : 3] <= tmp_s_fu_405_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln215_reg_1085 <= sext_ln215_fu_401_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (cmp27_fu_514_p2 == 1'd0) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
        tmp_4_reg_1151[8 : 3] <= tmp_4_fu_531_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((((icmp_ln235_fu_779_p2 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((icmp_ln231_fu_830_p2 == 1'd1) & (cmp50_reg_1133 == 1'd1))) | ((cmp87_reg_1147 == 1'd0) & (cmp50_reg_1133 == 1'd0))))) begin
        tmp_reg_1230 <= ap_phi_mux_empty_72_phi_fu_349_p6[32'd31];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln213_fu_389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln226_fu_653_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (cmp27_reg_1143 == 1'd0))) begin
        ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4 = lhs_5_reg_276;
    end else begin
        ap_phi_mux_V1_i_i_i_i_i67279_promoted_phi_fu_291_p4 = V1_i_i_i_i_i67279_promoted_reg_288;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if ((1'b1 == ap_condition_280)) begin
            ap_phi_mux_empty_72_phi_fu_349_p6 = lhs_10_reg_311;
        end else if (((icmp_ln231_fu_830_p2 == 1'd1) & (cmp50_reg_1133 == 1'd1))) begin
            ap_phi_mux_empty_72_phi_fu_349_p6 = lhs_8_reg_334;
        end else begin
            ap_phi_mux_empty_72_phi_fu_349_p6 = empty_72_reg_346;
        end
    end else begin
        ap_phi_mux_empty_72_phi_fu_349_p6 = empty_72_reg_346;
    end
end

always @ (*) begin
    if (((icmp_ln213_fu_389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln231_fu_830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1))) begin
        m_0_0_0_0_address0 = zext_ln1169_5_fu_825_p1;
    end else if (((icmp_ln235_fu_779_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0))) begin
        m_0_0_0_0_address0 = zext_ln1169_6_fu_774_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        m_0_0_0_0_address0 = zext_ln1169_3_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        m_0_0_0_0_address0 = zext_ln1169_fu_470_p1;
    end else begin
        m_0_0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln231_fu_830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1)) | ((icmp_ln235_fu_779_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)))) begin
        m_0_0_0_0_ce0 = 1'b1;
    end else begin
        m_0_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m_0_0_0_0_ce1 = 1'b1;
    end else begin
        m_0_0_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln235_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((icmp_ln231_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1)))) begin
        out_0_0_0_0_ce0 = 1'b1;
    end else begin
        out_0_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_0_0_0_0_d0 = 32'd0;
    end else if (((icmp_ln231_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1))) begin
        out_0_0_0_0_d0 = lhs_8_reg_334;
    end else if (((icmp_ln235_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0))) begin
        out_0_0_0_0_d0 = lhs_10_reg_311;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_0_0_0_0_d0 = lhs_5_reg_276;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_0_0_0_0_d0 = lhs_reg_254;
    end else begin
        out_0_0_0_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_1230 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln226_fu_653_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (cmp27_reg_1143 == 1'd0)) | ((icmp_ln235_fu_779_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((icmp_ln231_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln221_fu_475_p2 == 1'd1)))) begin
        out_0_0_0_0_we0 = 1'b1;
    end else begin
        out_0_0_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        secondBias_f_V_ce0 = 1'b1;
    end else begin
        secondBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        secondKernel_f_V_0_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        secondKernel_f_V_1_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        if (((icmp_ln231_fu_830_p2 == 1'd0) & (cmp50_reg_1133 == 1'd1))) begin
            secondKernel_f_V_2_address0 = zext_ln1171_15_fu_804_p1;
        end else if ((1'b1 == ap_condition_307)) begin
            secondKernel_f_V_2_address0 = zext_ln1171_18_fu_764_p1;
        end else begin
            secondKernel_f_V_2_address0 = 'bx;
        end
    end else begin
        secondKernel_f_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln231_fu_830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1)) | ((icmp_ln235_fu_779_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0)))) begin
        secondKernel_f_V_2_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        secondKernel_f_V_3_ce0 = 1'b1;
    end else begin
        secondKernel_f_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln213_fu_389_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond238_fu_431_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln221_fu_475_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln226_fu_653_p2 == 1'd1) | (cmp27_reg_1143 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & ((((icmp_ln235_fu_779_p2 == 1'd1) & (cmp50_reg_1133 == 1'd0)) | ((icmp_ln231_fu_830_p2 == 1'd1) & (cmp50_reg_1133 == 1'd1))) | ((cmp87_reg_1147 == 1'd0) & (cmp50_reg_1133 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((icmp_ln231_fu_830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (cmp50_reg_1133 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_1_fu_465_p2 = (tmp_s_reg_1090 + zext_ln1171_7_fu_447_p1);

assign add_ln1169_2_fu_643_p2 = (tmp_4_reg_1151 + zext_ln1171_10_fu_625_p1);

assign add_ln1169_3_fu_810_p2 = (tmp_3_reg_1137 + zext_ln1171_13_fu_791_p1);

assign add_ln1169_4_fu_820_p2 = (tmp_2_reg_1128 + zext_ln1171_13_fu_791_p1);

assign add_ln1169_5_fu_769_p2 = (tmp_3_reg_1137 + zext_ln1171_16_fu_751_p1);

assign add_ln1169_fu_525_p2 = ($signed(i_reg_231) + $signed(6'd63));

assign add_ln1171_3_fu_633_p2 = (tmp_cast_reg_1064 + zext_ln1171_11_fu_629_p1);

assign add_ln1171_4_fu_799_p2 = (tmp_cast_reg_1064 + zext_ln1171_14_fu_795_p1);

assign add_ln1171_5_fu_759_p2 = (tmp_cast_reg_1064 + zext_ln1171_17_fu_755_p1);

assign add_ln1171_fu_455_p2 = (tmp_cast_reg_1064 + zext_ln1171_8_fu_451_p1);

assign add_ln213_fu_395_p2 = (d_fu_92 + 5'd1);

assign add_ln220_fu_421_p2 = (tmp_1_fu_413_p3 + zext_ln1171_reg_1059);

assign add_ln221_fu_481_p2 = (h_reg_243 + 4'd1);

assign add_ln226_fu_659_p2 = (h_1_reg_265 + 4'd1);

assign add_ln231_fu_836_p2 = (h_2_reg_323 + 4'd1);

assign add_ln235_fu_785_p2 = (h_3_reg_300 + 4'd1);

assign add_ln415_2_fu_745_p2 = (p_Val2_8_fu_693_p4 + zext_ln415_2_fu_741_p1);

assign add_ln415_3_fu_1046_p2 = (p_Val2_10_fu_992_p4 + zext_ln415_3_fu_1042_p1);

assign add_ln415_4_fu_930_p2 = (p_Val2_12_fu_878_p4 + zext_ln415_4_fu_926_p1);

assign add_ln415_fu_619_p2 = (p_Val2_6_fu_567_p4 + zext_ln415_fu_615_p1);

assign and_ln412_2_fu_735_p2 = (p_Result_19_fu_711_p3 & or_ln412_2_fu_729_p2);

assign and_ln412_3_fu_1036_p2 = (p_Result_20_fu_1010_p3 & or_ln412_3_fu_1030_p2);

assign and_ln412_4_fu_920_p2 = (p_Result_21_fu_896_p3 & or_ln412_4_fu_914_p2);

assign and_ln412_fu_609_p2 = (p_Result_18_fu_585_p3 & or_ln412_fu_603_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_280 = ((icmp_ln235_fu_779_p2 == 1'd1) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0));
end

always @ (*) begin
    ap_condition_307 = ((icmp_ln235_fu_779_p2 == 1'd0) & (cmp87_reg_1147 == 1'd1) & (cmp50_reg_1133 == 1'd0));
end

assign cmp27_fu_514_p2 = ((i_reg_231 == 6'd0) ? 1'b1 : 1'b0);

assign cmp50_fu_501_p2 = ((empty_68_fu_487_p2 < 6'd42) ? 1'b1 : 1'b0);

assign cmp87_fu_520_p2 = ((indvars_iv_next20_reg_1103 < 6'd42) ? 1'b1 : 1'b0);

assign empty_68_fu_487_p2 = (i_reg_231 + 6'd2);

assign exitcond238_fu_431_p2 = ((i_reg_231 == 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_389_p2 = ((d_fu_92 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_475_p2 = ((h_reg_243 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln226_fu_653_p2 = ((h_1_reg_265 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln231_fu_830_p2 = ((h_2_reg_323 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_779_p2 = ((h_3_reg_300 == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_next20_fu_437_p2 = (i_reg_231 + 6'd1);

assign lhs_11_fu_864_p3 = {{lhs_10_reg_311}, {19'd0}};

assign lhs_4_fu_553_p3 = {{lhs_reg_254}, {19'd0}};

assign lhs_6_fu_679_p3 = {{lhs_5_reg_276}, {19'd0}};

assign lhs_9_fu_978_p3 = {{lhs_8_reg_334}, {19'd0}};

assign m_0_0_0_0_address1 = zext_ln1169_4_fu_815_p1;

assign or_ln412_2_fu_729_p2 = (r_2_fu_723_p2 | p_Result_13_fu_703_p3);

assign or_ln412_3_fu_1030_p2 = (r_3_fu_1024_p2 | p_Result_15_fu_1002_p3);

assign or_ln412_4_fu_914_p2 = (r_4_fu_908_p2 | p_Result_17_fu_888_p3);

assign or_ln412_fu_603_p2 = (r_fu_597_p2 | p_Result_s_fu_577_p3);

assign out_0_0_0_0_address0 = out_0_0_0_0_addr_reg_1095;

assign p_Result_13_fu_703_p3 = ret_V_7_fu_687_p2[32'd19];

assign p_Result_15_fu_1002_p3 = ret_V_9_fu_986_p2[32'd19];

assign p_Result_17_fu_888_p3 = ret_V_10_fu_872_p2[32'd19];

assign p_Result_18_fu_585_p3 = ret_V_fu_561_p2[32'd18];

assign p_Result_19_fu_711_p3 = ret_V_7_fu_687_p2[32'd18];

assign p_Result_20_fu_1010_p3 = ret_V_8_fu_972_p2[32'd18];

assign p_Result_21_fu_896_p3 = ret_V_10_fu_872_p2[32'd18];

assign p_Result_s_fu_577_p3 = ret_V_fu_561_p2[32'd19];

assign p_Val2_10_fu_992_p4 = {{ret_V_9_fu_986_p2[50:19]}};

assign p_Val2_12_fu_878_p4 = {{ret_V_10_fu_872_p2[50:19]}};

assign p_Val2_6_fu_567_p4 = {{ret_V_fu_561_p2[50:19]}};

assign p_Val2_8_fu_693_p4 = {{ret_V_7_fu_687_p2[50:19]}};

assign r_2_fu_723_p2 = ((trunc_ln727_2_fu_719_p1 != 18'd0) ? 1'b1 : 1'b0);

assign r_3_fu_1024_p2 = ((trunc_ln1168_1_fu_968_p1 != sub_ln727_fu_1018_p2) ? 1'b1 : 1'b0);

assign r_4_fu_908_p2 = ((trunc_ln727_3_fu_904_p1 != 18'd0) ? 1'b1 : 1'b0);

assign r_fu_597_p2 = ((trunc_ln727_fu_593_p1 != 18'd0) ? 1'b1 : 1'b0);

assign ret_V_10_fu_872_p2 = (lhs_11_fu_864_p3 + r_V_24_fu_858_p2);

assign ret_V_7_fu_687_p2 = (lhs_6_fu_679_p3 + r_V_21_fu_673_p2);

assign ret_V_8_fu_972_p2 = (r_V_23_fu_962_p2 + r_V_22_fu_944_p2);

assign ret_V_9_fu_986_p2 = (lhs_9_fu_978_p3 + ret_V_8_fu_972_p2);

assign ret_V_fu_561_p2 = (lhs_4_fu_553_p3 + r_V_20_fu_547_p2);

assign secondBias_f_V_address0 = zext_ln213_fu_368_p1;

assign secondKernel_f_V_0_address0 = zext_ln1171_12_fu_638_p1;

assign secondKernel_f_V_1_address0 = zext_ln1171_9_fu_460_p1;

assign secondKernel_f_V_3_address0 = zext_ln1171_15_fu_804_p1;

assign sext_ln215_fu_401_p1 = $signed(secondBias_f_V_q0);

assign sub_ln727_fu_1018_p2 = (18'd0 - trunc_ln1168_fu_950_p1);

assign tmp_1_fu_413_p3 = {{i_reg_231}, {4'd0}};

assign tmp_2_fu_493_p3 = {{empty_68_fu_487_p2}, {3'd0}};

assign tmp_3_fu_507_p3 = {{indvars_iv_next20_reg_1103}, {3'd0}};

assign tmp_4_fu_531_p3 = {{add_ln1169_fu_525_p2}, {3'd0}};

assign tmp_cast_fu_381_p3 = {{trunc_ln1171_fu_377_p1}, {3'd0}};

assign tmp_s_fu_405_p3 = {{i_reg_231}, {3'd0}};

assign trunc_ln1168_1_fu_968_p1 = r_V_23_fu_962_p2[17:0];

assign trunc_ln1168_fu_950_p1 = r_V_22_fu_944_p2[17:0];

assign trunc_ln1171_fu_377_p1 = d_fu_92[3:0];

assign trunc_ln727_2_fu_719_p1 = r_V_21_fu_673_p2[17:0];

assign trunc_ln727_3_fu_904_p1 = r_V_24_fu_858_p2[17:0];

assign trunc_ln727_fu_593_p1 = r_V_20_fu_547_p2[17:0];

assign zext_ln1169_3_fu_648_p1 = add_ln1169_2_fu_643_p2;

assign zext_ln1169_4_fu_815_p1 = add_ln1169_3_fu_810_p2;

assign zext_ln1169_5_fu_825_p1 = add_ln1169_4_fu_820_p2;

assign zext_ln1169_6_fu_774_p1 = add_ln1169_5_fu_769_p2;

assign zext_ln1169_fu_470_p1 = add_ln1169_1_fu_465_p2;

assign zext_ln1171_10_fu_625_p1 = h_1_reg_265;

assign zext_ln1171_11_fu_629_p1 = h_1_reg_265;

assign zext_ln1171_12_fu_638_p1 = add_ln1171_3_fu_633_p2;

assign zext_ln1171_13_fu_791_p1 = h_2_reg_323;

assign zext_ln1171_14_fu_795_p1 = h_2_reg_323;

assign zext_ln1171_15_fu_804_p1 = add_ln1171_4_fu_799_p2;

assign zext_ln1171_16_fu_751_p1 = h_3_reg_300;

assign zext_ln1171_17_fu_755_p1 = h_3_reg_300;

assign zext_ln1171_18_fu_764_p1 = add_ln1171_5_fu_759_p2;

assign zext_ln1171_7_fu_447_p1 = h_reg_243;

assign zext_ln1171_8_fu_451_p1 = h_reg_243;

assign zext_ln1171_9_fu_460_p1 = add_ln1171_fu_455_p2;

assign zext_ln1171_fu_373_p1 = d_fu_92;

assign zext_ln213_fu_368_p1 = d_fu_92;

assign zext_ln220_fu_426_p1 = add_ln220_fu_421_p2;

assign zext_ln415_2_fu_741_p1 = and_ln412_2_fu_735_p2;

assign zext_ln415_3_fu_1042_p1 = and_ln412_3_fu_1036_p2;

assign zext_ln415_4_fu_926_p1 = and_ln412_4_fu_920_p2;

assign zext_ln415_fu_615_p1 = and_ln412_fu_609_p2;

always @ (posedge ap_clk) begin
    zext_ln1171_reg_1059[9:5] <= 5'b00000;
    tmp_cast_reg_1064[2:0] <= 3'b000;
    tmp_s_reg_1090[2:0] <= 3'b000;
    tmp_2_reg_1128[2:0] <= 3'b000;
    tmp_3_reg_1137[2:0] <= 3'b000;
    tmp_4_reg_1151[2:0] <= 3'b000;
end

endmodule //master_fix_convolution2_fix
