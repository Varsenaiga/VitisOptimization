// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        tmp_V_address0,
        tmp_V_ce0,
        tmp_V_we0,
        tmp_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [8:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [11:0] tmp_V_address0;
output   tmp_V_ce0;
output   tmp_V_we0;
output  [31:0] tmp_V_d0;

reg ap_idle;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg[8:0] input_r_address1;
reg input_r_ce1;
reg tmp_V_ce0;
reg tmp_V_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state12_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln176_reg_1621;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] firstKernel_f_V_1_1_address0;
reg    firstKernel_f_V_1_1_ce0;
wire  signed [17:0] firstKernel_f_V_1_1_q0;
wire   [2:0] firstBias_f_V_address0;
reg    firstBias_f_V_ce0;
wire   [21:0] firstBias_f_V_q0;
wire   [2:0] firstKernel_f_V_0_1_address0;
reg    firstKernel_f_V_0_1_ce0;
wire   [18:0] firstKernel_f_V_0_1_q0;
wire   [2:0] firstKernel_f_V_0_0_address0;
reg    firstKernel_f_V_0_0_ce0;
wire   [18:0] firstKernel_f_V_0_0_q0;
wire   [2:0] firstKernel_f_V_1_0_address0;
reg    firstKernel_f_V_1_0_ce0;
wire   [17:0] firstKernel_f_V_1_0_q0;
wire   [2:0] firstKernel_f_V_0_2_address0;
reg    firstKernel_f_V_0_2_ce0;
wire   [19:0] firstKernel_f_V_0_2_q0;
wire   [2:0] firstKernel_f_V_1_2_address0;
reg    firstKernel_f_V_1_2_ce0;
wire   [17:0] firstKernel_f_V_1_2_q0;
wire   [2:0] firstKernel_f_V_2_1_address0;
reg    firstKernel_f_V_2_1_ce0;
wire   [17:0] firstKernel_f_V_2_1_q0;
wire   [2:0] firstKernel_f_V_3_1_address0;
reg    firstKernel_f_V_3_1_ce0;
wire   [18:0] firstKernel_f_V_3_1_q0;
wire   [2:0] firstKernel_f_V_2_0_address0;
reg    firstKernel_f_V_2_0_ce0;
wire   [17:0] firstKernel_f_V_2_0_q0;
wire   [2:0] firstKernel_f_V_3_0_address0;
reg    firstKernel_f_V_3_0_ce0;
wire   [17:0] firstKernel_f_V_3_0_q0;
wire   [2:0] firstKernel_f_V_2_2_address0;
reg    firstKernel_f_V_2_2_ce0;
wire   [17:0] firstKernel_f_V_2_2_q0;
wire   [2:0] firstKernel_f_V_3_2_address0;
reg    firstKernel_f_V_3_2_ce0;
wire   [18:0] firstKernel_f_V_3_2_q0;
reg   [7:0] i_6_reg_1614;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state14_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln176_fu_458_p2;
reg   [0:0] icmp_ln176_reg_1621_pp0_iter1_reg;
wire   [0:0] exitcond_flatten59_fu_485_p2;
reg   [0:0] exitcond_flatten59_reg_1625;
wire   [7:0] select_ln176_fu_491_p3;
reg   [7:0] select_ln176_reg_1635;
wire   [63:0] zext_ln176_fu_507_p1;
reg   [63:0] zext_ln176_reg_1641;
wire   [0:0] xor_ln176_fu_534_p2;
reg   [0:0] xor_ln176_reg_1702;
wire   [0:0] and_ln176_1_fu_546_p2;
reg   [0:0] and_ln176_1_reg_1707;
wire   [1:0] j_mid2_fu_564_p3;
reg   [1:0] j_mid2_reg_1718;
wire   [8:0] empty_69_fu_602_p1;
reg   [8:0] empty_69_reg_1725;
wire   [8:0] sub_ln1169_1_fu_636_p2;
reg   [8:0] sub_ln1169_1_reg_1731;
wire   [0:0] cmp25_mid1_fu_642_p2;
reg   [0:0] cmp25_mid1_reg_1737;
wire   [8:0] zext_ln1169_9_fu_648_p1;
reg   [8:0] zext_ln1169_9_reg_1743;
wire   [11:0] add_ln202_fu_690_p2;
reg   [11:0] add_ln202_reg_1759;
reg   [11:0] add_ln202_reg_1759_pp0_iter1_reg;
reg   [11:0] add_ln202_reg_1759_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state15_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg  signed [21:0] firstBias_f_V_load_reg_1769;
reg  signed [18:0] firstKernel_f_V_0_1_load_reg_1774;
reg  signed [18:0] firstKernel_f_V_0_0_load_reg_1779;
reg  signed [17:0] firstKernel_f_V_1_0_load_reg_1784;
reg  signed [19:0] firstKernel_f_V_0_2_load_reg_1789;
reg  signed [17:0] firstKernel_f_V_1_2_load_reg_1794;
reg  signed [17:0] firstKernel_f_V_2_1_load_reg_1799;
reg  signed [18:0] firstKernel_f_V_3_1_load_reg_1804;
reg  signed [17:0] firstKernel_f_V_2_0_load_reg_1809;
reg  signed [17:0] firstKernel_f_V_2_2_load_reg_1814;
wire  signed [8:0] sext_ln1169_4_fu_747_p1;
reg  signed [8:0] sext_ln1169_4_reg_1824;
wire   [11:0] trunc_ln1169_3_fu_771_p1;
reg  signed [11:0] trunc_ln1169_3_reg_1840;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state16_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] cmp25_mid2_fu_802_p3;
reg   [0:0] cmp25_mid2_reg_1855;
wire   [0:0] icmp_ln184_fu_820_p2;
reg   [0:0] icmp_ln184_reg_1861;
reg   [0:0] icmp_ln184_reg_1861_pp0_iter1_reg;
wire   [11:0] trunc_ln1169_4_fu_828_p1;
reg  signed [11:0] trunc_ln1169_4_reg_1874;
wire   [8:0] zext_ln1169_19_fu_845_p1;
reg   [8:0] zext_ln1169_19_reg_1884;
wire   [0:0] icmp_ln185_fu_869_p2;
reg   [0:0] icmp_ln185_reg_1900;
reg   [0:0] icmp_ln185_reg_1900_pp0_iter1_reg;
wire   [0:0] and_ln188_fu_875_p2;
reg   [0:0] and_ln188_reg_1908;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [8:0] sub_ln1169_2_fu_1010_p2;
reg   [8:0] sub_ln1169_2_reg_1928;
wire   [0:0] cmp112_mid2_fu_1030_p3;
reg   [0:0] cmp112_mid2_reg_1934;
reg   [0:0] cmp112_mid2_reg_1934_pp0_iter1_reg;
wire   [8:0] sub_ln1169_3_fu_1065_p2;
reg   [8:0] sub_ln1169_3_reg_1940;
wire   [0:0] p_mid210_fu_1118_p3;
reg   [0:0] p_mid210_reg_1946;
reg   [0:0] p_mid210_reg_1946_pp0_iter1_reg;
wire   [11:0] trunc_ln1169_6_fu_1148_p1;
reg  signed [11:0] trunc_ln1169_6_reg_1966;
wire   [0:0] and_ln197_1_fu_1165_p2;
reg   [0:0] and_ln197_1_reg_1976;
reg   [0:0] and_ln197_1_reg_1976_pp0_iter1_reg;
wire    ap_block_pp0_stage5_11001;
wire  signed [29:0] sext_ln174_fu_1174_p1;
reg  signed [29:0] sext_ln174_reg_1986;
wire   [8:0] add_ln1169_15_fu_1195_p2;
reg   [8:0] add_ln1169_15_reg_2003;
wire   [8:0] add_ln1169_16_fu_1199_p2;
reg   [8:0] add_ln1169_16_reg_2008;
wire   [11:0] trunc_ln1169_8_fu_1206_p1;
reg  signed [11:0] trunc_ln1169_8_reg_2018;
wire   [11:0] trunc_ln1169_9_fu_1210_p1;
reg  signed [11:0] trunc_ln1169_9_reg_2023;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire  signed [30:0] sext_ln174_1_fu_1220_p1;
reg  signed [30:0] sext_ln174_1_reg_2038;
wire  signed [29:0] num_V_5_fu_1244_p3;
reg  signed [29:0] num_V_5_reg_2058;
wire   [11:0] trunc_ln1169_11_fu_1261_p1;
reg  signed [11:0] trunc_ln1169_11_reg_2074;
wire  signed [31:0] sext_ln174_2_fu_1276_p1;
reg  signed [31:0] sext_ln174_2_reg_2099;
wire  signed [29:0] grp_fu_1518_p2;
reg  signed [29:0] mul_ln712_5_reg_2104;
wire   [11:0] trunc_ln1169_13_fu_1300_p1;
reg  signed [11:0] trunc_ln1169_13_reg_2124;
reg  signed [17:0] firstKernel_f_V_3_0_load_reg_2129;
reg  signed [18:0] firstKernel_f_V_3_2_load_reg_2134;
wire   [0:0] xor_ln185_fu_1341_p2;
reg   [0:0] xor_ln185_reg_2139;
reg   [0:0] xor_ln185_reg_2139_pp0_iter2_reg;
wire  signed [31:0] num_V_10_fu_1351_p3;
reg  signed [31:0] num_V_10_reg_2144;
reg  signed [31:0] num_V_10_reg_2144_pp0_iter2_reg;
wire  signed [31:0] grp_fu_1534_p3;
reg  signed [31:0] num_V_14_reg_2155;
wire  signed [29:0] grp_fu_1543_p2;
reg  signed [29:0] mul_ln712_8_reg_2166;
wire  signed [32:0] grp_fu_1549_p3;
reg  signed [32:0] num_V_11_reg_2177;
wire  signed [29:0] grp_fu_1557_p2;
reg  signed [29:0] mul_ln712_10_reg_2183;
wire   [32:0] num_V_13_fu_1381_p3;
reg  signed [32:0] num_V_13_reg_2193;
wire   [31:0] num_V_18_fu_1395_p3;
reg   [31:0] num_V_18_reg_2204;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1169_11_fu_662_p1;
wire   [63:0] zext_ln1169_12_fu_673_p1;
wire   [63:0] zext_ln1169_15_fu_756_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1169_16_fu_766_p1;
wire   [63:0] zext_ln1169_20_fu_854_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1169_21_fu_864_p1;
wire   [63:0] zext_ln1169_13_fu_1130_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln1169_14_fu_1140_p1;
wire   [63:0] zext_ln1169_17_fu_1181_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln1169_18_fu_1190_p1;
wire   [63:0] zext_ln1169_22_fu_1232_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1169_23_fu_1236_p1;
wire   [63:0] zext_ln202_fu_1401_p1;
reg   [1:0] j_fu_110;
wire   [1:0] add_ln185_fu_840_p2;
wire    ap_loop_init;
reg   [7:0] i_fu_114;
wire   [7:0] i_cast5_mid2_fu_572_p3;
reg   [9:0] indvar_flatten_fu_118;
wire   [9:0] indvar_flatten_next_fu_702_p3;
reg   [3:0] d_fu_122;
wire   [3:0] select_ln176_2_fu_499_p3;
reg   [11:0] indvar_flatten63_fu_126;
wire   [11:0] add_ln176_1_fu_464_p2;
wire   [6:0] empty_fu_448_p1;
wire   [3:0] add_ln176_fu_479_p2;
wire   [6:0] empty_64_fu_452_p2;
wire   [0:0] icmp_ln178_fu_540_p2;
wire   [0:0] empty_68_fu_558_p2;
wire   [7:0] indvars_iv_next25_dup_fu_552_p2;
wire   [9:0] tmp_21_fu_584_p3;
wire   [60:0] zext_ln1169_5_fu_592_p1;
wire   [60:0] zext_ln1169_fu_580_p1;
wire   [60:0] sub_ln1169_fu_596_p2;
wire   [6:0] empty_70_fu_606_p1;
wire   [6:0] p_mid1_fu_610_p2;
wire   [6:0] select_ln176_3_fu_526_p3;
wire   [6:0] p_cast6_mid2_fu_616_p3;
wire   [8:0] p_shl4_cast_fu_628_p3;
wire   [8:0] zext_ln1169_6_fu_624_p1;
wire   [60:0] zext_ln1169_10_fu_652_p1;
wire   [60:0] add_ln1169_fu_656_p2;
wire   [8:0] add_ln1169_6_fu_667_p2;
wire   [8:0] trunc_ln202_fu_678_p1;
wire   [11:0] tmp_32_cast_fu_682_p3;
wire   [11:0] select_ln176_1_v_cast_fu_522_p1;
wire   [9:0] indvar_flatten_op_fu_696_p2;
wire  signed [11:0] trunc_ln1169_2_fu_734_p1;
wire   [1:0] add_ln184_fu_742_p2;
wire   [8:0] add_ln1169_9_fu_751_p2;
wire   [8:0] add_ln1169_10_fu_761_p2;
wire   [0:0] cmp25_fu_775_p2;
wire   [0:0] sel_tmp2_fu_780_p2;
wire   [0:0] and_ln176_fu_792_p2;
wire   [0:0] sel_tmp2_mid1_fu_808_p2;
wire   [0:0] or_ln176_2_fu_797_p2;
wire  signed [11:0] trunc_ln1169_5_fu_832_p1;
wire   [8:0] add_ln1169_13_fu_849_p2;
wire   [8:0] add_ln1169_14_fu_859_p2;
wire   [0:0] sel_tmp2_mid2_fu_813_p3;
wire   [7:0] empty_65_fu_886_p2;
wire   [0:0] tmp_fu_891_p3;
wire   [7:0] indvars_iv_next25_fu_905_p2;
wire   [0:0] tmp_19_fu_910_p3;
wire   [7:0] empty_66_fu_924_p2;
wire   [0:0] tmp_20_fu_930_p3;
wire   [0:0] rev_fu_899_p2;
wire   [0:0] rev43_fu_918_p2;
wire   [0:0] rev46_fu_938_p2;
wire   [7:0] p_mid15_fu_982_p2;
wire   [7:0] select_ln176_4_fu_953_p3;
wire   [7:0] p_cast7_mid2_fu_987_p3;
wire   [6:0] trunc_ln1169_fu_998_p1;
wire   [8:0] p_shl3_cast_fu_1002_p3;
wire   [8:0] zext_ln1169_7_fu_994_p1;
wire   [0:0] tmp_22_fu_1016_p3;
wire   [0:0] rev49_fu_1024_p2;
wire   [0:0] or_ln176_fu_960_p2;
wire   [7:0] indvars_iv_next25_mid1_fu_1037_p2;
wire   [7:0] select_ln176_5_fu_965_p3;
wire   [7:0] indvars_iv_next25_cast8_mid2_fu_1042_p3;
wire   [6:0] trunc_ln1169_1_fu_1053_p1;
wire   [8:0] p_shl_cast_fu_1057_p3;
wire   [8:0] zext_ln1169_8_fu_1049_p1;
wire   [0:0] tmp_23_fu_1071_p3;
wire   [0:0] rev52_fu_1079_p2;
wire   [0:0] or_ln176_1_fu_972_p2;
wire   [7:0] p_mid17_fu_1098_p2;
wire   [0:0] tmp_24_fu_1104_p3;
wire   [0:0] rev55_fu_1112_p2;
wire   [0:0] or_ln176_3_fu_977_p2;
wire   [8:0] add_ln1169_7_fu_1125_p2;
wire   [8:0] add_ln1169_8_fu_1135_p2;
wire  signed [11:0] trunc_ln1169_7_fu_1152_p1;
wire   [0:0] sel_tmp12_mid2_fu_1092_p2;
wire   [0:0] and_ln197_fu_1160_p2;
wire   [0:0] cmp188_mid2_fu_1085_p3;
wire  signed [28:0] grp_fu_1483_p3;
wire   [8:0] add_ln1169_11_fu_1177_p2;
wire   [8:0] add_ln1169_12_fu_1186_p2;
wire  signed [29:0] grp_fu_1492_p3;
wire  signed [29:0] grp_fu_1501_p2;
wire  signed [30:0] sext_ln712_4_fu_1223_p1;
(* use_dsp48 = "no" *) wire   [29:0] num_V_4_fu_1240_p2;
wire  signed [11:0] trunc_ln1169_10_fu_1253_p1;
wire  signed [30:0] grp_fu_1509_p3;
wire   [30:0] num_V_3_fu_1271_p3;
wire  signed [31:0] sext_ln712_8_fu_1280_p1;
wire  signed [11:0] trunc_ln1169_12_fu_1292_p1;
wire  signed [30:0] sext_ln712_7_fu_1310_p1;
wire  signed [30:0] sext_ln174_4_fu_1307_p1;
wire   [30:0] num_V_7_fu_1313_p2;
wire   [0:0] and_ln185_fu_1323_p2;
wire  signed [31:0] grp_fu_1525_p3;
wire  signed [31:0] sext_ln174_3_fu_1304_p1;
wire  signed [31:0] sext_ln174_5_fu_1319_p1;
wire   [31:0] num_V_8_fu_1327_p3;
wire   [0:0] and_ln185_1_fu_1346_p2;
wire   [31:0] num_V_9_fu_1334_p3;
wire  signed [32:0] grp_fu_1563_p3;
wire  signed [32:0] sext_ln1169_2_fu_1373_p1;
(* use_dsp48 = "no" *) wire   [32:0] num_V_12_fu_1376_p2;
wire  signed [31:0] sext_ln1169_1_fu_1370_p1;
(* use_dsp48 = "no" *) wire   [31:0] num_V_16_fu_1390_p2;
wire  signed [32:0] grp_fu_1571_p3;
wire  signed [32:0] sext_ln1169_3_fu_1408_p1;
wire  signed [32:0] sext_ln174_7_fu_1416_p1;
wire   [0:0] and_ln193_fu_1425_p2;
(* use_dsp48 = "no" *) wire   [32:0] num_V_15_fu_1411_p2;
wire   [32:0] num_V_19_fu_1419_p2;
wire   [32:0] num_V_20_fu_1429_p3;
wire   [0:0] and_ln193_1_fu_1444_p2;
wire   [32:0] num_V_21_fu_1437_p3;
wire   [32:0] num_V_22_fu_1448_p3;
wire  signed [32:0] sext_ln174_6_fu_1405_p1;
wire   [32:0] num_V_17_fu_1455_p3;
wire   [0:0] tmp_25_fu_1466_p3;
wire   [31:0] trunc_ln174_fu_1462_p1;
wire  signed [30:0] grp_fu_1509_p2;
wire  signed [31:0] grp_fu_1525_p2;
wire  signed [31:0] grp_fu_1534_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage3;
reg    ap_idle_pp0_0to0;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_bkb #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_1_address0),
    .ce0(firstKernel_f_V_1_1_ce0),
    .q0(firstKernel_f_V_1_1_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_cud #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstBias_f_V_address0),
    .ce0(firstBias_f_V_ce0),
    .q0(firstBias_f_V_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_dEe #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_1_address0),
    .ce0(firstKernel_f_V_0_1_ce0),
    .q0(firstKernel_f_V_0_1_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_eOg #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_0_address0),
    .ce0(firstKernel_f_V_0_0_ce0),
    .q0(firstKernel_f_V_0_0_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_fYi #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_0_address0),
    .ce0(firstKernel_f_V_1_0_ce0),
    .q0(firstKernel_f_V_1_0_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_g8j #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_2_address0),
    .ce0(firstKernel_f_V_0_2_ce0),
    .q0(firstKernel_f_V_0_2_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_hbi #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_2_address0),
    .ce0(firstKernel_f_V_1_2_ce0),
    .q0(firstKernel_f_V_1_2_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_ibs #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_1_address0),
    .ce0(firstKernel_f_V_2_1_ce0),
    .q0(firstKernel_f_V_2_1_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_jbC #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_1_address0),
    .ce0(firstKernel_f_V_3_1_ce0),
    .q0(firstKernel_f_V_3_1_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_kbM #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_0_address0),
    .ce0(firstKernel_f_V_2_0_ce0),
    .q0(firstKernel_f_V_2_0_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_lbW #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_0_address0),
    .ce0(firstKernel_f_V_3_0_ce0),
    .q0(firstKernel_f_V_3_0_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_mb6 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_2_address0),
    .ce0(firstKernel_f_V_2_2_ce0),
    .q0(firstKernel_f_V_2_2_q0)
);

master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3_ncg #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_2_address0),
    .ce0(firstKernel_f_V_3_2_ce0),
    .q0(firstKernel_f_V_3_2_q0)
);

master_fix_mac_muladd_18s_12s_22s_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 29 ))
mac_muladd_18s_12s_22s_29_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_1_1_q0),
    .din1(trunc_ln1169_2_fu_734_p1),
    .din2(firstBias_f_V_load_reg_1769),
    .ce(1'b1),
    .dout(grp_fu_1483_p3)
);

master_fix_mac_muladd_19s_12s_29s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 30 ))
mac_muladd_19s_12s_29s_30_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_0_1_load_reg_1774),
    .din1(trunc_ln1169_3_reg_1840),
    .din2(grp_fu_1483_p3),
    .ce(1'b1),
    .dout(grp_fu_1492_p3)
);

master_fix_mul_mul_18s_12s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 30 ))
mul_mul_18s_12s_30_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_1_0_load_reg_1784),
    .din1(trunc_ln1169_5_fu_832_p1),
    .ce(1'b1),
    .dout(grp_fu_1501_p2)
);

master_fix_mac_muladd_19s_12s_31s_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mac_muladd_19s_12s_31s_31_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_0_0_load_reg_1779),
    .din1(trunc_ln1169_4_reg_1874),
    .din2(grp_fu_1509_p2),
    .ce(1'b1),
    .dout(grp_fu_1509_p3)
);

master_fix_mul_mul_18s_12s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 30 ))
mul_mul_18s_12s_30_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_1_2_load_reg_1794),
    .din1(trunc_ln1169_7_fu_1152_p1),
    .ce(1'b1),
    .dout(grp_fu_1518_p2)
);

master_fix_mac_muladd_20s_12s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_20s_12s_32s_32_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_0_2_load_reg_1789),
    .din1(trunc_ln1169_6_reg_1966),
    .din2(grp_fu_1525_p2),
    .ce(1'b1),
    .dout(grp_fu_1525_p3)
);

master_fix_mac_muladd_18s_12s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_18s_12s_32s_32_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_2_1_load_reg_1799),
    .din1(trunc_ln1169_8_reg_2018),
    .din2(grp_fu_1534_p2),
    .ce(1'b1),
    .dout(grp_fu_1534_p3)
);

master_fix_mul_mul_18s_12s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 30 ))
mul_mul_18s_12s_30_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_2_0_load_reg_1809),
    .din1(trunc_ln1169_10_fu_1253_p1),
    .ce(1'b1),
    .dout(grp_fu_1543_p2)
);

master_fix_mac_muladd_19s_12s_32s_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 33 ))
mac_muladd_19s_12s_32s_33_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_3_1_load_reg_1804),
    .din1(trunc_ln1169_9_reg_2023),
    .din2(grp_fu_1534_p3),
    .ce(1'b1),
    .dout(grp_fu_1549_p3)
);

master_fix_mul_mul_18s_12s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 30 ))
mul_mul_18s_12s_30_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_2_2_load_reg_1814),
    .din1(trunc_ln1169_12_fu_1292_p1),
    .ce(1'b1),
    .dout(grp_fu_1557_p2)
);

master_fix_mac_muladd_18s_12s_33s_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
mac_muladd_18s_12s_33s_33_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_3_0_load_reg_2129),
    .din1(trunc_ln1169_11_reg_2074),
    .din2(num_V_11_reg_2177),
    .ce(1'b1),
    .dout(grp_fu_1563_p3)
);

master_fix_mac_muladd_19s_12s_33s_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 33 ),
    .dout_WIDTH( 33 ))
mac_muladd_19s_12s_33s_33_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(firstKernel_f_V_3_2_load_reg_2134),
    .din1(trunc_ln1169_13_reg_2124),
    .din2(num_V_13_reg_2193),
    .ce(1'b1),
    .dout(grp_fu_1571_p3)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage3) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_fu_122 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln176_fu_458_p2 == 1'd0))) begin
        d_fu_122 <= select_ln176_2_fu_499_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_114 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln176_fu_458_p2 == 1'd0))) begin
        i_fu_114 <= i_cast5_mid2_fu_572_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten63_fu_126 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln176_fu_458_p2 == 1'd0))) begin
        indvar_flatten63_fu_126 <= add_ln176_1_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_118 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln176_fu_458_p2 == 1'd0))) begin
        indvar_flatten_fu_118 <= indvar_flatten_next_fu_702_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_110 <= 2'd0;
    end else if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_fu_110 <= add_ln185_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln1169_15_reg_2003 <= add_ln1169_15_fu_1195_p2;
        trunc_ln1169_8_reg_2018 <= trunc_ln1169_8_fu_1206_p1;
        trunc_ln1169_9_reg_2023 <= trunc_ln1169_9_fu_1210_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'd0 == and_ln197_1_reg_1976))) begin
        add_ln1169_16_reg_2008 <= add_ln1169_16_fu_1199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln176_fu_458_p2 == 1'd0))) begin
        add_ln202_reg_1759 <= add_ln202_fu_690_p2;
        and_ln176_1_reg_1707 <= and_ln176_1_fu_546_p2;
        cmp25_mid1_reg_1737 <= cmp25_mid1_fu_642_p2;
        empty_69_reg_1725 <= empty_69_fu_602_p1;
        exitcond_flatten59_reg_1625 <= exitcond_flatten59_fu_485_p2;
        j_mid2_reg_1718 <= j_mid2_fu_564_p3;
        select_ln176_reg_1635 <= select_ln176_fu_491_p3;
        sub_ln1169_1_reg_1731 <= sub_ln1169_1_fu_636_p2;
        xor_ln176_reg_1702 <= xor_ln176_fu_534_p2;
        zext_ln1169_9_reg_1743[1 : 0] <= zext_ln1169_9_fu_648_p1[1 : 0];
        zext_ln176_reg_1641[3 : 0] <= zext_ln176_fu_507_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln202_reg_1759_pp0_iter1_reg <= add_ln202_reg_1759;
        add_ln202_reg_1759_pp0_iter2_reg <= add_ln202_reg_1759_pp0_iter1_reg;
        i_6_reg_1614 <= i_fu_114;
        icmp_ln176_reg_1621 <= icmp_ln176_fu_458_p2;
        icmp_ln176_reg_1621_pp0_iter1_reg <= icmp_ln176_reg_1621;
        mul_ln712_5_reg_2104 <= grp_fu_1518_p2;
        sext_ln174_2_reg_2099 <= sext_ln174_2_fu_1276_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        and_ln188_reg_1908 <= and_ln188_fu_875_p2;
        cmp25_mid2_reg_1855 <= cmp25_mid2_fu_802_p3;
        icmp_ln184_reg_1861 <= icmp_ln184_fu_820_p2;
        icmp_ln185_reg_1900 <= icmp_ln185_fu_869_p2;
        trunc_ln1169_4_reg_1874 <= trunc_ln1169_4_fu_828_p1;
        zext_ln1169_19_reg_1884[1 : 0] <= zext_ln1169_19_fu_845_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln197_1_reg_1976 <= and_ln197_1_fu_1165_p2;
        cmp112_mid2_reg_1934 <= cmp112_mid2_fu_1030_p3;
        p_mid210_reg_1946 <= p_mid210_fu_1118_p3;
        sub_ln1169_2_reg_1928 <= sub_ln1169_2_fu_1010_p2;
        sub_ln1169_3_reg_1940 <= sub_ln1169_3_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln197_1_reg_1976_pp0_iter1_reg <= and_ln197_1_reg_1976;
        cmp112_mid2_reg_1934_pp0_iter1_reg <= cmp112_mid2_reg_1934;
        p_mid210_reg_1946_pp0_iter1_reg <= p_mid210_reg_1946;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        firstBias_f_V_load_reg_1769 <= firstBias_f_V_q0;
        firstKernel_f_V_0_0_load_reg_1779 <= firstKernel_f_V_0_0_q0;
        firstKernel_f_V_0_1_load_reg_1774 <= firstKernel_f_V_0_1_q0;
        firstKernel_f_V_0_2_load_reg_1789 <= firstKernel_f_V_0_2_q0;
        firstKernel_f_V_1_0_load_reg_1784 <= firstKernel_f_V_1_0_q0;
        firstKernel_f_V_1_2_load_reg_1794 <= firstKernel_f_V_1_2_q0;
        firstKernel_f_V_2_0_load_reg_1809 <= firstKernel_f_V_2_0_q0;
        firstKernel_f_V_2_1_load_reg_1799 <= firstKernel_f_V_2_1_q0;
        firstKernel_f_V_2_2_load_reg_1814 <= firstKernel_f_V_2_2_q0;
        firstKernel_f_V_3_1_load_reg_1804 <= firstKernel_f_V_3_1_q0;
        sext_ln1169_4_reg_1824 <= sext_ln1169_4_fu_747_p1;
        trunc_ln1169_3_reg_1840 <= trunc_ln1169_3_fu_771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (p_mid210_reg_1946 == 1'd1) & (icmp_ln184_reg_1861 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        firstKernel_f_V_3_0_load_reg_2129 <= firstKernel_f_V_3_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln197_1_reg_1976))) begin
        firstKernel_f_V_3_2_load_reg_2134 <= firstKernel_f_V_3_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln184_reg_1861_pp0_iter1_reg <= icmp_ln184_reg_1861;
        icmp_ln185_reg_1900_pp0_iter1_reg <= icmp_ln185_reg_1900;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_ln712_10_reg_2183 <= grp_fu_1557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln712_8_reg_2166 <= grp_fu_1543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        num_V_10_reg_2144 <= num_V_10_fu_1351_p3;
        num_V_10_reg_2144_pp0_iter2_reg <= num_V_10_reg_2144;
        xor_ln185_reg_2139 <= xor_ln185_fu_1341_p2;
        xor_ln185_reg_2139_pp0_iter2_reg <= xor_ln185_reg_2139;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (p_mid210_reg_1946 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        num_V_11_reg_2177 <= grp_fu_1549_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_mid210_reg_1946_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        num_V_13_reg_2193 <= num_V_13_fu_1381_p3;
        num_V_18_reg_2204 <= num_V_18_fu_1395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (p_mid210_reg_1946 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        num_V_14_reg_2155 <= grp_fu_1534_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        num_V_5_reg_2058 <= num_V_5_fu_1244_p3;
        sext_ln174_1_reg_2038 <= sext_ln174_1_fu_1220_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sext_ln174_reg_1986 <= sext_ln174_fu_1174_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (p_mid210_reg_1946 == 1'd1) & (icmp_ln184_reg_1861 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln1169_11_reg_2074 <= trunc_ln1169_11_fu_1261_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (p_mid210_reg_1946 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln197_1_reg_1976))) begin
        trunc_ln1169_13_reg_2124 <= trunc_ln1169_13_fu_1300_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1621 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'd0 == and_ln188_reg_1908))) begin
        trunc_ln1169_6_reg_1966 <= trunc_ln1169_6_fu_1148_p1;
    end
end

always @ (*) begin
    if (((icmp_ln176_reg_1621 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln176_reg_1621_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstBias_f_V_ce0 = 1'b1;
    end else begin
        firstBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_0_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_0_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_0_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_1_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_1_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_1_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_2_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_2_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_2_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_3_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_3_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        firstKernel_f_V_3_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address0 = zext_ln1169_23_fu_1236_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_r_address0 = zext_ln1169_18_fu_1190_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_r_address0 = zext_ln1169_14_fu_1140_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_r_address0 = zext_ln1169_21_fu_864_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_r_address0 = zext_ln1169_16_fu_766_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_r_address0 = zext_ln1169_12_fu_673_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address1 = zext_ln1169_22_fu_1232_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_r_address1 = zext_ln1169_17_fu_1181_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_r_address1 = zext_ln1169_13_fu_1130_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_r_address1 = zext_ln1169_20_fu_854_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_r_address1 = zext_ln1169_15_fu_756_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_r_address1 = zext_ln1169_11_fu_662_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_V_ce0 = 1'b1;
    end else begin
        tmp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_V_we0 = 1'b1;
    end else begin
        tmp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage3) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_10_fu_761_p2 = ($signed(empty_69_reg_1725) + $signed(sext_ln1169_4_fu_747_p1));

assign add_ln1169_11_fu_1177_p2 = ($signed(sub_ln1169_3_reg_1940) + $signed(sext_ln1169_4_reg_1824));

assign add_ln1169_12_fu_1186_p2 = ($signed(sub_ln1169_2_reg_1928) + $signed(sext_ln1169_4_reg_1824));

assign add_ln1169_13_fu_849_p2 = (sub_ln1169_1_reg_1731 + zext_ln1169_19_fu_845_p1);

assign add_ln1169_14_fu_859_p2 = (empty_69_reg_1725 + zext_ln1169_19_fu_845_p1);

assign add_ln1169_15_fu_1195_p2 = (sub_ln1169_3_reg_1940 + zext_ln1169_19_reg_1884);

assign add_ln1169_16_fu_1199_p2 = (sub_ln1169_2_reg_1928 + zext_ln1169_19_reg_1884);

assign add_ln1169_6_fu_667_p2 = (sub_ln1169_1_fu_636_p2 + zext_ln1169_9_fu_648_p1);

assign add_ln1169_7_fu_1125_p2 = (sub_ln1169_3_fu_1065_p2 + zext_ln1169_9_reg_1743);

assign add_ln1169_8_fu_1135_p2 = (sub_ln1169_2_fu_1010_p2 + zext_ln1169_9_reg_1743);

assign add_ln1169_9_fu_751_p2 = ($signed(sub_ln1169_1_reg_1731) + $signed(sext_ln1169_4_fu_747_p1));

assign add_ln1169_fu_656_p2 = (sub_ln1169_fu_596_p2 + zext_ln1169_10_fu_652_p1);

assign add_ln176_1_fu_464_p2 = (indvar_flatten63_fu_126 + 12'd1);

assign add_ln176_fu_479_p2 = (d_fu_122 + 4'd1);

assign add_ln184_fu_742_p2 = ($signed(j_mid2_reg_1718) + $signed(2'd3));

assign add_ln185_fu_840_p2 = (j_mid2_reg_1718 + 2'd1);

assign add_ln202_fu_690_p2 = (tmp_32_cast_fu_682_p3 + select_ln176_1_v_cast_fu_522_p1);

assign and_ln176_1_fu_546_p2 = (xor_ln176_fu_534_p2 & icmp_ln178_fu_540_p2);

assign and_ln176_fu_792_p2 = (xor_ln176_reg_1702 & cmp25_fu_775_p2);

assign and_ln185_1_fu_1346_p2 = (xor_ln185_fu_1341_p2 & cmp25_mid2_reg_1855);

assign and_ln185_fu_1323_p2 = (icmp_ln185_reg_1900 & cmp25_mid2_reg_1855);

assign and_ln188_fu_875_p2 = (sel_tmp2_mid2_fu_813_p3 & icmp_ln185_fu_869_p2);

assign and_ln193_1_fu_1444_p2 = (xor_ln185_reg_2139_pp0_iter2_reg & cmp112_mid2_reg_1934_pp0_iter1_reg);

assign and_ln193_fu_1425_p2 = (icmp_ln185_reg_1900_pp0_iter1_reg & cmp112_mid2_reg_1934_pp0_iter1_reg);

assign and_ln197_1_fu_1165_p2 = (cmp188_mid2_fu_1085_p3 & and_ln197_fu_1160_p2);

assign and_ln197_fu_1160_p2 = (sel_tmp12_mid2_fu_1092_p2 & icmp_ln185_reg_1900);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign cmp112_mid2_fu_1030_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? rev49_fu_1024_p2 : or_ln176_fu_960_p2);

assign cmp188_mid2_fu_1085_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? rev52_fu_1079_p2 : or_ln176_1_fu_972_p2);

assign cmp25_fu_775_p2 = ((i_6_reg_1614 != 8'd0) ? 1'b1 : 1'b0);

assign cmp25_mid1_fu_642_p2 = ((indvars_iv_next25_dup_fu_552_p2 != 8'd0) ? 1'b1 : 1'b0);

assign cmp25_mid2_fu_802_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? cmp25_mid1_reg_1737 : and_ln176_fu_792_p2);

assign empty_64_fu_452_p2 = ($signed(empty_fu_448_p1) + $signed(7'd127));

assign empty_65_fu_886_p2 = (i_6_reg_1614 + 8'd2);

assign empty_66_fu_924_p2 = (indvars_iv_next25_fu_905_p2 & empty_65_fu_886_p2);

assign empty_68_fu_558_p2 = (exitcond_flatten59_fu_485_p2 | and_ln176_1_fu_546_p2);

assign empty_69_fu_602_p1 = sub_ln1169_fu_596_p2[8:0];

assign empty_70_fu_606_p1 = indvars_iv_next25_dup_fu_552_p2[6:0];

assign empty_fu_448_p1 = i_fu_114[6:0];

assign exitcond_flatten59_fu_485_p2 = ((indvar_flatten_fu_118 == 10'd384) ? 1'b1 : 1'b0);

assign firstBias_f_V_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_0_0_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_0_1_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_0_2_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_1_0_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_1_1_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_1_2_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_2_0_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_2_1_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_2_2_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_3_0_address0 = zext_ln176_reg_1641;

assign firstKernel_f_V_3_1_address0 = zext_ln176_fu_507_p1;

assign firstKernel_f_V_3_2_address0 = zext_ln176_reg_1641;

assign grp_fu_1509_p2 = ($signed(sext_ln174_1_fu_1220_p1) + $signed(sext_ln712_4_fu_1223_p1));

assign grp_fu_1525_p2 = ($signed(sext_ln174_2_fu_1276_p1) + $signed(sext_ln712_8_fu_1280_p1));

assign grp_fu_1534_p2 = ((and_ln185_1_fu_1346_p2[0:0] == 1'b1) ? sext_ln174_2_reg_2099 : num_V_9_fu_1334_p3);

assign i_cast5_mid2_fu_572_p3 = ((and_ln176_1_fu_546_p2[0:0] == 1'b1) ? indvars_iv_next25_dup_fu_552_p2 : select_ln176_fu_491_p3);

assign icmp_ln176_fu_458_p2 = ((indvar_flatten63_fu_126 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_540_p2 = ((j_fu_110 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_820_p2 = ((j_mid2_reg_1718 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_869_p2 = ((add_ln185_fu_840_p2 != 2'd3) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_702_p3 = ((exitcond_flatten59_fu_485_p2[0:0] == 1'b1) ? 10'd1 : indvar_flatten_op_fu_696_p2);

assign indvar_flatten_op_fu_696_p2 = (indvar_flatten_fu_118 + 10'd1);

assign indvars_iv_next25_cast8_mid2_fu_1042_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? indvars_iv_next25_mid1_fu_1037_p2 : select_ln176_5_fu_965_p3);

assign indvars_iv_next25_dup_fu_552_p2 = (select_ln176_fu_491_p3 + 8'd1);

assign indvars_iv_next25_fu_905_p2 = (i_6_reg_1614 + 8'd1);

assign indvars_iv_next25_mid1_fu_1037_p2 = (select_ln176_reg_1635 + 8'd2);

assign j_mid2_fu_564_p3 = ((empty_68_fu_558_p2[0:0] == 1'b1) ? 2'd0 : j_fu_110);

assign num_V_10_fu_1351_p3 = ((and_ln185_1_fu_1346_p2[0:0] == 1'b1) ? sext_ln174_2_reg_2099 : num_V_9_fu_1334_p3);

assign num_V_12_fu_1376_p2 = ($signed(grp_fu_1563_p3) + $signed(sext_ln1169_2_fu_1373_p1));

assign num_V_13_fu_1381_p3 = ((icmp_ln184_reg_1861_pp0_iter1_reg[0:0] == 1'b1) ? num_V_12_fu_1376_p2 : num_V_11_reg_2177);

assign num_V_15_fu_1411_p2 = ($signed(grp_fu_1571_p3) + $signed(sext_ln1169_3_fu_1408_p1));

assign num_V_16_fu_1390_p2 = ($signed(sext_ln1169_1_fu_1370_p1) + $signed(num_V_14_reg_2155));

assign num_V_17_fu_1455_p3 = ((p_mid210_reg_1946_pp0_iter1_reg[0:0] == 1'b1) ? num_V_22_fu_1448_p3 : sext_ln174_6_fu_1405_p1);

assign num_V_18_fu_1395_p3 = ((icmp_ln184_reg_1861_pp0_iter1_reg[0:0] == 1'b1) ? num_V_16_fu_1390_p2 : num_V_14_reg_2155);

assign num_V_19_fu_1419_p2 = ($signed(sext_ln1169_3_fu_1408_p1) + $signed(sext_ln174_7_fu_1416_p1));

assign num_V_20_fu_1429_p3 = ((and_ln193_fu_1425_p2[0:0] == 1'b1) ? num_V_15_fu_1411_p2 : sext_ln174_7_fu_1416_p1);

assign num_V_21_fu_1437_p3 = ((and_ln197_1_reg_1976_pp0_iter1_reg[0:0] == 1'b1) ? num_V_19_fu_1419_p2 : num_V_20_fu_1429_p3);

assign num_V_22_fu_1448_p3 = ((and_ln193_1_fu_1444_p2[0:0] == 1'b1) ? num_V_13_reg_2193 : num_V_21_fu_1437_p3);

assign num_V_3_fu_1271_p3 = ((icmp_ln184_reg_1861[0:0] == 1'b1) ? grp_fu_1509_p3 : sext_ln174_1_reg_2038);

assign num_V_4_fu_1240_p2 = ($signed(grp_fu_1501_p2) + $signed(sext_ln174_reg_1986));

assign num_V_5_fu_1244_p3 = ((icmp_ln184_reg_1861[0:0] == 1'b1) ? num_V_4_fu_1240_p2 : sext_ln174_reg_1986);

assign num_V_7_fu_1313_p2 = ($signed(sext_ln712_7_fu_1310_p1) + $signed(sext_ln174_4_fu_1307_p1));

assign num_V_8_fu_1327_p3 = ((and_ln185_fu_1323_p2[0:0] == 1'b1) ? grp_fu_1525_p3 : sext_ln174_3_fu_1304_p1);

assign num_V_9_fu_1334_p3 = ((and_ln188_reg_1908[0:0] == 1'b1) ? sext_ln174_5_fu_1319_p1 : num_V_8_fu_1327_p3);

assign or_ln176_1_fu_972_p2 = (rev43_fu_918_p2 | exitcond_flatten59_reg_1625);

assign or_ln176_2_fu_797_p2 = (sel_tmp2_fu_780_p2 | exitcond_flatten59_reg_1625);

assign or_ln176_3_fu_977_p2 = (rev46_fu_938_p2 | exitcond_flatten59_reg_1625);

assign or_ln176_fu_960_p2 = (rev_fu_899_p2 | exitcond_flatten59_reg_1625);

assign p_cast6_mid2_fu_616_p3 = ((and_ln176_1_fu_546_p2[0:0] == 1'b1) ? p_mid1_fu_610_p2 : select_ln176_3_fu_526_p3);

assign p_cast7_mid2_fu_987_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? p_mid15_fu_982_p2 : select_ln176_4_fu_953_p3);

assign p_mid15_fu_982_p2 = (select_ln176_reg_1635 + 8'd3);

assign p_mid17_fu_1098_p2 = (p_mid15_fu_982_p2 & indvars_iv_next25_mid1_fu_1037_p2);

assign p_mid1_fu_610_p2 = ($signed(empty_70_fu_606_p1) + $signed(7'd127));

assign p_mid210_fu_1118_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? rev55_fu_1112_p2 : or_ln176_3_fu_977_p2);

assign p_shl3_cast_fu_1002_p3 = {{trunc_ln1169_fu_998_p1}, {2'd0}};

assign p_shl4_cast_fu_628_p3 = {{p_cast6_mid2_fu_616_p3}, {2'd0}};

assign p_shl_cast_fu_1057_p3 = {{trunc_ln1169_1_fu_1053_p1}, {2'd0}};

assign rev43_fu_918_p2 = (tmp_19_fu_910_p3 ^ 1'd1);

assign rev46_fu_938_p2 = (tmp_20_fu_930_p3 ^ 1'd1);

assign rev49_fu_1024_p2 = (tmp_22_fu_1016_p3 ^ 1'd1);

assign rev52_fu_1079_p2 = (tmp_23_fu_1071_p3 ^ 1'd1);

assign rev55_fu_1112_p2 = (tmp_24_fu_1104_p3 ^ 1'd1);

assign rev_fu_899_p2 = (tmp_fu_891_p3 ^ 1'd1);

assign sel_tmp12_mid2_fu_1092_p2 = (cmp112_mid2_fu_1030_p3 ^ 1'd1);

assign sel_tmp2_fu_780_p2 = (cmp25_fu_775_p2 ^ 1'd1);

assign sel_tmp2_mid1_fu_808_p2 = (cmp25_mid1_reg_1737 ^ 1'd1);

assign sel_tmp2_mid2_fu_813_p3 = ((and_ln176_1_reg_1707[0:0] == 1'b1) ? sel_tmp2_mid1_fu_808_p2 : or_ln176_2_fu_797_p2);

assign select_ln176_1_v_cast_fu_522_p1 = select_ln176_2_fu_499_p3;

assign select_ln176_2_fu_499_p3 = ((exitcond_flatten59_fu_485_p2[0:0] == 1'b1) ? add_ln176_fu_479_p2 : d_fu_122);

assign select_ln176_3_fu_526_p3 = ((exitcond_flatten59_fu_485_p2[0:0] == 1'b1) ? 7'd127 : empty_64_fu_452_p2);

assign select_ln176_4_fu_953_p3 = ((exitcond_flatten59_reg_1625[0:0] == 1'b1) ? 8'd2 : empty_65_fu_886_p2);

assign select_ln176_5_fu_965_p3 = ((exitcond_flatten59_reg_1625[0:0] == 1'b1) ? 8'd1 : indvars_iv_next25_fu_905_p2);

assign select_ln176_fu_491_p3 = ((exitcond_flatten59_fu_485_p2[0:0] == 1'b1) ? 8'd0 : i_fu_114);

assign sext_ln1169_1_fu_1370_p1 = mul_ln712_8_reg_2166;

assign sext_ln1169_2_fu_1373_p1 = mul_ln712_8_reg_2166;

assign sext_ln1169_3_fu_1408_p1 = mul_ln712_10_reg_2183;

assign sext_ln1169_4_fu_747_p1 = $signed(add_ln184_fu_742_p2);

assign sext_ln174_1_fu_1220_p1 = grp_fu_1492_p3;

assign sext_ln174_2_fu_1276_p1 = $signed(num_V_3_fu_1271_p3);

assign sext_ln174_3_fu_1304_p1 = num_V_5_reg_2058;

assign sext_ln174_4_fu_1307_p1 = num_V_5_reg_2058;

assign sext_ln174_5_fu_1319_p1 = $signed(num_V_7_fu_1313_p2);

assign sext_ln174_6_fu_1405_p1 = num_V_10_reg_2144_pp0_iter2_reg;

assign sext_ln174_7_fu_1416_p1 = $signed(num_V_18_reg_2204);

assign sext_ln174_fu_1174_p1 = grp_fu_1483_p3;

assign sext_ln712_4_fu_1223_p1 = grp_fu_1501_p2;

assign sext_ln712_7_fu_1310_p1 = mul_ln712_5_reg_2104;

assign sext_ln712_8_fu_1280_p1 = grp_fu_1518_p2;

assign sub_ln1169_1_fu_636_p2 = (p_shl4_cast_fu_628_p3 - zext_ln1169_6_fu_624_p1);

assign sub_ln1169_2_fu_1010_p2 = (p_shl3_cast_fu_1002_p3 - zext_ln1169_7_fu_994_p1);

assign sub_ln1169_3_fu_1065_p2 = (p_shl_cast_fu_1057_p3 - zext_ln1169_8_fu_1049_p1);

assign sub_ln1169_fu_596_p2 = (zext_ln1169_5_fu_592_p1 - zext_ln1169_fu_580_p1);

assign tmp_19_fu_910_p3 = indvars_iv_next25_fu_905_p2[32'd7];

assign tmp_20_fu_930_p3 = empty_66_fu_924_p2[32'd7];

assign tmp_21_fu_584_p3 = {{i_cast5_mid2_fu_572_p3}, {2'd0}};

assign tmp_22_fu_1016_p3 = p_mid15_fu_982_p2[32'd7];

assign tmp_23_fu_1071_p3 = indvars_iv_next25_mid1_fu_1037_p2[32'd7];

assign tmp_24_fu_1104_p3 = p_mid17_fu_1098_p2[32'd7];

assign tmp_25_fu_1466_p3 = num_V_17_fu_1455_p3[32'd32];

assign tmp_32_cast_fu_682_p3 = {{trunc_ln202_fu_678_p1}, {3'd0}};

assign tmp_V_address0 = zext_ln202_fu_1401_p1;

assign tmp_V_d0 = ((tmp_25_fu_1466_p3[0:0] == 1'b1) ? 32'd0 : trunc_ln174_fu_1462_p1);

assign tmp_fu_891_p3 = empty_65_fu_886_p2[32'd7];

assign trunc_ln1169_10_fu_1253_p1 = input_r_q1[11:0];

assign trunc_ln1169_11_fu_1261_p1 = input_r_q0[11:0];

assign trunc_ln1169_12_fu_1292_p1 = input_r_q1[11:0];

assign trunc_ln1169_13_fu_1300_p1 = input_r_q0[11:0];

assign trunc_ln1169_1_fu_1053_p1 = indvars_iv_next25_cast8_mid2_fu_1042_p3[6:0];

assign trunc_ln1169_2_fu_734_p1 = input_r_q1[11:0];

assign trunc_ln1169_3_fu_771_p1 = input_r_q0[11:0];

assign trunc_ln1169_4_fu_828_p1 = input_r_q1[11:0];

assign trunc_ln1169_5_fu_832_p1 = input_r_q0[11:0];

assign trunc_ln1169_6_fu_1148_p1 = input_r_q1[11:0];

assign trunc_ln1169_7_fu_1152_p1 = input_r_q0[11:0];

assign trunc_ln1169_8_fu_1206_p1 = input_r_q1[11:0];

assign trunc_ln1169_9_fu_1210_p1 = input_r_q0[11:0];

assign trunc_ln1169_fu_998_p1 = p_cast7_mid2_fu_987_p3[6:0];

assign trunc_ln174_fu_1462_p1 = num_V_17_fu_1455_p3[31:0];

assign trunc_ln202_fu_678_p1 = add_ln1169_fu_656_p2[8:0];

assign xor_ln176_fu_534_p2 = (exitcond_flatten59_fu_485_p2 ^ 1'd1);

assign xor_ln185_fu_1341_p2 = (icmp_ln185_reg_1900 ^ 1'd1);

assign zext_ln1169_10_fu_652_p1 = j_mid2_fu_564_p3;

assign zext_ln1169_11_fu_662_p1 = add_ln1169_fu_656_p2;

assign zext_ln1169_12_fu_673_p1 = add_ln1169_6_fu_667_p2;

assign zext_ln1169_13_fu_1130_p1 = add_ln1169_7_fu_1125_p2;

assign zext_ln1169_14_fu_1140_p1 = add_ln1169_8_fu_1135_p2;

assign zext_ln1169_15_fu_756_p1 = add_ln1169_9_fu_751_p2;

assign zext_ln1169_16_fu_766_p1 = add_ln1169_10_fu_761_p2;

assign zext_ln1169_17_fu_1181_p1 = add_ln1169_11_fu_1177_p2;

assign zext_ln1169_18_fu_1190_p1 = add_ln1169_12_fu_1186_p2;

assign zext_ln1169_19_fu_845_p1 = add_ln185_fu_840_p2;

assign zext_ln1169_20_fu_854_p1 = add_ln1169_13_fu_849_p2;

assign zext_ln1169_21_fu_864_p1 = add_ln1169_14_fu_859_p2;

assign zext_ln1169_22_fu_1232_p1 = add_ln1169_15_reg_2003;

assign zext_ln1169_23_fu_1236_p1 = add_ln1169_16_reg_2008;

assign zext_ln1169_5_fu_592_p1 = tmp_21_fu_584_p3;

assign zext_ln1169_6_fu_624_p1 = p_cast6_mid2_fu_616_p3;

assign zext_ln1169_7_fu_994_p1 = p_cast7_mid2_fu_987_p3;

assign zext_ln1169_8_fu_1049_p1 = indvars_iv_next25_cast8_mid2_fu_1042_p3;

assign zext_ln1169_9_fu_648_p1 = j_mid2_fu_564_p3;

assign zext_ln1169_fu_580_p1 = i_cast5_mid2_fu_572_p3;

assign zext_ln176_fu_507_p1 = select_ln176_2_fu_499_p3;

assign zext_ln202_fu_1401_p1 = add_ln202_reg_1759_pp0_iter2_reg;

always @ (posedge ap_clk) begin
    zext_ln176_reg_1641[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln1169_9_reg_1743[8:2] <= 7'b0000000;
    zext_ln1169_19_reg_1884[8:2] <= 7'b0000000;
end

endmodule //master_fix_convolution1_fix_Pipeline_VITIS_LOOP_176_1_VITIS_LOOP_177_2_VITIS_LOOP_178_3
