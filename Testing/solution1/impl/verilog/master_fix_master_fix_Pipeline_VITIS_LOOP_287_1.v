// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_master_fix_Pipeline_VITIS_LOOP_287_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln290,
        zext_ln290_1,
        zext_ln290_2,
        zext_ln290_3,
        zext_ln290_4,
        zext_ln290_5,
        zext_ln290_6,
        zext_ln290_7,
        zext_ln290_8,
        zext_ln290_9,
        zext_ln290_10,
        zext_ln290_11,
        zext_ln290_12,
        zext_ln290_13,
        zext_ln290_14,
        zext_ln287,
        den2_V_0_3_08_out,
        den2_V_0_3_08_out_ap_vld,
        den2_V_0_2_07_out,
        den2_V_0_2_07_out_ap_vld,
        den2_V_0_1_06_out,
        den2_V_0_1_06_out_ap_vld,
        den2_V_0_0_05_out,
        den2_V_0_0_05_out_ap_vld,
        grp_fu_1810_p_din0,
        grp_fu_1810_p_din1,
        grp_fu_1810_p_dout0,
        grp_fu_1810_p_ce,
        grp_fu_1814_p_din0,
        grp_fu_1814_p_din1,
        grp_fu_1814_p_dout0,
        grp_fu_1814_p_ce,
        grp_fu_1818_p_din0,
        grp_fu_1818_p_din1,
        grp_fu_1818_p_dout0,
        grp_fu_1818_p_ce,
        grp_fu_1822_p_din0,
        grp_fu_1822_p_din1,
        grp_fu_1822_p_dout0,
        grp_fu_1822_p_ce,
        grp_fu_1826_p_din0,
        grp_fu_1826_p_din1,
        grp_fu_1826_p_dout0,
        grp_fu_1826_p_ce,
        grp_fu_1830_p_din0,
        grp_fu_1830_p_din1,
        grp_fu_1830_p_dout0,
        grp_fu_1830_p_ce,
        grp_fu_1834_p_din0,
        grp_fu_1834_p_din1,
        grp_fu_1834_p_dout0,
        grp_fu_1834_p_ce,
        grp_fu_1838_p_din0,
        grp_fu_1838_p_din1,
        grp_fu_1838_p_dout0,
        grp_fu_1838_p_ce,
        grp_fu_1842_p_din0,
        grp_fu_1842_p_din1,
        grp_fu_1842_p_dout0,
        grp_fu_1842_p_ce,
        grp_fu_1846_p_din0,
        grp_fu_1846_p_din1,
        grp_fu_1846_p_dout0,
        grp_fu_1846_p_ce,
        grp_fu_1850_p_din0,
        grp_fu_1850_p_din1,
        grp_fu_1850_p_dout0,
        grp_fu_1850_p_ce,
        grp_fu_1854_p_din0,
        grp_fu_1854_p_din1,
        grp_fu_1854_p_dout0,
        grp_fu_1854_p_ce,
        grp_fu_1858_p_din0,
        grp_fu_1858_p_din1,
        grp_fu_1858_p_dout0,
        grp_fu_1858_p_ce,
        grp_fu_1862_p_din0,
        grp_fu_1862_p_din1,
        grp_fu_1862_p_dout0,
        grp_fu_1862_p_ce,
        grp_fu_1866_p_din0,
        grp_fu_1866_p_din1,
        grp_fu_1866_p_dout0,
        grp_fu_1866_p_ce,
        grp_fu_1870_p_din0,
        grp_fu_1870_p_din1,
        grp_fu_1870_p_dout0,
        grp_fu_1870_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [34:0] zext_ln290;
input  [34:0] zext_ln290_1;
input  [34:0] zext_ln290_2;
input  [34:0] zext_ln290_3;
input  [34:0] zext_ln290_4;
input  [34:0] zext_ln290_5;
input  [34:0] zext_ln290_6;
input  [34:0] zext_ln290_7;
input  [34:0] zext_ln290_8;
input  [34:0] zext_ln290_9;
input  [34:0] zext_ln290_10;
input  [34:0] zext_ln290_11;
input  [34:0] zext_ln290_12;
input  [34:0] zext_ln290_13;
input  [34:0] zext_ln290_14;
input  [34:0] zext_ln287;
output  [35:0] den2_V_0_3_08_out;
output   den2_V_0_3_08_out_ap_vld;
output  [35:0] den2_V_0_2_07_out;
output   den2_V_0_2_07_out_ap_vld;
output  [35:0] den2_V_0_1_06_out;
output   den2_V_0_1_06_out_ap_vld;
output  [35:0] den2_V_0_0_05_out;
output   den2_V_0_0_05_out_ap_vld;
output  [35:0] grp_fu_1810_p_din0;
output  [34:0] grp_fu_1810_p_din1;
input  [54:0] grp_fu_1810_p_dout0;
output   grp_fu_1810_p_ce;
output  [35:0] grp_fu_1814_p_din0;
output  [34:0] grp_fu_1814_p_din1;
input  [54:0] grp_fu_1814_p_dout0;
output   grp_fu_1814_p_ce;
output  [35:0] grp_fu_1818_p_din0;
output  [34:0] grp_fu_1818_p_din1;
input  [54:0] grp_fu_1818_p_dout0;
output   grp_fu_1818_p_ce;
output  [35:0] grp_fu_1822_p_din0;
output  [34:0] grp_fu_1822_p_din1;
input  [54:0] grp_fu_1822_p_dout0;
output   grp_fu_1822_p_ce;
output  [35:0] grp_fu_1826_p_din0;
output  [34:0] grp_fu_1826_p_din1;
input  [54:0] grp_fu_1826_p_dout0;
output   grp_fu_1826_p_ce;
output  [35:0] grp_fu_1830_p_din0;
output  [34:0] grp_fu_1830_p_din1;
input  [54:0] grp_fu_1830_p_dout0;
output   grp_fu_1830_p_ce;
output  [35:0] grp_fu_1834_p_din0;
output  [34:0] grp_fu_1834_p_din1;
input  [54:0] grp_fu_1834_p_dout0;
output   grp_fu_1834_p_ce;
output  [35:0] grp_fu_1838_p_din0;
output  [34:0] grp_fu_1838_p_din1;
input  [54:0] grp_fu_1838_p_dout0;
output   grp_fu_1838_p_ce;
output  [35:0] grp_fu_1842_p_din0;
output  [34:0] grp_fu_1842_p_din1;
input  [54:0] grp_fu_1842_p_dout0;
output   grp_fu_1842_p_ce;
output  [35:0] grp_fu_1846_p_din0;
output  [34:0] grp_fu_1846_p_din1;
input  [54:0] grp_fu_1846_p_dout0;
output   grp_fu_1846_p_ce;
output  [35:0] grp_fu_1850_p_din0;
output  [34:0] grp_fu_1850_p_din1;
input  [54:0] grp_fu_1850_p_dout0;
output   grp_fu_1850_p_ce;
output  [35:0] grp_fu_1854_p_din0;
output  [34:0] grp_fu_1854_p_din1;
input  [54:0] grp_fu_1854_p_dout0;
output   grp_fu_1854_p_ce;
output  [35:0] grp_fu_1858_p_din0;
output  [34:0] grp_fu_1858_p_din1;
input  [54:0] grp_fu_1858_p_dout0;
output   grp_fu_1858_p_ce;
output  [35:0] grp_fu_1862_p_din0;
output  [34:0] grp_fu_1862_p_din1;
input  [54:0] grp_fu_1862_p_dout0;
output   grp_fu_1862_p_ce;
output  [35:0] grp_fu_1866_p_din0;
output  [34:0] grp_fu_1866_p_din1;
input  [54:0] grp_fu_1866_p_dout0;
output   grp_fu_1866_p_ce;
output  [35:0] grp_fu_1870_p_din0;
output  [34:0] grp_fu_1870_p_din1;
input  [54:0] grp_fu_1870_p_dout0;
output   grp_fu_1870_p_ce;

reg ap_idle;
reg den2_V_0_3_08_out_ap_vld;
reg den2_V_0_2_07_out_ap_vld;
reg den2_V_0_1_06_out_ap_vld;
reg den2_V_0_0_05_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln287_fu_444_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [54:0] zext_ln287_cast_fu_372_p1;
reg   [54:0] zext_ln287_cast_reg_1987;
wire   [54:0] zext_ln290_14_cast_fu_376_p1;
reg   [54:0] zext_ln290_14_cast_reg_1992;
wire   [54:0] zext_ln290_13_cast_fu_380_p1;
reg   [54:0] zext_ln290_13_cast_reg_1997;
wire   [54:0] zext_ln290_12_cast_fu_384_p1;
reg   [54:0] zext_ln290_12_cast_reg_2002;
wire   [54:0] zext_ln290_11_cast_fu_388_p1;
reg   [54:0] zext_ln290_11_cast_reg_2007;
wire   [54:0] zext_ln290_10_cast_fu_392_p1;
reg   [54:0] zext_ln290_10_cast_reg_2012;
wire   [54:0] zext_ln290_9_cast_fu_396_p1;
reg   [54:0] zext_ln290_9_cast_reg_2017;
wire   [54:0] zext_ln290_8_cast_fu_400_p1;
reg   [54:0] zext_ln290_8_cast_reg_2022;
wire   [54:0] zext_ln290_7_cast_fu_404_p1;
reg   [54:0] zext_ln290_7_cast_reg_2027;
wire   [54:0] zext_ln290_6_cast_fu_408_p1;
reg   [54:0] zext_ln290_6_cast_reg_2032;
wire   [54:0] zext_ln290_5_cast_fu_412_p1;
reg   [54:0] zext_ln290_5_cast_reg_2037;
wire   [54:0] zext_ln290_4_cast_fu_416_p1;
reg   [54:0] zext_ln290_4_cast_reg_2042;
wire   [54:0] zext_ln290_3_cast_fu_420_p1;
reg   [54:0] zext_ln290_3_cast_reg_2047;
wire   [54:0] zext_ln290_2_cast_fu_424_p1;
reg   [54:0] zext_ln290_2_cast_reg_2052;
wire   [54:0] zext_ln290_1_cast_fu_428_p1;
reg   [54:0] zext_ln290_1_cast_reg_2057;
wire   [54:0] zext_ln290_cast_fu_432_p1;
reg   [54:0] zext_ln290_cast_reg_2062;
reg   [0:0] icmp_ln287_reg_2067;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter1_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter2_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter3_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter4_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter5_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter6_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter7_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter8_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter9_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter10_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter11_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter12_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter13_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter14_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter15_reg;
reg   [0:0] icmp_ln287_reg_2067_pp0_iter16_reg;
wire   [1:0] trunc_ln288_fu_456_p1;
reg   [1:0] trunc_ln288_reg_2071;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter1_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter2_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter3_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter4_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter5_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter6_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter7_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter8_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter9_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter10_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter11_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter12_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter13_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter14_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter15_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter16_reg;
reg   [1:0] trunc_ln288_reg_2071_pp0_iter17_reg;
wire   [35:0] tmp_4_fu_460_p6;
reg   [35:0] tmp_4_reg_2091;
wire  signed [54:0] sext_ln1171_fu_479_p1;
wire   [35:0] tmp_5_fu_487_p6;
reg   [35:0] tmp_5_reg_2101;
reg   [54:0] mul_ln1171_reg_2106;
wire   [17:0] trunc_ln727_fu_500_p1;
reg   [17:0] trunc_ln727_reg_2111;
wire  signed [54:0] sext_ln1171_1_fu_504_p1;
wire   [35:0] tmp_6_fu_512_p6;
reg   [35:0] tmp_6_reg_2121;
wire   [35:0] add_ln415_fu_598_p2;
reg   [35:0] add_ln415_reg_2126;
reg   [54:0] mul_ln1171_1_reg_2131;
wire   [17:0] trunc_ln727_1_fu_604_p1;
reg   [17:0] trunc_ln727_1_reg_2136;
wire  signed [54:0] sext_ln1171_2_fu_608_p1;
wire   [35:0] tmp_7_fu_616_p6;
reg   [35:0] tmp_7_reg_2146;
wire   [35:0] add_ln415_1_fu_688_p2;
reg   [35:0] add_ln415_1_reg_2151;
reg   [54:0] mul_ln1171_2_reg_2156;
wire   [17:0] trunc_ln727_2_fu_694_p1;
reg   [17:0] trunc_ln727_2_reg_2161;
wire  signed [54:0] sext_ln1171_3_fu_698_p1;
wire   [35:0] tmp_8_fu_706_p6;
reg   [35:0] tmp_8_reg_2171;
wire   [35:0] add_ln415_2_fu_778_p2;
reg   [35:0] add_ln415_2_reg_2176;
reg   [54:0] mul_ln1171_3_reg_2181;
wire   [17:0] trunc_ln727_3_fu_784_p1;
reg   [17:0] trunc_ln727_3_reg_2186;
wire  signed [54:0] sext_ln1171_4_fu_788_p1;
wire   [35:0] tmp_9_fu_796_p6;
reg   [35:0] tmp_9_reg_2196;
wire   [35:0] add_ln415_3_fu_868_p2;
reg   [35:0] add_ln415_3_reg_2201;
reg   [54:0] mul_ln1171_4_reg_2206;
wire   [17:0] trunc_ln727_4_fu_874_p1;
reg   [17:0] trunc_ln727_4_reg_2211;
wire  signed [54:0] sext_ln1171_5_fu_878_p1;
wire   [35:0] tmp_s_fu_886_p6;
reg   [35:0] tmp_s_reg_2221;
wire   [35:0] add_ln415_4_fu_958_p2;
reg   [35:0] add_ln415_4_reg_2226;
reg   [54:0] mul_ln1171_5_reg_2231;
wire   [17:0] trunc_ln727_5_fu_964_p1;
reg   [17:0] trunc_ln727_5_reg_2236;
wire  signed [54:0] sext_ln1171_6_fu_968_p1;
wire   [35:0] tmp_1_fu_976_p6;
reg   [35:0] tmp_1_reg_2246;
wire   [35:0] add_ln415_5_fu_1048_p2;
reg   [35:0] add_ln415_5_reg_2251;
reg   [54:0] mul_ln1171_6_reg_2256;
wire   [17:0] trunc_ln727_6_fu_1054_p1;
reg   [17:0] trunc_ln727_6_reg_2261;
wire  signed [54:0] sext_ln1171_7_fu_1058_p1;
wire   [35:0] tmp_2_fu_1066_p6;
reg   [35:0] tmp_2_reg_2271;
wire   [35:0] add_ln415_6_fu_1138_p2;
reg   [35:0] add_ln415_6_reg_2276;
reg   [54:0] mul_ln1171_7_reg_2281;
wire   [17:0] trunc_ln727_7_fu_1144_p1;
reg   [17:0] trunc_ln727_7_reg_2286;
wire  signed [54:0] sext_ln1171_8_fu_1148_p1;
wire   [35:0] tmp_3_fu_1156_p6;
reg   [35:0] tmp_3_reg_2296;
wire   [35:0] add_ln415_7_fu_1228_p2;
reg   [35:0] add_ln415_7_reg_2301;
reg   [54:0] mul_ln1171_8_reg_2306;
wire   [17:0] trunc_ln727_8_fu_1234_p1;
reg   [17:0] trunc_ln727_8_reg_2311;
wire  signed [54:0] sext_ln1171_9_fu_1238_p1;
wire   [35:0] tmp_10_fu_1246_p6;
reg   [35:0] tmp_10_reg_2321;
wire   [35:0] add_ln415_8_fu_1318_p2;
reg   [35:0] add_ln415_8_reg_2326;
reg   [54:0] mul_ln1171_9_reg_2331;
wire   [17:0] trunc_ln727_9_fu_1324_p1;
reg   [17:0] trunc_ln727_9_reg_2336;
wire  signed [54:0] sext_ln1171_10_fu_1328_p1;
wire   [35:0] tmp_11_fu_1336_p6;
reg   [35:0] tmp_11_reg_2346;
wire   [35:0] add_ln415_9_fu_1408_p2;
reg   [35:0] add_ln415_9_reg_2351;
reg   [54:0] mul_ln1171_10_reg_2356;
wire   [17:0] trunc_ln727_10_fu_1414_p1;
reg   [17:0] trunc_ln727_10_reg_2361;
wire  signed [54:0] sext_ln1171_11_fu_1418_p1;
wire   [35:0] tmp_12_fu_1426_p6;
reg   [35:0] tmp_12_reg_2371;
wire   [35:0] add_ln415_10_fu_1498_p2;
reg   [35:0] add_ln415_10_reg_2376;
reg   [54:0] mul_ln1171_11_reg_2381;
wire   [17:0] trunc_ln727_11_fu_1504_p1;
reg   [17:0] trunc_ln727_11_reg_2386;
wire  signed [54:0] sext_ln1171_12_fu_1508_p1;
wire   [35:0] tmp_13_fu_1516_p6;
reg   [35:0] tmp_13_reg_2396;
wire   [35:0] add_ln415_11_fu_1588_p2;
reg   [35:0] add_ln415_11_reg_2401;
reg   [54:0] mul_ln1171_12_reg_2406;
wire   [17:0] trunc_ln727_12_fu_1594_p1;
reg   [17:0] trunc_ln727_12_reg_2411;
wire  signed [54:0] sext_ln1171_13_fu_1598_p1;
wire   [35:0] tmp_14_fu_1606_p6;
reg   [35:0] tmp_14_reg_2421;
wire   [35:0] add_ln415_12_fu_1678_p2;
reg   [35:0] add_ln415_12_reg_2426;
reg   [54:0] mul_ln1171_13_reg_2431;
wire   [17:0] trunc_ln727_13_fu_1684_p1;
reg   [17:0] trunc_ln727_13_reg_2436;
wire  signed [54:0] sext_ln1171_14_fu_1688_p1;
wire   [35:0] tmp_15_fu_1696_p6;
reg   [35:0] tmp_15_reg_2446;
wire   [35:0] add_ln415_13_fu_1768_p2;
reg   [35:0] add_ln415_13_reg_2451;
reg   [54:0] mul_ln1171_14_reg_2456;
wire   [17:0] trunc_ln727_14_fu_1774_p1;
reg   [17:0] trunc_ln727_14_reg_2461;
wire  signed [54:0] sext_ln1171_15_fu_1778_p1;
wire   [35:0] add_ln415_14_fu_1845_p2;
reg   [35:0] add_ln415_14_reg_2471;
reg   [54:0] mul_ln1171_15_reg_2476;
wire   [17:0] trunc_ln727_15_fu_1851_p1;
reg   [17:0] trunc_ln727_15_reg_2481;
reg   [2:0] d_fu_228;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_d_1;
wire    ap_block_pp0_stage0;
wire   [2:0] add_ln287_fu_450_p2;
reg   [35:0] den2_V_0_1_fu_232;
wire   [35:0] den2_V_0_1_5_fu_1914_p2;
reg   [35:0] den2_V_0_1_1_fu_236;
reg   [35:0] den2_V_0_1_2_fu_240;
reg   [35:0] den2_V_0_1_3_fu_244;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] tmp_4_fu_460_p5;
wire   [35:0] num_V_fu_525_p6;
wire   [54:0] shl_ln_fu_538_p3;
wire   [54:0] add_ln1245_fu_546_p2;
wire   [0:0] tmp_fu_561_p3;
wire   [0:0] icmp_ln727_fu_577_p2;
wire   [0:0] or_ln412_fu_582_p2;
wire   [0:0] tmp_20_fu_569_p3;
wire   [0:0] and_ln412_fu_588_p2;
wire   [35:0] trunc_ln5_fu_551_p4;
wire   [35:0] zext_ln415_fu_594_p1;
wire   [54:0] shl_ln737_1_fu_629_p3;
wire   [54:0] add_ln1245_1_fu_636_p2;
wire   [0:0] tmp_21_fu_651_p3;
wire   [0:0] icmp_ln727_1_fu_667_p2;
wire   [0:0] or_ln412_1_fu_672_p2;
wire   [0:0] tmp_22_fu_659_p3;
wire   [0:0] and_ln412_1_fu_678_p2;
wire   [35:0] trunc_ln717_1_fu_641_p4;
wire   [35:0] zext_ln415_1_fu_684_p1;
wire   [54:0] shl_ln737_2_fu_719_p3;
wire   [54:0] add_ln1245_2_fu_726_p2;
wire   [0:0] tmp_23_fu_741_p3;
wire   [0:0] icmp_ln727_2_fu_757_p2;
wire   [0:0] or_ln412_2_fu_762_p2;
wire   [0:0] tmp_24_fu_749_p3;
wire   [0:0] and_ln412_2_fu_768_p2;
wire   [35:0] trunc_ln717_2_fu_731_p4;
wire   [35:0] zext_ln415_2_fu_774_p1;
wire   [54:0] shl_ln737_3_fu_809_p3;
wire   [54:0] add_ln1245_3_fu_816_p2;
wire   [0:0] tmp_25_fu_831_p3;
wire   [0:0] icmp_ln727_3_fu_847_p2;
wire   [0:0] or_ln412_3_fu_852_p2;
wire   [0:0] tmp_26_fu_839_p3;
wire   [0:0] and_ln412_3_fu_858_p2;
wire   [35:0] trunc_ln717_3_fu_821_p4;
wire   [35:0] zext_ln415_3_fu_864_p1;
wire   [54:0] shl_ln737_4_fu_899_p3;
wire   [54:0] add_ln1245_4_fu_906_p2;
wire   [0:0] tmp_27_fu_921_p3;
wire   [0:0] icmp_ln727_4_fu_937_p2;
wire   [0:0] or_ln412_4_fu_942_p2;
wire   [0:0] tmp_28_fu_929_p3;
wire   [0:0] and_ln412_4_fu_948_p2;
wire   [35:0] trunc_ln717_4_fu_911_p4;
wire   [35:0] zext_ln415_4_fu_954_p1;
wire   [54:0] shl_ln737_5_fu_989_p3;
wire   [54:0] add_ln1245_5_fu_996_p2;
wire   [0:0] tmp_29_fu_1011_p3;
wire   [0:0] icmp_ln727_5_fu_1027_p2;
wire   [0:0] or_ln412_5_fu_1032_p2;
wire   [0:0] tmp_30_fu_1019_p3;
wire   [0:0] and_ln412_5_fu_1038_p2;
wire   [35:0] trunc_ln717_5_fu_1001_p4;
wire   [35:0] zext_ln415_5_fu_1044_p1;
wire   [54:0] shl_ln737_6_fu_1079_p3;
wire   [54:0] add_ln1245_6_fu_1086_p2;
wire   [0:0] tmp_31_fu_1101_p3;
wire   [0:0] icmp_ln727_6_fu_1117_p2;
wire   [0:0] or_ln412_6_fu_1122_p2;
wire   [0:0] tmp_32_fu_1109_p3;
wire   [0:0] and_ln412_6_fu_1128_p2;
wire   [35:0] trunc_ln717_6_fu_1091_p4;
wire   [35:0] zext_ln415_6_fu_1134_p1;
wire   [54:0] shl_ln737_7_fu_1169_p3;
wire   [54:0] add_ln1245_7_fu_1176_p2;
wire   [0:0] tmp_33_fu_1191_p3;
wire   [0:0] icmp_ln727_7_fu_1207_p2;
wire   [0:0] or_ln412_7_fu_1212_p2;
wire   [0:0] tmp_34_fu_1199_p3;
wire   [0:0] and_ln412_7_fu_1218_p2;
wire   [35:0] trunc_ln717_7_fu_1181_p4;
wire   [35:0] zext_ln415_7_fu_1224_p1;
wire   [54:0] shl_ln737_8_fu_1259_p3;
wire   [54:0] add_ln1245_8_fu_1266_p2;
wire   [0:0] tmp_35_fu_1281_p3;
wire   [0:0] icmp_ln727_8_fu_1297_p2;
wire   [0:0] or_ln412_8_fu_1302_p2;
wire   [0:0] tmp_36_fu_1289_p3;
wire   [0:0] and_ln412_8_fu_1308_p2;
wire   [35:0] trunc_ln717_8_fu_1271_p4;
wire   [35:0] zext_ln415_8_fu_1314_p1;
wire   [54:0] shl_ln737_9_fu_1349_p3;
wire   [54:0] add_ln1245_9_fu_1356_p2;
wire   [0:0] tmp_37_fu_1371_p3;
wire   [0:0] icmp_ln727_9_fu_1387_p2;
wire   [0:0] or_ln412_9_fu_1392_p2;
wire   [0:0] tmp_38_fu_1379_p3;
wire   [0:0] and_ln412_9_fu_1398_p2;
wire   [35:0] trunc_ln717_9_fu_1361_p4;
wire   [35:0] zext_ln415_9_fu_1404_p1;
wire   [54:0] shl_ln737_s_fu_1439_p3;
wire   [54:0] add_ln1245_10_fu_1446_p2;
wire   [0:0] tmp_39_fu_1461_p3;
wire   [0:0] icmp_ln727_10_fu_1477_p2;
wire   [0:0] or_ln412_10_fu_1482_p2;
wire   [0:0] tmp_40_fu_1469_p3;
wire   [0:0] and_ln412_10_fu_1488_p2;
wire   [35:0] trunc_ln717_s_fu_1451_p4;
wire   [35:0] zext_ln415_10_fu_1494_p1;
wire   [54:0] shl_ln737_10_fu_1529_p3;
wire   [54:0] add_ln1245_11_fu_1536_p2;
wire   [0:0] tmp_41_fu_1551_p3;
wire   [0:0] icmp_ln727_11_fu_1567_p2;
wire   [0:0] or_ln412_11_fu_1572_p2;
wire   [0:0] tmp_42_fu_1559_p3;
wire   [0:0] and_ln412_11_fu_1578_p2;
wire   [35:0] trunc_ln717_10_fu_1541_p4;
wire   [35:0] zext_ln415_11_fu_1584_p1;
wire   [54:0] shl_ln737_11_fu_1619_p3;
wire   [54:0] add_ln1245_12_fu_1626_p2;
wire   [0:0] tmp_43_fu_1641_p3;
wire   [0:0] icmp_ln727_12_fu_1657_p2;
wire   [0:0] or_ln412_12_fu_1662_p2;
wire   [0:0] tmp_44_fu_1649_p3;
wire   [0:0] and_ln412_12_fu_1668_p2;
wire   [35:0] trunc_ln717_11_fu_1631_p4;
wire   [35:0] zext_ln415_12_fu_1674_p1;
wire   [54:0] shl_ln737_12_fu_1709_p3;
wire   [54:0] add_ln1245_13_fu_1716_p2;
wire   [0:0] tmp_45_fu_1731_p3;
wire   [0:0] icmp_ln727_13_fu_1747_p2;
wire   [0:0] or_ln412_13_fu_1752_p2;
wire   [0:0] tmp_46_fu_1739_p3;
wire   [0:0] and_ln412_13_fu_1758_p2;
wire   [35:0] trunc_ln717_12_fu_1721_p4;
wire   [35:0] zext_ln415_13_fu_1764_p1;
wire   [54:0] shl_ln737_13_fu_1786_p3;
wire   [54:0] add_ln1245_14_fu_1793_p2;
wire   [0:0] tmp_47_fu_1808_p3;
wire   [0:0] icmp_ln727_14_fu_1824_p2;
wire   [0:0] or_ln412_14_fu_1829_p2;
wire   [0:0] tmp_48_fu_1816_p3;
wire   [0:0] and_ln412_14_fu_1835_p2;
wire   [35:0] trunc_ln717_13_fu_1798_p4;
wire   [35:0] zext_ln415_14_fu_1841_p1;
wire   [54:0] shl_ln737_14_fu_1855_p3;
wire   [54:0] add_ln1245_15_fu_1862_p2;
wire   [0:0] tmp_49_fu_1877_p3;
wire   [0:0] icmp_ln727_15_fu_1893_p2;
wire   [0:0] or_ln412_15_fu_1898_p2;
wire   [0:0] tmp_50_fu_1885_p3;
wire   [0:0] and_ln412_15_fu_1904_p2;
wire   [35:0] trunc_ln717_14_fu_1867_p4;
wire   [35:0] zext_ln415_15_fu_1910_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U991(
    .din0(36'd68719335055),
    .din1(36'd68719325256),
    .din2(36'd68719351469),
    .din3(36'd68719364146),
    .din4(tmp_4_fu_460_p5),
    .dout(tmp_4_fu_460_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U993(
    .din0(36'd174627),
    .din1(36'd68719280653),
    .din2(36'd68719341658),
    .din3(36'd29738),
    .din4(trunc_ln288_reg_2071),
    .dout(tmp_5_fu_487_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U995(
    .din0(36'd68719395091),
    .din1(36'd68719370122),
    .din2(36'd68719367899),
    .din3(36'd68719378022),
    .din4(trunc_ln288_reg_2071_pp0_iter1_reg),
    .dout(tmp_6_fu_512_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U996(
    .din0(36'd68718728804),
    .din1(36'd571519),
    .din2(36'd68718843845),
    .din3(36'd68719379821),
    .din4(trunc_ln288_reg_2071_pp0_iter2_reg),
    .dout(num_V_fu_525_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U998(
    .din0(36'd110708),
    .din1(36'd122146),
    .din2(36'd100027),
    .din3(36'd109525),
    .din4(trunc_ln288_reg_2071_pp0_iter2_reg),
    .dout(tmp_7_fu_616_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1000(
    .din0(36'd167574),
    .din1(36'd132848),
    .din2(36'd128620),
    .din3(36'd137057),
    .din4(trunc_ln288_reg_2071_pp0_iter3_reg),
    .dout(tmp_8_fu_706_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1002(
    .din0(36'd25837),
    .din1(36'd68719476481),
    .din2(36'd22337),
    .din3(36'd33466),
    .din4(trunc_ln288_reg_2071_pp0_iter4_reg),
    .dout(tmp_9_fu_796_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1004(
    .din0(36'd68719468788),
    .din1(36'd68719317836),
    .din2(36'd60521),
    .din3(36'd239361),
    .din4(trunc_ln288_reg_2071_pp0_iter5_reg),
    .dout(tmp_s_fu_886_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1006(
    .din0(36'd68719387351),
    .din1(36'd68719378713),
    .din2(36'd68719397147),
    .din3(36'd68719389800),
    .din4(trunc_ln288_reg_2071_pp0_iter6_reg),
    .dout(tmp_1_fu_976_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1008(
    .din0(36'd68719354435),
    .din1(36'd68719309392),
    .din2(36'd68719308670),
    .din3(36'd68719310407),
    .din4(trunc_ln288_reg_2071_pp0_iter7_reg),
    .dout(tmp_2_fu_1066_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1010(
    .din0(36'd68719313760),
    .din1(36'd68719333075),
    .din2(36'd68719440609),
    .din3(36'd74901),
    .din4(trunc_ln288_reg_2071_pp0_iter8_reg),
    .dout(tmp_3_fu_1156_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1012(
    .din0(36'd49188),
    .din1(36'd40999),
    .din2(36'd63703),
    .din3(36'd52185),
    .din4(trunc_ln288_reg_2071_pp0_iter9_reg),
    .dout(tmp_10_fu_1246_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1014(
    .din0(36'd7366),
    .din1(36'd193555),
    .din2(36'd180751),
    .din3(36'd217179),
    .din4(trunc_ln288_reg_2071_pp0_iter10_reg),
    .dout(tmp_11_fu_1336_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1016(
    .din0(36'd68719336478),
    .din1(36'd68719353732),
    .din2(36'd68719332761),
    .din3(36'd68719339868),
    .din4(trunc_ln288_reg_2071_pp0_iter11_reg),
    .dout(tmp_12_fu_1426_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1018(
    .din0(36'd68719398386),
    .din1(36'd68719357000),
    .din2(36'd68719375805),
    .din3(36'd68719425484),
    .din4(trunc_ln288_reg_2071_pp0_iter12_reg),
    .dout(tmp_13_fu_1516_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1020(
    .din0(36'd68719293139),
    .din1(36'd68719320317),
    .din2(36'd68719343598),
    .din3(36'd68719300599),
    .din4(trunc_ln288_reg_2071_pp0_iter13_reg),
    .dout(tmp_14_fu_1606_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1022(
    .din0(36'd145266),
    .din1(36'd131943),
    .din2(36'd140157),
    .din3(36'd161877),
    .din4(trunc_ln288_reg_2071_pp0_iter14_reg),
    .dout(tmp_15_fu_1696_p6)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln287_fu_444_p2 == 1'd0))) begin
            d_fu_228 <= add_ln287_fu_450_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            d_fu_228 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln415_10_reg_2376 <= add_ln415_10_fu_1498_p2;
        add_ln415_11_reg_2401 <= add_ln415_11_fu_1588_p2;
        add_ln415_12_reg_2426 <= add_ln415_12_fu_1678_p2;
        add_ln415_13_reg_2451 <= add_ln415_13_fu_1768_p2;
        add_ln415_14_reg_2471 <= add_ln415_14_fu_1845_p2;
        add_ln415_1_reg_2151 <= add_ln415_1_fu_688_p2;
        add_ln415_2_reg_2176 <= add_ln415_2_fu_778_p2;
        add_ln415_3_reg_2201 <= add_ln415_3_fu_868_p2;
        add_ln415_4_reg_2226 <= add_ln415_4_fu_958_p2;
        add_ln415_5_reg_2251 <= add_ln415_5_fu_1048_p2;
        add_ln415_6_reg_2276 <= add_ln415_6_fu_1138_p2;
        add_ln415_7_reg_2301 <= add_ln415_7_fu_1228_p2;
        add_ln415_8_reg_2326 <= add_ln415_8_fu_1318_p2;
        add_ln415_9_reg_2351 <= add_ln415_9_fu_1408_p2;
        add_ln415_reg_2126 <= add_ln415_fu_598_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln287_reg_2067_pp0_iter10_reg <= icmp_ln287_reg_2067_pp0_iter9_reg;
        icmp_ln287_reg_2067_pp0_iter11_reg <= icmp_ln287_reg_2067_pp0_iter10_reg;
        icmp_ln287_reg_2067_pp0_iter12_reg <= icmp_ln287_reg_2067_pp0_iter11_reg;
        icmp_ln287_reg_2067_pp0_iter13_reg <= icmp_ln287_reg_2067_pp0_iter12_reg;
        icmp_ln287_reg_2067_pp0_iter14_reg <= icmp_ln287_reg_2067_pp0_iter13_reg;
        icmp_ln287_reg_2067_pp0_iter15_reg <= icmp_ln287_reg_2067_pp0_iter14_reg;
        icmp_ln287_reg_2067_pp0_iter16_reg <= icmp_ln287_reg_2067_pp0_iter15_reg;
        icmp_ln287_reg_2067_pp0_iter2_reg <= icmp_ln287_reg_2067_pp0_iter1_reg;
        icmp_ln287_reg_2067_pp0_iter3_reg <= icmp_ln287_reg_2067_pp0_iter2_reg;
        icmp_ln287_reg_2067_pp0_iter4_reg <= icmp_ln287_reg_2067_pp0_iter3_reg;
        icmp_ln287_reg_2067_pp0_iter5_reg <= icmp_ln287_reg_2067_pp0_iter4_reg;
        icmp_ln287_reg_2067_pp0_iter6_reg <= icmp_ln287_reg_2067_pp0_iter5_reg;
        icmp_ln287_reg_2067_pp0_iter7_reg <= icmp_ln287_reg_2067_pp0_iter6_reg;
        icmp_ln287_reg_2067_pp0_iter8_reg <= icmp_ln287_reg_2067_pp0_iter7_reg;
        icmp_ln287_reg_2067_pp0_iter9_reg <= icmp_ln287_reg_2067_pp0_iter8_reg;
        mul_ln1171_10_reg_2356 <= grp_fu_1850_p_dout0;
        mul_ln1171_11_reg_2381 <= grp_fu_1854_p_dout0;
        mul_ln1171_12_reg_2406 <= grp_fu_1858_p_dout0;
        mul_ln1171_13_reg_2431 <= grp_fu_1862_p_dout0;
        mul_ln1171_14_reg_2456 <= grp_fu_1866_p_dout0;
        mul_ln1171_15_reg_2476 <= grp_fu_1870_p_dout0;
        mul_ln1171_1_reg_2131 <= grp_fu_1814_p_dout0;
        mul_ln1171_2_reg_2156 <= grp_fu_1818_p_dout0;
        mul_ln1171_3_reg_2181 <= grp_fu_1822_p_dout0;
        mul_ln1171_4_reg_2206 <= grp_fu_1826_p_dout0;
        mul_ln1171_5_reg_2231 <= grp_fu_1830_p_dout0;
        mul_ln1171_6_reg_2256 <= grp_fu_1834_p_dout0;
        mul_ln1171_7_reg_2281 <= grp_fu_1838_p_dout0;
        mul_ln1171_8_reg_2306 <= grp_fu_1842_p_dout0;
        mul_ln1171_9_reg_2331 <= grp_fu_1846_p_dout0;
        mul_ln1171_reg_2106 <= grp_fu_1810_p_dout0;
        tmp_10_reg_2321 <= tmp_10_fu_1246_p6;
        tmp_11_reg_2346 <= tmp_11_fu_1336_p6;
        tmp_12_reg_2371 <= tmp_12_fu_1426_p6;
        tmp_13_reg_2396 <= tmp_13_fu_1516_p6;
        tmp_14_reg_2421 <= tmp_14_fu_1606_p6;
        tmp_15_reg_2446 <= tmp_15_fu_1696_p6;
        tmp_1_reg_2246 <= tmp_1_fu_976_p6;
        tmp_2_reg_2271 <= tmp_2_fu_1066_p6;
        tmp_3_reg_2296 <= tmp_3_fu_1156_p6;
        tmp_6_reg_2121 <= tmp_6_fu_512_p6;
        tmp_7_reg_2146 <= tmp_7_fu_616_p6;
        tmp_8_reg_2171 <= tmp_8_fu_706_p6;
        tmp_9_reg_2196 <= tmp_9_fu_796_p6;
        tmp_s_reg_2221 <= tmp_s_fu_886_p6;
        trunc_ln288_reg_2071_pp0_iter10_reg <= trunc_ln288_reg_2071_pp0_iter9_reg;
        trunc_ln288_reg_2071_pp0_iter11_reg <= trunc_ln288_reg_2071_pp0_iter10_reg;
        trunc_ln288_reg_2071_pp0_iter12_reg <= trunc_ln288_reg_2071_pp0_iter11_reg;
        trunc_ln288_reg_2071_pp0_iter13_reg <= trunc_ln288_reg_2071_pp0_iter12_reg;
        trunc_ln288_reg_2071_pp0_iter14_reg <= trunc_ln288_reg_2071_pp0_iter13_reg;
        trunc_ln288_reg_2071_pp0_iter15_reg <= trunc_ln288_reg_2071_pp0_iter14_reg;
        trunc_ln288_reg_2071_pp0_iter16_reg <= trunc_ln288_reg_2071_pp0_iter15_reg;
        trunc_ln288_reg_2071_pp0_iter17_reg <= trunc_ln288_reg_2071_pp0_iter16_reg;
        trunc_ln288_reg_2071_pp0_iter2_reg <= trunc_ln288_reg_2071_pp0_iter1_reg;
        trunc_ln288_reg_2071_pp0_iter3_reg <= trunc_ln288_reg_2071_pp0_iter2_reg;
        trunc_ln288_reg_2071_pp0_iter4_reg <= trunc_ln288_reg_2071_pp0_iter3_reg;
        trunc_ln288_reg_2071_pp0_iter5_reg <= trunc_ln288_reg_2071_pp0_iter4_reg;
        trunc_ln288_reg_2071_pp0_iter6_reg <= trunc_ln288_reg_2071_pp0_iter5_reg;
        trunc_ln288_reg_2071_pp0_iter7_reg <= trunc_ln288_reg_2071_pp0_iter6_reg;
        trunc_ln288_reg_2071_pp0_iter8_reg <= trunc_ln288_reg_2071_pp0_iter7_reg;
        trunc_ln288_reg_2071_pp0_iter9_reg <= trunc_ln288_reg_2071_pp0_iter8_reg;
        trunc_ln727_10_reg_2361 <= trunc_ln727_10_fu_1414_p1;
        trunc_ln727_11_reg_2386 <= trunc_ln727_11_fu_1504_p1;
        trunc_ln727_12_reg_2411 <= trunc_ln727_12_fu_1594_p1;
        trunc_ln727_13_reg_2436 <= trunc_ln727_13_fu_1684_p1;
        trunc_ln727_14_reg_2461 <= trunc_ln727_14_fu_1774_p1;
        trunc_ln727_15_reg_2481 <= trunc_ln727_15_fu_1851_p1;
        trunc_ln727_1_reg_2136 <= trunc_ln727_1_fu_604_p1;
        trunc_ln727_2_reg_2161 <= trunc_ln727_2_fu_694_p1;
        trunc_ln727_3_reg_2186 <= trunc_ln727_3_fu_784_p1;
        trunc_ln727_4_reg_2211 <= trunc_ln727_4_fu_874_p1;
        trunc_ln727_5_reg_2236 <= trunc_ln727_5_fu_964_p1;
        trunc_ln727_6_reg_2261 <= trunc_ln727_6_fu_1054_p1;
        trunc_ln727_7_reg_2286 <= trunc_ln727_7_fu_1144_p1;
        trunc_ln727_8_reg_2311 <= trunc_ln727_8_fu_1234_p1;
        trunc_ln727_9_reg_2336 <= trunc_ln727_9_fu_1324_p1;
        trunc_ln727_reg_2111 <= trunc_ln727_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln287_reg_2067 <= icmp_ln287_fu_444_p2;
        icmp_ln287_reg_2067_pp0_iter1_reg <= icmp_ln287_reg_2067;
        tmp_5_reg_2101 <= tmp_5_fu_487_p6;
        trunc_ln288_reg_2071_pp0_iter1_reg <= trunc_ln288_reg_2071;
        zext_ln287_cast_reg_1987[34 : 0] <= zext_ln287_cast_fu_372_p1[34 : 0];
        zext_ln290_10_cast_reg_2012[34 : 0] <= zext_ln290_10_cast_fu_392_p1[34 : 0];
        zext_ln290_11_cast_reg_2007[34 : 0] <= zext_ln290_11_cast_fu_388_p1[34 : 0];
        zext_ln290_12_cast_reg_2002[34 : 0] <= zext_ln290_12_cast_fu_384_p1[34 : 0];
        zext_ln290_13_cast_reg_1997[34 : 0] <= zext_ln290_13_cast_fu_380_p1[34 : 0];
        zext_ln290_14_cast_reg_1992[34 : 0] <= zext_ln290_14_cast_fu_376_p1[34 : 0];
        zext_ln290_1_cast_reg_2057[34 : 0] <= zext_ln290_1_cast_fu_428_p1[34 : 0];
        zext_ln290_2_cast_reg_2052[34 : 0] <= zext_ln290_2_cast_fu_424_p1[34 : 0];
        zext_ln290_3_cast_reg_2047[34 : 0] <= zext_ln290_3_cast_fu_420_p1[34 : 0];
        zext_ln290_4_cast_reg_2042[34 : 0] <= zext_ln290_4_cast_fu_416_p1[34 : 0];
        zext_ln290_5_cast_reg_2037[34 : 0] <= zext_ln290_5_cast_fu_412_p1[34 : 0];
        zext_ln290_6_cast_reg_2032[34 : 0] <= zext_ln290_6_cast_fu_408_p1[34 : 0];
        zext_ln290_7_cast_reg_2027[34 : 0] <= zext_ln290_7_cast_fu_404_p1[34 : 0];
        zext_ln290_8_cast_reg_2022[34 : 0] <= zext_ln290_8_cast_fu_400_p1[34 : 0];
        zext_ln290_9_cast_reg_2017[34 : 0] <= zext_ln290_9_cast_fu_396_p1[34 : 0];
        zext_ln290_cast_reg_2062[34 : 0] <= zext_ln290_cast_fu_432_p1[34 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln288_reg_2071_pp0_iter17_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_1_1_fu_236 <= den2_V_0_1_5_fu_1914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln288_reg_2071_pp0_iter17_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_1_2_fu_240 <= den2_V_0_1_5_fu_1914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln288_reg_2071_pp0_iter17_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_1_3_fu_244 <= den2_V_0_1_5_fu_1914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln288_reg_2071_pp0_iter17_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_1_fu_232 <= den2_V_0_1_5_fu_1914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln287_fu_444_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_2091 <= tmp_4_fu_460_p6;
        trunc_ln288_reg_2071 <= trunc_ln288_fu_456_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln287_fu_444_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_d_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_d_1 = d_fu_228;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_2067_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_0_05_out_ap_vld = 1'b1;
    end else begin
        den2_V_0_0_05_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_2067_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_1_06_out_ap_vld = 1'b1;
    end else begin
        den2_V_0_1_06_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_2067_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_2_07_out_ap_vld = 1'b1;
    end else begin
        den2_V_0_2_07_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln287_reg_2067_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        den2_V_0_3_08_out_ap_vld = 1'b1;
    end else begin
        den2_V_0_3_08_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1245_10_fu_1446_p2 = (shl_ln737_s_fu_1439_p3 + mul_ln1171_10_reg_2356);

assign add_ln1245_11_fu_1536_p2 = (shl_ln737_10_fu_1529_p3 + mul_ln1171_11_reg_2381);

assign add_ln1245_12_fu_1626_p2 = (shl_ln737_11_fu_1619_p3 + mul_ln1171_12_reg_2406);

assign add_ln1245_13_fu_1716_p2 = (shl_ln737_12_fu_1709_p3 + mul_ln1171_13_reg_2431);

assign add_ln1245_14_fu_1793_p2 = (shl_ln737_13_fu_1786_p3 + mul_ln1171_14_reg_2456);

assign add_ln1245_15_fu_1862_p2 = (shl_ln737_14_fu_1855_p3 + mul_ln1171_15_reg_2476);

assign add_ln1245_1_fu_636_p2 = (shl_ln737_1_fu_629_p3 + mul_ln1171_1_reg_2131);

assign add_ln1245_2_fu_726_p2 = (shl_ln737_2_fu_719_p3 + mul_ln1171_2_reg_2156);

assign add_ln1245_3_fu_816_p2 = (shl_ln737_3_fu_809_p3 + mul_ln1171_3_reg_2181);

assign add_ln1245_4_fu_906_p2 = (shl_ln737_4_fu_899_p3 + mul_ln1171_4_reg_2206);

assign add_ln1245_5_fu_996_p2 = (shl_ln737_5_fu_989_p3 + mul_ln1171_5_reg_2231);

assign add_ln1245_6_fu_1086_p2 = (shl_ln737_6_fu_1079_p3 + mul_ln1171_6_reg_2256);

assign add_ln1245_7_fu_1176_p2 = (shl_ln737_7_fu_1169_p3 + mul_ln1171_7_reg_2281);

assign add_ln1245_8_fu_1266_p2 = (shl_ln737_8_fu_1259_p3 + mul_ln1171_8_reg_2306);

assign add_ln1245_9_fu_1356_p2 = (shl_ln737_9_fu_1349_p3 + mul_ln1171_9_reg_2331);

assign add_ln1245_fu_546_p2 = (shl_ln_fu_538_p3 + mul_ln1171_reg_2106);

assign add_ln287_fu_450_p2 = (ap_sig_allocacmp_d_1 + 3'd1);

assign add_ln415_10_fu_1498_p2 = (trunc_ln717_s_fu_1451_p4 + zext_ln415_10_fu_1494_p1);

assign add_ln415_11_fu_1588_p2 = (trunc_ln717_10_fu_1541_p4 + zext_ln415_11_fu_1584_p1);

assign add_ln415_12_fu_1678_p2 = (trunc_ln717_11_fu_1631_p4 + zext_ln415_12_fu_1674_p1);

assign add_ln415_13_fu_1768_p2 = (trunc_ln717_12_fu_1721_p4 + zext_ln415_13_fu_1764_p1);

assign add_ln415_14_fu_1845_p2 = (trunc_ln717_13_fu_1798_p4 + zext_ln415_14_fu_1841_p1);

assign add_ln415_1_fu_688_p2 = (trunc_ln717_1_fu_641_p4 + zext_ln415_1_fu_684_p1);

assign add_ln415_2_fu_778_p2 = (trunc_ln717_2_fu_731_p4 + zext_ln415_2_fu_774_p1);

assign add_ln415_3_fu_868_p2 = (trunc_ln717_3_fu_821_p4 + zext_ln415_3_fu_864_p1);

assign add_ln415_4_fu_958_p2 = (trunc_ln717_4_fu_911_p4 + zext_ln415_4_fu_954_p1);

assign add_ln415_5_fu_1048_p2 = (trunc_ln717_5_fu_1001_p4 + zext_ln415_5_fu_1044_p1);

assign add_ln415_6_fu_1138_p2 = (trunc_ln717_6_fu_1091_p4 + zext_ln415_6_fu_1134_p1);

assign add_ln415_7_fu_1228_p2 = (trunc_ln717_7_fu_1181_p4 + zext_ln415_7_fu_1224_p1);

assign add_ln415_8_fu_1318_p2 = (trunc_ln717_8_fu_1271_p4 + zext_ln415_8_fu_1314_p1);

assign add_ln415_9_fu_1408_p2 = (trunc_ln717_9_fu_1361_p4 + zext_ln415_9_fu_1404_p1);

assign add_ln415_fu_598_p2 = (trunc_ln5_fu_551_p4 + zext_ln415_fu_594_p1);

assign and_ln412_10_fu_1488_p2 = (tmp_40_fu_1469_p3 & or_ln412_10_fu_1482_p2);

assign and_ln412_11_fu_1578_p2 = (tmp_42_fu_1559_p3 & or_ln412_11_fu_1572_p2);

assign and_ln412_12_fu_1668_p2 = (tmp_44_fu_1649_p3 & or_ln412_12_fu_1662_p2);

assign and_ln412_13_fu_1758_p2 = (tmp_46_fu_1739_p3 & or_ln412_13_fu_1752_p2);

assign and_ln412_14_fu_1835_p2 = (tmp_48_fu_1816_p3 & or_ln412_14_fu_1829_p2);

assign and_ln412_15_fu_1904_p2 = (tmp_50_fu_1885_p3 & or_ln412_15_fu_1898_p2);

assign and_ln412_1_fu_678_p2 = (tmp_22_fu_659_p3 & or_ln412_1_fu_672_p2);

assign and_ln412_2_fu_768_p2 = (tmp_24_fu_749_p3 & or_ln412_2_fu_762_p2);

assign and_ln412_3_fu_858_p2 = (tmp_26_fu_839_p3 & or_ln412_3_fu_852_p2);

assign and_ln412_4_fu_948_p2 = (tmp_28_fu_929_p3 & or_ln412_4_fu_942_p2);

assign and_ln412_5_fu_1038_p2 = (tmp_30_fu_1019_p3 & or_ln412_5_fu_1032_p2);

assign and_ln412_6_fu_1128_p2 = (tmp_32_fu_1109_p3 & or_ln412_6_fu_1122_p2);

assign and_ln412_7_fu_1218_p2 = (tmp_34_fu_1199_p3 & or_ln412_7_fu_1212_p2);

assign and_ln412_8_fu_1308_p2 = (tmp_36_fu_1289_p3 & or_ln412_8_fu_1302_p2);

assign and_ln412_9_fu_1398_p2 = (tmp_38_fu_1379_p3 & or_ln412_9_fu_1392_p2);

assign and_ln412_fu_588_p2 = (tmp_20_fu_569_p3 & or_ln412_fu_582_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign den2_V_0_0_05_out = den2_V_0_1_fu_232;

assign den2_V_0_1_06_out = den2_V_0_1_1_fu_236;

assign den2_V_0_1_5_fu_1914_p2 = (trunc_ln717_14_fu_1867_p4 + zext_ln415_15_fu_1910_p1);

assign den2_V_0_2_07_out = den2_V_0_1_2_fu_240;

assign den2_V_0_3_08_out = den2_V_0_1_3_fu_244;

assign grp_fu_1810_p_ce = 1'b1;

assign grp_fu_1810_p_din0 = sext_ln1171_fu_479_p1;

assign grp_fu_1810_p_din1 = zext_ln290_cast_reg_2062;

assign grp_fu_1814_p_ce = 1'b1;

assign grp_fu_1814_p_din0 = sext_ln1171_1_fu_504_p1;

assign grp_fu_1814_p_din1 = zext_ln290_1_cast_reg_2057;

assign grp_fu_1818_p_ce = 1'b1;

assign grp_fu_1818_p_din0 = sext_ln1171_2_fu_608_p1;

assign grp_fu_1818_p_din1 = zext_ln290_2_cast_reg_2052;

assign grp_fu_1822_p_ce = 1'b1;

assign grp_fu_1822_p_din0 = sext_ln1171_3_fu_698_p1;

assign grp_fu_1822_p_din1 = zext_ln290_3_cast_reg_2047;

assign grp_fu_1826_p_ce = 1'b1;

assign grp_fu_1826_p_din0 = sext_ln1171_4_fu_788_p1;

assign grp_fu_1826_p_din1 = zext_ln290_4_cast_reg_2042;

assign grp_fu_1830_p_ce = 1'b1;

assign grp_fu_1830_p_din0 = sext_ln1171_5_fu_878_p1;

assign grp_fu_1830_p_din1 = zext_ln290_5_cast_reg_2037;

assign grp_fu_1834_p_ce = 1'b1;

assign grp_fu_1834_p_din0 = sext_ln1171_6_fu_968_p1;

assign grp_fu_1834_p_din1 = zext_ln290_6_cast_reg_2032;

assign grp_fu_1838_p_ce = 1'b1;

assign grp_fu_1838_p_din0 = sext_ln1171_7_fu_1058_p1;

assign grp_fu_1838_p_din1 = zext_ln290_7_cast_reg_2027;

assign grp_fu_1842_p_ce = 1'b1;

assign grp_fu_1842_p_din0 = sext_ln1171_8_fu_1148_p1;

assign grp_fu_1842_p_din1 = zext_ln290_8_cast_reg_2022;

assign grp_fu_1846_p_ce = 1'b1;

assign grp_fu_1846_p_din0 = sext_ln1171_9_fu_1238_p1;

assign grp_fu_1846_p_din1 = zext_ln290_9_cast_reg_2017;

assign grp_fu_1850_p_ce = 1'b1;

assign grp_fu_1850_p_din0 = sext_ln1171_10_fu_1328_p1;

assign grp_fu_1850_p_din1 = zext_ln290_10_cast_reg_2012;

assign grp_fu_1854_p_ce = 1'b1;

assign grp_fu_1854_p_din0 = sext_ln1171_11_fu_1418_p1;

assign grp_fu_1854_p_din1 = zext_ln290_11_cast_reg_2007;

assign grp_fu_1858_p_ce = 1'b1;

assign grp_fu_1858_p_din0 = sext_ln1171_12_fu_1508_p1;

assign grp_fu_1858_p_din1 = zext_ln290_12_cast_reg_2002;

assign grp_fu_1862_p_ce = 1'b1;

assign grp_fu_1862_p_din0 = sext_ln1171_13_fu_1598_p1;

assign grp_fu_1862_p_din1 = zext_ln290_13_cast_reg_1997;

assign grp_fu_1866_p_ce = 1'b1;

assign grp_fu_1866_p_din0 = sext_ln1171_14_fu_1688_p1;

assign grp_fu_1866_p_din1 = zext_ln290_14_cast_reg_1992;

assign grp_fu_1870_p_ce = 1'b1;

assign grp_fu_1870_p_din0 = sext_ln1171_15_fu_1778_p1;

assign grp_fu_1870_p_din1 = zext_ln287_cast_reg_1987;

assign icmp_ln287_fu_444_p2 = ((ap_sig_allocacmp_d_1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln727_10_fu_1477_p2 = ((trunc_ln727_10_reg_2361 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_11_fu_1567_p2 = ((trunc_ln727_11_reg_2386 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_12_fu_1657_p2 = ((trunc_ln727_12_reg_2411 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_13_fu_1747_p2 = ((trunc_ln727_13_reg_2436 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_14_fu_1824_p2 = ((trunc_ln727_14_reg_2461 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_15_fu_1893_p2 = ((trunc_ln727_15_reg_2481 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_1_fu_667_p2 = ((trunc_ln727_1_reg_2136 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_2_fu_757_p2 = ((trunc_ln727_2_reg_2161 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_3_fu_847_p2 = ((trunc_ln727_3_reg_2186 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_4_fu_937_p2 = ((trunc_ln727_4_reg_2211 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_5_fu_1027_p2 = ((trunc_ln727_5_reg_2236 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_6_fu_1117_p2 = ((trunc_ln727_6_reg_2261 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_7_fu_1207_p2 = ((trunc_ln727_7_reg_2286 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_8_fu_1297_p2 = ((trunc_ln727_8_reg_2311 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_9_fu_1387_p2 = ((trunc_ln727_9_reg_2336 != 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln727_fu_577_p2 = ((trunc_ln727_reg_2111 != 18'd0) ? 1'b1 : 1'b0);

assign or_ln412_10_fu_1482_p2 = (tmp_39_fu_1461_p3 | icmp_ln727_10_fu_1477_p2);

assign or_ln412_11_fu_1572_p2 = (tmp_41_fu_1551_p3 | icmp_ln727_11_fu_1567_p2);

assign or_ln412_12_fu_1662_p2 = (tmp_43_fu_1641_p3 | icmp_ln727_12_fu_1657_p2);

assign or_ln412_13_fu_1752_p2 = (tmp_45_fu_1731_p3 | icmp_ln727_13_fu_1747_p2);

assign or_ln412_14_fu_1829_p2 = (tmp_47_fu_1808_p3 | icmp_ln727_14_fu_1824_p2);

assign or_ln412_15_fu_1898_p2 = (tmp_49_fu_1877_p3 | icmp_ln727_15_fu_1893_p2);

assign or_ln412_1_fu_672_p2 = (tmp_21_fu_651_p3 | icmp_ln727_1_fu_667_p2);

assign or_ln412_2_fu_762_p2 = (tmp_23_fu_741_p3 | icmp_ln727_2_fu_757_p2);

assign or_ln412_3_fu_852_p2 = (tmp_25_fu_831_p3 | icmp_ln727_3_fu_847_p2);

assign or_ln412_4_fu_942_p2 = (tmp_27_fu_921_p3 | icmp_ln727_4_fu_937_p2);

assign or_ln412_5_fu_1032_p2 = (tmp_29_fu_1011_p3 | icmp_ln727_5_fu_1027_p2);

assign or_ln412_6_fu_1122_p2 = (tmp_31_fu_1101_p3 | icmp_ln727_6_fu_1117_p2);

assign or_ln412_7_fu_1212_p2 = (tmp_33_fu_1191_p3 | icmp_ln727_7_fu_1207_p2);

assign or_ln412_8_fu_1302_p2 = (tmp_35_fu_1281_p3 | icmp_ln727_8_fu_1297_p2);

assign or_ln412_9_fu_1392_p2 = (tmp_37_fu_1371_p3 | icmp_ln727_9_fu_1387_p2);

assign or_ln412_fu_582_p2 = (tmp_fu_561_p3 | icmp_ln727_fu_577_p2);

assign sext_ln1171_10_fu_1328_p1 = $signed(tmp_10_reg_2321);

assign sext_ln1171_11_fu_1418_p1 = $signed(tmp_11_reg_2346);

assign sext_ln1171_12_fu_1508_p1 = $signed(tmp_12_reg_2371);

assign sext_ln1171_13_fu_1598_p1 = $signed(tmp_13_reg_2396);

assign sext_ln1171_14_fu_1688_p1 = $signed(tmp_14_reg_2421);

assign sext_ln1171_15_fu_1778_p1 = $signed(tmp_15_reg_2446);

assign sext_ln1171_1_fu_504_p1 = $signed(tmp_5_reg_2101);

assign sext_ln1171_2_fu_608_p1 = $signed(tmp_6_reg_2121);

assign sext_ln1171_3_fu_698_p1 = $signed(tmp_7_reg_2146);

assign sext_ln1171_4_fu_788_p1 = $signed(tmp_8_reg_2171);

assign sext_ln1171_5_fu_878_p1 = $signed(tmp_9_reg_2196);

assign sext_ln1171_6_fu_968_p1 = $signed(tmp_s_reg_2221);

assign sext_ln1171_7_fu_1058_p1 = $signed(tmp_1_reg_2246);

assign sext_ln1171_8_fu_1148_p1 = $signed(tmp_2_reg_2271);

assign sext_ln1171_9_fu_1238_p1 = $signed(tmp_3_reg_2296);

assign sext_ln1171_fu_479_p1 = $signed(tmp_4_reg_2091);

assign shl_ln737_10_fu_1529_p3 = {{add_ln415_10_reg_2376}, {19'd0}};

assign shl_ln737_11_fu_1619_p3 = {{add_ln415_11_reg_2401}, {19'd0}};

assign shl_ln737_12_fu_1709_p3 = {{add_ln415_12_reg_2426}, {19'd0}};

assign shl_ln737_13_fu_1786_p3 = {{add_ln415_13_reg_2451}, {19'd0}};

assign shl_ln737_14_fu_1855_p3 = {{add_ln415_14_reg_2471}, {19'd0}};

assign shl_ln737_1_fu_629_p3 = {{add_ln415_reg_2126}, {19'd0}};

assign shl_ln737_2_fu_719_p3 = {{add_ln415_1_reg_2151}, {19'd0}};

assign shl_ln737_3_fu_809_p3 = {{add_ln415_2_reg_2176}, {19'd0}};

assign shl_ln737_4_fu_899_p3 = {{add_ln415_3_reg_2201}, {19'd0}};

assign shl_ln737_5_fu_989_p3 = {{add_ln415_4_reg_2226}, {19'd0}};

assign shl_ln737_6_fu_1079_p3 = {{add_ln415_5_reg_2251}, {19'd0}};

assign shl_ln737_7_fu_1169_p3 = {{add_ln415_6_reg_2276}, {19'd0}};

assign shl_ln737_8_fu_1259_p3 = {{add_ln415_7_reg_2301}, {19'd0}};

assign shl_ln737_9_fu_1349_p3 = {{add_ln415_8_reg_2326}, {19'd0}};

assign shl_ln737_s_fu_1439_p3 = {{add_ln415_9_reg_2351}, {19'd0}};

assign shl_ln_fu_538_p3 = {{num_V_fu_525_p6}, {19'd0}};

assign tmp_20_fu_569_p3 = add_ln1245_fu_546_p2[32'd18];

assign tmp_21_fu_651_p3 = add_ln1245_1_fu_636_p2[32'd19];

assign tmp_22_fu_659_p3 = add_ln1245_1_fu_636_p2[32'd18];

assign tmp_23_fu_741_p3 = add_ln1245_2_fu_726_p2[32'd19];

assign tmp_24_fu_749_p3 = add_ln1245_2_fu_726_p2[32'd18];

assign tmp_25_fu_831_p3 = add_ln1245_3_fu_816_p2[32'd19];

assign tmp_26_fu_839_p3 = add_ln1245_3_fu_816_p2[32'd18];

assign tmp_27_fu_921_p3 = add_ln1245_4_fu_906_p2[32'd19];

assign tmp_28_fu_929_p3 = add_ln1245_4_fu_906_p2[32'd18];

assign tmp_29_fu_1011_p3 = add_ln1245_5_fu_996_p2[32'd19];

assign tmp_30_fu_1019_p3 = add_ln1245_5_fu_996_p2[32'd18];

assign tmp_31_fu_1101_p3 = add_ln1245_6_fu_1086_p2[32'd19];

assign tmp_32_fu_1109_p3 = add_ln1245_6_fu_1086_p2[32'd18];

assign tmp_33_fu_1191_p3 = add_ln1245_7_fu_1176_p2[32'd19];

assign tmp_34_fu_1199_p3 = add_ln1245_7_fu_1176_p2[32'd18];

assign tmp_35_fu_1281_p3 = add_ln1245_8_fu_1266_p2[32'd19];

assign tmp_36_fu_1289_p3 = add_ln1245_8_fu_1266_p2[32'd18];

assign tmp_37_fu_1371_p3 = add_ln1245_9_fu_1356_p2[32'd19];

assign tmp_38_fu_1379_p3 = add_ln1245_9_fu_1356_p2[32'd18];

assign tmp_39_fu_1461_p3 = add_ln1245_10_fu_1446_p2[32'd19];

assign tmp_40_fu_1469_p3 = add_ln1245_10_fu_1446_p2[32'd18];

assign tmp_41_fu_1551_p3 = add_ln1245_11_fu_1536_p2[32'd19];

assign tmp_42_fu_1559_p3 = add_ln1245_11_fu_1536_p2[32'd18];

assign tmp_43_fu_1641_p3 = add_ln1245_12_fu_1626_p2[32'd19];

assign tmp_44_fu_1649_p3 = add_ln1245_12_fu_1626_p2[32'd18];

assign tmp_45_fu_1731_p3 = add_ln1245_13_fu_1716_p2[32'd19];

assign tmp_46_fu_1739_p3 = add_ln1245_13_fu_1716_p2[32'd18];

assign tmp_47_fu_1808_p3 = add_ln1245_14_fu_1793_p2[32'd19];

assign tmp_48_fu_1816_p3 = add_ln1245_14_fu_1793_p2[32'd18];

assign tmp_49_fu_1877_p3 = add_ln1245_15_fu_1862_p2[32'd19];

assign tmp_4_fu_460_p5 = ap_sig_allocacmp_d_1[1:0];

assign tmp_50_fu_1885_p3 = add_ln1245_15_fu_1862_p2[32'd18];

assign tmp_fu_561_p3 = add_ln1245_fu_546_p2[32'd19];

assign trunc_ln288_fu_456_p1 = ap_sig_allocacmp_d_1[1:0];

assign trunc_ln5_fu_551_p4 = {{add_ln1245_fu_546_p2[54:19]}};

assign trunc_ln717_10_fu_1541_p4 = {{add_ln1245_11_fu_1536_p2[54:19]}};

assign trunc_ln717_11_fu_1631_p4 = {{add_ln1245_12_fu_1626_p2[54:19]}};

assign trunc_ln717_12_fu_1721_p4 = {{add_ln1245_13_fu_1716_p2[54:19]}};

assign trunc_ln717_13_fu_1798_p4 = {{add_ln1245_14_fu_1793_p2[54:19]}};

assign trunc_ln717_14_fu_1867_p4 = {{add_ln1245_15_fu_1862_p2[54:19]}};

assign trunc_ln717_1_fu_641_p4 = {{add_ln1245_1_fu_636_p2[54:19]}};

assign trunc_ln717_2_fu_731_p4 = {{add_ln1245_2_fu_726_p2[54:19]}};

assign trunc_ln717_3_fu_821_p4 = {{add_ln1245_3_fu_816_p2[54:19]}};

assign trunc_ln717_4_fu_911_p4 = {{add_ln1245_4_fu_906_p2[54:19]}};

assign trunc_ln717_5_fu_1001_p4 = {{add_ln1245_5_fu_996_p2[54:19]}};

assign trunc_ln717_6_fu_1091_p4 = {{add_ln1245_6_fu_1086_p2[54:19]}};

assign trunc_ln717_7_fu_1181_p4 = {{add_ln1245_7_fu_1176_p2[54:19]}};

assign trunc_ln717_8_fu_1271_p4 = {{add_ln1245_8_fu_1266_p2[54:19]}};

assign trunc_ln717_9_fu_1361_p4 = {{add_ln1245_9_fu_1356_p2[54:19]}};

assign trunc_ln717_s_fu_1451_p4 = {{add_ln1245_10_fu_1446_p2[54:19]}};

assign trunc_ln727_10_fu_1414_p1 = grp_fu_1850_p_dout0[17:0];

assign trunc_ln727_11_fu_1504_p1 = grp_fu_1854_p_dout0[17:0];

assign trunc_ln727_12_fu_1594_p1 = grp_fu_1858_p_dout0[17:0];

assign trunc_ln727_13_fu_1684_p1 = grp_fu_1862_p_dout0[17:0];

assign trunc_ln727_14_fu_1774_p1 = grp_fu_1866_p_dout0[17:0];

assign trunc_ln727_15_fu_1851_p1 = grp_fu_1870_p_dout0[17:0];

assign trunc_ln727_1_fu_604_p1 = grp_fu_1814_p_dout0[17:0];

assign trunc_ln727_2_fu_694_p1 = grp_fu_1818_p_dout0[17:0];

assign trunc_ln727_3_fu_784_p1 = grp_fu_1822_p_dout0[17:0];

assign trunc_ln727_4_fu_874_p1 = grp_fu_1826_p_dout0[17:0];

assign trunc_ln727_5_fu_964_p1 = grp_fu_1830_p_dout0[17:0];

assign trunc_ln727_6_fu_1054_p1 = grp_fu_1834_p_dout0[17:0];

assign trunc_ln727_7_fu_1144_p1 = grp_fu_1838_p_dout0[17:0];

assign trunc_ln727_8_fu_1234_p1 = grp_fu_1842_p_dout0[17:0];

assign trunc_ln727_9_fu_1324_p1 = grp_fu_1846_p_dout0[17:0];

assign trunc_ln727_fu_500_p1 = grp_fu_1810_p_dout0[17:0];

assign zext_ln287_cast_fu_372_p1 = zext_ln287;

assign zext_ln290_10_cast_fu_392_p1 = zext_ln290_10;

assign zext_ln290_11_cast_fu_388_p1 = zext_ln290_11;

assign zext_ln290_12_cast_fu_384_p1 = zext_ln290_12;

assign zext_ln290_13_cast_fu_380_p1 = zext_ln290_13;

assign zext_ln290_14_cast_fu_376_p1 = zext_ln290_14;

assign zext_ln290_1_cast_fu_428_p1 = zext_ln290_1;

assign zext_ln290_2_cast_fu_424_p1 = zext_ln290_2;

assign zext_ln290_3_cast_fu_420_p1 = zext_ln290_3;

assign zext_ln290_4_cast_fu_416_p1 = zext_ln290_4;

assign zext_ln290_5_cast_fu_412_p1 = zext_ln290_5;

assign zext_ln290_6_cast_fu_408_p1 = zext_ln290_6;

assign zext_ln290_7_cast_fu_404_p1 = zext_ln290_7;

assign zext_ln290_8_cast_fu_400_p1 = zext_ln290_8;

assign zext_ln290_9_cast_fu_396_p1 = zext_ln290_9;

assign zext_ln290_cast_fu_432_p1 = zext_ln290;

assign zext_ln415_10_fu_1494_p1 = and_ln412_10_fu_1488_p2;

assign zext_ln415_11_fu_1584_p1 = and_ln412_11_fu_1578_p2;

assign zext_ln415_12_fu_1674_p1 = and_ln412_12_fu_1668_p2;

assign zext_ln415_13_fu_1764_p1 = and_ln412_13_fu_1758_p2;

assign zext_ln415_14_fu_1841_p1 = and_ln412_14_fu_1835_p2;

assign zext_ln415_15_fu_1910_p1 = and_ln412_15_fu_1904_p2;

assign zext_ln415_1_fu_684_p1 = and_ln412_1_fu_678_p2;

assign zext_ln415_2_fu_774_p1 = and_ln412_2_fu_768_p2;

assign zext_ln415_3_fu_864_p1 = and_ln412_3_fu_858_p2;

assign zext_ln415_4_fu_954_p1 = and_ln412_4_fu_948_p2;

assign zext_ln415_5_fu_1044_p1 = and_ln412_5_fu_1038_p2;

assign zext_ln415_6_fu_1134_p1 = and_ln412_6_fu_1128_p2;

assign zext_ln415_7_fu_1224_p1 = and_ln412_7_fu_1218_p2;

assign zext_ln415_8_fu_1314_p1 = and_ln412_8_fu_1308_p2;

assign zext_ln415_9_fu_1404_p1 = and_ln412_9_fu_1398_p2;

assign zext_ln415_fu_594_p1 = and_ln412_fu_588_p2;

always @ (posedge ap_clk) begin
    zext_ln287_cast_reg_1987[54:35] <= 20'b00000000000000000000;
    zext_ln290_14_cast_reg_1992[54:35] <= 20'b00000000000000000000;
    zext_ln290_13_cast_reg_1997[54:35] <= 20'b00000000000000000000;
    zext_ln290_12_cast_reg_2002[54:35] <= 20'b00000000000000000000;
    zext_ln290_11_cast_reg_2007[54:35] <= 20'b00000000000000000000;
    zext_ln290_10_cast_reg_2012[54:35] <= 20'b00000000000000000000;
    zext_ln290_9_cast_reg_2017[54:35] <= 20'b00000000000000000000;
    zext_ln290_8_cast_reg_2022[54:35] <= 20'b00000000000000000000;
    zext_ln290_7_cast_reg_2027[54:35] <= 20'b00000000000000000000;
    zext_ln290_6_cast_reg_2032[54:35] <= 20'b00000000000000000000;
    zext_ln290_5_cast_reg_2037[54:35] <= 20'b00000000000000000000;
    zext_ln290_4_cast_reg_2042[54:35] <= 20'b00000000000000000000;
    zext_ln290_3_cast_reg_2047[54:35] <= 20'b00000000000000000000;
    zext_ln290_2_cast_reg_2052[54:35] <= 20'b00000000000000000000;
    zext_ln290_1_cast_reg_2057[54:35] <= 20'b00000000000000000000;
    zext_ln290_cast_reg_2062[54:35] <= 20'b00000000000000000000;
end

endmodule //master_fix_master_fix_Pipeline_VITIS_LOOP_287_1
