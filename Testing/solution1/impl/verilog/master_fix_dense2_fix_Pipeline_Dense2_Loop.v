// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_dense2_fix_Pipeline_Dense2_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_V_cast,
        r_V_2_cast,
        r_V_4_cast,
        r_V_6_cast,
        r_V_8_cast,
        r_V_10_cast,
        r_V_12_cast,
        r_V_14_cast,
        r_V_16_cast,
        r_V_18_cast,
        r_V_20_cast,
        r_V_22_cast,
        r_V_24_cast,
        r_V_26_cast,
        r_V_28_cast,
        zext_ln306,
        out_016_07_out,
        out_016_07_out_ap_vld,
        out_0_06_out,
        out_0_06_out_ap_vld,
        out_02_05_out,
        out_02_05_out_ap_vld,
        out_03_04_out,
        out_03_04_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [34:0] r_V_cast;
input  [34:0] r_V_2_cast;
input  [34:0] r_V_4_cast;
input  [34:0] r_V_6_cast;
input  [34:0] r_V_8_cast;
input  [34:0] r_V_10_cast;
input  [34:0] r_V_12_cast;
input  [34:0] r_V_14_cast;
input  [34:0] r_V_16_cast;
input  [34:0] r_V_18_cast;
input  [34:0] r_V_20_cast;
input  [34:0] r_V_22_cast;
input  [34:0] r_V_24_cast;
input  [34:0] r_V_26_cast;
input  [34:0] r_V_28_cast;
input  [34:0] zext_ln306;
output  [35:0] out_016_07_out;
output   out_016_07_out_ap_vld;
output  [35:0] out_0_06_out;
output   out_0_06_out_ap_vld;
output  [35:0] out_02_05_out;
output   out_02_05_out_ap_vld;
output  [35:0] out_03_04_out;
output   out_03_04_out_ap_vld;

reg ap_idle;
reg out_016_07_out_ap_vld;
reg out_0_06_out_ap_vld;
reg out_02_05_out_ap_vld;
reg out_03_04_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln306_fu_484_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] write_flag4_0_reg_372;
reg   [0:0] write_flag8_0_reg_382;
reg   [0:0] write_flag11_0_reg_392;
reg   [0:0] write_flag_0_reg_402;
wire    ap_block_pp0_stage0_11001;
wire   [54:0] zext_ln306_cast_fu_412_p1;
reg   [54:0] zext_ln306_cast_reg_2147;
wire   [54:0] r_V_28_cast_cast_fu_416_p1;
reg   [54:0] r_V_28_cast_cast_reg_2152;
wire   [54:0] r_V_26_cast_cast_fu_420_p1;
reg   [54:0] r_V_26_cast_cast_reg_2157;
wire   [54:0] r_V_24_cast_cast_fu_424_p1;
reg   [54:0] r_V_24_cast_cast_reg_2162;
wire   [54:0] r_V_22_cast_cast_fu_428_p1;
reg   [54:0] r_V_22_cast_cast_reg_2167;
wire   [54:0] r_V_20_cast_cast_fu_432_p1;
reg   [54:0] r_V_20_cast_cast_reg_2172;
wire   [54:0] r_V_18_cast_cast_fu_436_p1;
reg   [54:0] r_V_18_cast_cast_reg_2177;
wire   [54:0] r_V_16_cast_cast_fu_440_p1;
reg   [54:0] r_V_16_cast_cast_reg_2182;
wire   [54:0] r_V_14_cast_cast_fu_444_p1;
reg   [54:0] r_V_14_cast_cast_reg_2187;
wire   [54:0] r_V_12_cast_cast_fu_448_p1;
reg   [54:0] r_V_12_cast_cast_reg_2192;
wire   [54:0] r_V_10_cast_cast_fu_452_p1;
reg   [54:0] r_V_10_cast_cast_reg_2197;
wire   [54:0] r_V_8_cast_cast_fu_456_p1;
reg   [54:0] r_V_8_cast_cast_reg_2202;
wire   [54:0] r_V_6_cast_cast_fu_460_p1;
reg   [54:0] r_V_6_cast_cast_reg_2207;
wire   [54:0] r_V_4_cast_cast_fu_464_p1;
reg   [54:0] r_V_4_cast_cast_reg_2212;
wire   [54:0] r_V_2_cast_cast_fu_468_p1;
reg   [54:0] r_V_2_cast_cast_reg_2217;
wire   [54:0] r_V_cast_cast_fu_472_p1;
reg   [54:0] r_V_cast_cast_reg_2222;
reg   [0:0] icmp_ln306_reg_2227;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter1_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter2_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter3_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter4_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter5_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter6_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter7_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter8_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter9_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter10_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter11_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter12_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter13_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter14_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter15_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter16_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter17_reg;
reg   [0:0] icmp_ln306_reg_2227_pp0_iter18_reg;
wire   [1:0] trunc_ln307_fu_496_p1;
reg   [1:0] trunc_ln307_reg_2231;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter1_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter2_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter3_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter4_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter5_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter6_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter7_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter8_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter9_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter10_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter11_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter12_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter13_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter14_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter15_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter16_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter17_reg;
reg   [1:0] trunc_ln307_reg_2231_pp0_iter18_reg;
wire   [35:0] aux2_V_fu_500_p6;
reg  signed [35:0] aux2_V_reg_2255;
wire   [0:0] write_flag_1_fu_514_p6;
wire   [0:0] write_flag11_1_fu_528_p6;
wire   [0:0] write_flag8_1_fu_542_p6;
wire   [0:0] write_flag4_1_fu_556_p6;
wire   [35:0] aux2_V_1_fu_583_p6;
reg  signed [35:0] aux2_V_1_reg_2285;
wire   [54:0] grp_fu_578_p2;
reg   [54:0] r_V_reg_2290;
wire   [17:0] trunc_ln727_fu_596_p1;
reg   [17:0] trunc_ln727_reg_2295;
wire   [35:0] aux2_V_2_fu_608_p6;
reg  signed [35:0] aux2_V_2_reg_2305;
wire   [35:0] num_V_35_fu_694_p2;
reg   [35:0] num_V_35_reg_2310;
wire   [54:0] grp_fu_603_p2;
reg   [54:0] r_V_2_reg_2315;
wire   [17:0] trunc_ln727_1_fu_700_p1;
reg   [17:0] trunc_ln727_1_reg_2320;
wire   [35:0] aux2_V_3_fu_712_p6;
reg  signed [35:0] aux2_V_3_reg_2330;
wire   [35:0] num_V_37_fu_784_p2;
reg   [35:0] num_V_37_reg_2335;
wire   [54:0] grp_fu_707_p2;
reg   [54:0] r_V_3_reg_2340;
wire   [17:0] trunc_ln727_2_fu_790_p1;
reg   [17:0] trunc_ln727_2_reg_2345;
wire   [35:0] aux2_V_4_fu_802_p6;
reg  signed [35:0] aux2_V_4_reg_2355;
wire   [35:0] num_V_39_fu_874_p2;
reg   [35:0] num_V_39_reg_2360;
wire   [54:0] grp_fu_797_p2;
reg   [54:0] r_V_4_reg_2365;
wire   [17:0] trunc_ln727_3_fu_880_p1;
reg   [17:0] trunc_ln727_3_reg_2370;
wire   [35:0] aux2_V_5_fu_892_p6;
reg  signed [35:0] aux2_V_5_reg_2380;
wire   [35:0] num_V_41_fu_964_p2;
reg   [35:0] num_V_41_reg_2385;
wire   [54:0] grp_fu_887_p2;
reg   [54:0] r_V_5_reg_2390;
wire   [17:0] trunc_ln727_4_fu_970_p1;
reg   [17:0] trunc_ln727_4_reg_2395;
wire   [35:0] aux2_V_6_fu_982_p6;
reg  signed [35:0] aux2_V_6_reg_2405;
wire   [35:0] num_V_43_fu_1054_p2;
reg   [35:0] num_V_43_reg_2410;
wire   [54:0] grp_fu_977_p2;
reg   [54:0] r_V_6_reg_2415;
wire   [17:0] trunc_ln727_5_fu_1060_p1;
reg   [17:0] trunc_ln727_5_reg_2420;
wire   [35:0] aux2_V_7_fu_1072_p6;
reg  signed [35:0] aux2_V_7_reg_2430;
wire   [35:0] num_V_45_fu_1144_p2;
reg   [35:0] num_V_45_reg_2435;
wire   [54:0] grp_fu_1067_p2;
reg   [54:0] r_V_7_reg_2440;
wire   [17:0] trunc_ln727_6_fu_1150_p1;
reg   [17:0] trunc_ln727_6_reg_2445;
wire   [35:0] aux2_V_8_fu_1162_p6;
reg  signed [35:0] aux2_V_8_reg_2455;
wire   [35:0] num_V_47_fu_1234_p2;
reg   [35:0] num_V_47_reg_2460;
wire   [54:0] grp_fu_1157_p2;
reg   [54:0] r_V_8_reg_2465;
wire   [17:0] trunc_ln727_7_fu_1240_p1;
reg   [17:0] trunc_ln727_7_reg_2470;
wire   [35:0] aux2_V_9_fu_1252_p6;
reg  signed [35:0] aux2_V_9_reg_2480;
wire   [35:0] num_V_49_fu_1324_p2;
reg   [35:0] num_V_49_reg_2485;
wire   [54:0] grp_fu_1247_p2;
reg   [54:0] r_V_9_reg_2490;
wire   [17:0] trunc_ln727_8_fu_1330_p1;
reg   [17:0] trunc_ln727_8_reg_2495;
wire   [35:0] aux2_V_10_fu_1342_p6;
reg  signed [35:0] aux2_V_10_reg_2505;
wire   [35:0] num_V_51_fu_1414_p2;
reg   [35:0] num_V_51_reg_2510;
wire   [54:0] grp_fu_1337_p2;
reg   [54:0] r_V_10_reg_2515;
wire   [17:0] trunc_ln727_9_fu_1420_p1;
reg   [17:0] trunc_ln727_9_reg_2520;
wire   [35:0] aux2_V_11_fu_1432_p6;
reg  signed [35:0] aux2_V_11_reg_2530;
wire   [35:0] num_V_53_fu_1504_p2;
reg   [35:0] num_V_53_reg_2535;
wire   [54:0] grp_fu_1427_p2;
reg   [54:0] r_V_11_reg_2540;
wire   [17:0] trunc_ln727_10_fu_1510_p1;
reg   [17:0] trunc_ln727_10_reg_2545;
wire   [35:0] aux2_V_12_fu_1522_p6;
reg  signed [35:0] aux2_V_12_reg_2555;
wire   [35:0] num_V_55_fu_1594_p2;
reg   [35:0] num_V_55_reg_2560;
wire   [54:0] grp_fu_1517_p2;
reg   [54:0] r_V_12_reg_2565;
wire   [17:0] trunc_ln727_11_fu_1600_p1;
reg   [17:0] trunc_ln727_11_reg_2570;
wire   [35:0] aux2_V_13_fu_1612_p6;
reg  signed [35:0] aux2_V_13_reg_2580;
wire   [35:0] num_V_57_fu_1684_p2;
reg   [35:0] num_V_57_reg_2585;
wire   [54:0] grp_fu_1607_p2;
reg   [54:0] r_V_13_reg_2590;
wire   [17:0] trunc_ln727_12_fu_1690_p1;
reg   [17:0] trunc_ln727_12_reg_2595;
wire   [35:0] aux2_V_14_fu_1702_p6;
reg  signed [35:0] aux2_V_14_reg_2605;
wire   [35:0] num_V_59_fu_1774_p2;
reg   [35:0] num_V_59_reg_2610;
wire   [54:0] grp_fu_1697_p2;
reg   [54:0] r_V_14_reg_2615;
wire   [17:0] trunc_ln727_13_fu_1780_p1;
reg   [17:0] trunc_ln727_13_reg_2620;
wire   [35:0] aux2_V_15_fu_1792_p6;
reg  signed [35:0] aux2_V_15_reg_2630;
wire   [35:0] num_V_61_fu_1864_p2;
reg   [35:0] num_V_61_reg_2635;
wire   [54:0] grp_fu_1787_p2;
reg   [54:0] r_V_15_reg_2640;
wire   [17:0] trunc_ln727_14_fu_1870_p1;
reg   [17:0] trunc_ln727_14_reg_2645;
wire   [35:0] num_V_63_fu_1941_p2;
reg   [35:0] num_V_63_reg_2655;
wire   [54:0] grp_fu_1877_p2;
reg   [54:0] r_V_16_reg_2660;
wire   [17:0] trunc_ln727_15_fu_1947_p1;
reg   [17:0] trunc_ln727_15_reg_2665;
wire   [35:0] num_V_fu_2010_p2;
reg   [35:0] num_V_reg_2670;
reg   [0:0] ap_phi_mux_write_flag4_0_phi_fu_375_p4;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_write_flag8_0_phi_fu_385_p4;
reg   [0:0] ap_phi_mux_write_flag11_0_phi_fu_395_p4;
reg   [0:0] ap_phi_mux_write_flag_0_phi_fu_405_p4;
reg   [2:0] d_fu_228;
reg   [2:0] ap_sig_allocacmp_d_1;
wire    ap_block_pp0_stage0;
wire   [2:0] add_ln306_fu_490_p2;
reg   [35:0] out_03_04_fu_232;
wire   [35:0] out_03_1_fu_2028_p6;
reg   [35:0] out_02_05_fu_236;
wire   [35:0] out_02_1_fu_2040_p6;
reg   [35:0] out_0_06_fu_240;
wire   [35:0] out_0_1_fu_2052_p6;
reg   [35:0] out_016_07_fu_244;
wire   [35:0] out_016_1_fu_2064_p6;
wire    ap_block_pp0_stage0_01001;
wire   [34:0] grp_fu_578_p1;
wire   [34:0] grp_fu_603_p1;
wire   [35:0] num_V_33_fu_621_p6;
wire   [54:0] lhs_1_fu_634_p3;
wire   [54:0] ret_V_fu_642_p2;
wire   [0:0] p_Result_s_fu_657_p3;
wire   [0:0] r_fu_673_p2;
wire   [0:0] or_ln412_fu_678_p2;
wire   [0:0] p_Result_40_fu_665_p3;
wire   [0:0] and_ln412_fu_684_p2;
wire   [35:0] num_V_34_fu_647_p4;
wire   [35:0] zext_ln415_fu_690_p1;
wire   [34:0] grp_fu_707_p1;
wire   [54:0] lhs_3_fu_725_p3;
wire   [54:0] ret_V_1_fu_732_p2;
wire   [0:0] p_Result_11_fu_747_p3;
wire   [0:0] r_1_fu_763_p2;
wire   [0:0] or_ln412_1_fu_768_p2;
wire   [0:0] p_Result_41_fu_755_p3;
wire   [0:0] and_ln412_1_fu_774_p2;
wire   [35:0] num_V_36_fu_737_p4;
wire   [35:0] zext_ln415_1_fu_780_p1;
wire   [34:0] grp_fu_797_p1;
wire   [54:0] lhs_5_fu_815_p3;
wire   [54:0] ret_V_2_fu_822_p2;
wire   [0:0] p_Result_13_fu_837_p3;
wire   [0:0] r_2_fu_853_p2;
wire   [0:0] or_ln412_2_fu_858_p2;
wire   [0:0] p_Result_42_fu_845_p3;
wire   [0:0] and_ln412_2_fu_864_p2;
wire   [35:0] num_V_38_fu_827_p4;
wire   [35:0] zext_ln415_2_fu_870_p1;
wire   [34:0] grp_fu_887_p1;
wire   [54:0] lhs_7_fu_905_p3;
wire   [54:0] ret_V_3_fu_912_p2;
wire   [0:0] p_Result_15_fu_927_p3;
wire   [0:0] r_3_fu_943_p2;
wire   [0:0] or_ln412_3_fu_948_p2;
wire   [0:0] p_Result_43_fu_935_p3;
wire   [0:0] and_ln412_3_fu_954_p2;
wire   [35:0] num_V_40_fu_917_p4;
wire   [35:0] zext_ln415_3_fu_960_p1;
wire   [34:0] grp_fu_977_p1;
wire   [54:0] lhs_9_fu_995_p3;
wire   [54:0] ret_V_4_fu_1002_p2;
wire   [0:0] p_Result_17_fu_1017_p3;
wire   [0:0] r_4_fu_1033_p2;
wire   [0:0] or_ln412_4_fu_1038_p2;
wire   [0:0] p_Result_44_fu_1025_p3;
wire   [0:0] and_ln412_4_fu_1044_p2;
wire   [35:0] num_V_42_fu_1007_p4;
wire   [35:0] zext_ln415_4_fu_1050_p1;
wire   [34:0] grp_fu_1067_p1;
wire   [54:0] lhs_11_fu_1085_p3;
wire   [54:0] ret_V_5_fu_1092_p2;
wire   [0:0] p_Result_19_fu_1107_p3;
wire   [0:0] r_5_fu_1123_p2;
wire   [0:0] or_ln412_5_fu_1128_p2;
wire   [0:0] p_Result_45_fu_1115_p3;
wire   [0:0] and_ln412_5_fu_1134_p2;
wire   [35:0] num_V_44_fu_1097_p4;
wire   [35:0] zext_ln415_5_fu_1140_p1;
wire   [34:0] grp_fu_1157_p1;
wire   [54:0] lhs_13_fu_1175_p3;
wire   [54:0] ret_V_6_fu_1182_p2;
wire   [0:0] p_Result_21_fu_1197_p3;
wire   [0:0] r_6_fu_1213_p2;
wire   [0:0] or_ln412_6_fu_1218_p2;
wire   [0:0] p_Result_46_fu_1205_p3;
wire   [0:0] and_ln412_6_fu_1224_p2;
wire   [35:0] num_V_46_fu_1187_p4;
wire   [35:0] zext_ln415_6_fu_1230_p1;
wire   [34:0] grp_fu_1247_p1;
wire   [54:0] lhs_15_fu_1265_p3;
wire   [54:0] ret_V_7_fu_1272_p2;
wire   [0:0] p_Result_23_fu_1287_p3;
wire   [0:0] r_7_fu_1303_p2;
wire   [0:0] or_ln412_7_fu_1308_p2;
wire   [0:0] p_Result_47_fu_1295_p3;
wire   [0:0] and_ln412_7_fu_1314_p2;
wire   [35:0] num_V_48_fu_1277_p4;
wire   [35:0] zext_ln415_7_fu_1320_p1;
wire   [34:0] grp_fu_1337_p1;
wire   [54:0] lhs_17_fu_1355_p3;
wire   [54:0] ret_V_8_fu_1362_p2;
wire   [0:0] p_Result_25_fu_1377_p3;
wire   [0:0] r_8_fu_1393_p2;
wire   [0:0] or_ln412_8_fu_1398_p2;
wire   [0:0] p_Result_48_fu_1385_p3;
wire   [0:0] and_ln412_8_fu_1404_p2;
wire   [35:0] num_V_50_fu_1367_p4;
wire   [35:0] zext_ln415_8_fu_1410_p1;
wire   [34:0] grp_fu_1427_p1;
wire   [54:0] lhs_19_fu_1445_p3;
wire   [54:0] ret_V_9_fu_1452_p2;
wire   [0:0] p_Result_27_fu_1467_p3;
wire   [0:0] r_9_fu_1483_p2;
wire   [0:0] or_ln412_9_fu_1488_p2;
wire   [0:0] p_Result_49_fu_1475_p3;
wire   [0:0] and_ln412_9_fu_1494_p2;
wire   [35:0] num_V_52_fu_1457_p4;
wire   [35:0] zext_ln415_9_fu_1500_p1;
wire   [34:0] grp_fu_1517_p1;
wire   [54:0] lhs_21_fu_1535_p3;
wire   [54:0] ret_V_10_fu_1542_p2;
wire   [0:0] p_Result_29_fu_1557_p3;
wire   [0:0] r_10_fu_1573_p2;
wire   [0:0] or_ln412_10_fu_1578_p2;
wire   [0:0] p_Result_50_fu_1565_p3;
wire   [0:0] and_ln412_10_fu_1584_p2;
wire   [35:0] num_V_54_fu_1547_p4;
wire   [35:0] zext_ln415_10_fu_1590_p1;
wire   [34:0] grp_fu_1607_p1;
wire   [54:0] lhs_23_fu_1625_p3;
wire   [54:0] ret_V_11_fu_1632_p2;
wire   [0:0] p_Result_31_fu_1647_p3;
wire   [0:0] r_11_fu_1663_p2;
wire   [0:0] or_ln412_11_fu_1668_p2;
wire   [0:0] p_Result_51_fu_1655_p3;
wire   [0:0] and_ln412_11_fu_1674_p2;
wire   [35:0] num_V_56_fu_1637_p4;
wire   [35:0] zext_ln415_11_fu_1680_p1;
wire   [34:0] grp_fu_1697_p1;
wire   [54:0] lhs_25_fu_1715_p3;
wire   [54:0] ret_V_12_fu_1722_p2;
wire   [0:0] p_Result_33_fu_1737_p3;
wire   [0:0] r_12_fu_1753_p2;
wire   [0:0] or_ln412_12_fu_1758_p2;
wire   [0:0] p_Result_52_fu_1745_p3;
wire   [0:0] and_ln412_12_fu_1764_p2;
wire   [35:0] num_V_58_fu_1727_p4;
wire   [35:0] zext_ln415_12_fu_1770_p1;
wire   [34:0] grp_fu_1787_p1;
wire   [54:0] lhs_27_fu_1805_p3;
wire   [54:0] ret_V_13_fu_1812_p2;
wire   [0:0] p_Result_35_fu_1827_p3;
wire   [0:0] r_13_fu_1843_p2;
wire   [0:0] or_ln412_13_fu_1848_p2;
wire   [0:0] p_Result_53_fu_1835_p3;
wire   [0:0] and_ln412_13_fu_1854_p2;
wire   [35:0] num_V_60_fu_1817_p4;
wire   [35:0] zext_ln415_13_fu_1860_p1;
wire   [34:0] grp_fu_1877_p1;
wire   [54:0] lhs_29_fu_1882_p3;
wire   [54:0] ret_V_14_fu_1889_p2;
wire   [0:0] p_Result_37_fu_1904_p3;
wire   [0:0] r_14_fu_1920_p2;
wire   [0:0] or_ln412_14_fu_1925_p2;
wire   [0:0] p_Result_54_fu_1912_p3;
wire   [0:0] and_ln412_14_fu_1931_p2;
wire   [35:0] num_V_62_fu_1894_p4;
wire   [35:0] zext_ln415_14_fu_1937_p1;
wire   [54:0] lhs_31_fu_1951_p3;
wire   [54:0] ret_V_15_fu_1958_p2;
wire   [0:0] p_Result_39_fu_1973_p3;
wire   [0:0] r_15_fu_1989_p2;
wire   [0:0] or_ln412_15_fu_1994_p2;
wire   [0:0] p_Result_55_fu_1981_p3;
wire   [0:0] and_ln412_15_fu_2000_p2;
wire   [35:0] num_V_64_fu_1963_p4;
wire   [35:0] zext_ln415_15_fu_2006_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U991(
    .din0(36'd68719335055),
    .din1(36'd68719325256),
    .din2(36'd68719351469),
    .din3(36'd68719364146),
    .din4(trunc_ln307_fu_496_p1),
    .dout(aux2_V_fu_500_p6)
);

master_fix_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U992(
    .din0(1'd1),
    .din1(ap_phi_mux_write_flag_0_phi_fu_405_p4),
    .din2(ap_phi_mux_write_flag_0_phi_fu_405_p4),
    .din3(ap_phi_mux_write_flag_0_phi_fu_405_p4),
    .din4(trunc_ln307_fu_496_p1),
    .dout(write_flag_1_fu_514_p6)
);

master_fix_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U993(
    .din0(ap_phi_mux_write_flag11_0_phi_fu_395_p4),
    .din1(ap_phi_mux_write_flag11_0_phi_fu_395_p4),
    .din2(ap_phi_mux_write_flag11_0_phi_fu_395_p4),
    .din3(1'd1),
    .din4(trunc_ln307_fu_496_p1),
    .dout(write_flag11_1_fu_528_p6)
);

master_fix_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U994(
    .din0(ap_phi_mux_write_flag8_0_phi_fu_385_p4),
    .din1(ap_phi_mux_write_flag8_0_phi_fu_385_p4),
    .din2(1'd1),
    .din3(ap_phi_mux_write_flag8_0_phi_fu_385_p4),
    .din4(trunc_ln307_fu_496_p1),
    .dout(write_flag8_1_fu_542_p6)
);

master_fix_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U995(
    .din0(ap_phi_mux_write_flag4_0_phi_fu_375_p4),
    .din1(1'd1),
    .din2(ap_phi_mux_write_flag4_0_phi_fu_375_p4),
    .din3(ap_phi_mux_write_flag4_0_phi_fu_375_p4),
    .din4(trunc_ln307_fu_496_p1),
    .dout(write_flag4_1_fu_556_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U996(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_reg_2255),
    .din1(grp_fu_578_p1),
    .ce(1'b1),
    .dout(grp_fu_578_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U997(
    .din0(36'd174627),
    .din1(36'd68719280653),
    .din2(36'd68719341658),
    .din3(36'd29738),
    .din4(trunc_ln307_reg_2231),
    .dout(aux2_V_1_fu_583_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U998(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_1_reg_2285),
    .din1(grp_fu_603_p1),
    .ce(1'b1),
    .dout(grp_fu_603_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U999(
    .din0(36'd68719395091),
    .din1(36'd68719370122),
    .din2(36'd68719367899),
    .din3(36'd68719378022),
    .din4(trunc_ln307_reg_2231_pp0_iter1_reg),
    .dout(aux2_V_2_fu_608_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1000(
    .din0(36'd68718728804),
    .din1(36'd571519),
    .din2(36'd68718843845),
    .din3(36'd68719379821),
    .din4(trunc_ln307_reg_2231_pp0_iter2_reg),
    .dout(num_V_33_fu_621_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1001(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_2_reg_2305),
    .din1(grp_fu_707_p1),
    .ce(1'b1),
    .dout(grp_fu_707_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1002(
    .din0(36'd110708),
    .din1(36'd122146),
    .din2(36'd100027),
    .din3(36'd109525),
    .din4(trunc_ln307_reg_2231_pp0_iter2_reg),
    .dout(aux2_V_3_fu_712_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1003(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_3_reg_2330),
    .din1(grp_fu_797_p1),
    .ce(1'b1),
    .dout(grp_fu_797_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1004(
    .din0(36'd167574),
    .din1(36'd132848),
    .din2(36'd128620),
    .din3(36'd137057),
    .din4(trunc_ln307_reg_2231_pp0_iter3_reg),
    .dout(aux2_V_4_fu_802_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1005(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_4_reg_2355),
    .din1(grp_fu_887_p1),
    .ce(1'b1),
    .dout(grp_fu_887_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1006(
    .din0(36'd25837),
    .din1(36'd68719476481),
    .din2(36'd22337),
    .din3(36'd33466),
    .din4(trunc_ln307_reg_2231_pp0_iter4_reg),
    .dout(aux2_V_5_fu_892_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1007(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_5_reg_2380),
    .din1(grp_fu_977_p1),
    .ce(1'b1),
    .dout(grp_fu_977_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1008(
    .din0(36'd68719468788),
    .din1(36'd68719317836),
    .din2(36'd60521),
    .din3(36'd239361),
    .din4(trunc_ln307_reg_2231_pp0_iter5_reg),
    .dout(aux2_V_6_fu_982_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1009(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_6_reg_2405),
    .din1(grp_fu_1067_p1),
    .ce(1'b1),
    .dout(grp_fu_1067_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1010(
    .din0(36'd68719387351),
    .din1(36'd68719378713),
    .din2(36'd68719397147),
    .din3(36'd68719389800),
    .din4(trunc_ln307_reg_2231_pp0_iter6_reg),
    .dout(aux2_V_7_fu_1072_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1011(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_7_reg_2430),
    .din1(grp_fu_1157_p1),
    .ce(1'b1),
    .dout(grp_fu_1157_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1012(
    .din0(36'd68719354435),
    .din1(36'd68719309392),
    .din2(36'd68719308670),
    .din3(36'd68719310407),
    .din4(trunc_ln307_reg_2231_pp0_iter7_reg),
    .dout(aux2_V_8_fu_1162_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1013(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_8_reg_2455),
    .din1(grp_fu_1247_p1),
    .ce(1'b1),
    .dout(grp_fu_1247_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1014(
    .din0(36'd68719313760),
    .din1(36'd68719333075),
    .din2(36'd68719440609),
    .din3(36'd74901),
    .din4(trunc_ln307_reg_2231_pp0_iter8_reg),
    .dout(aux2_V_9_fu_1252_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1015(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_9_reg_2480),
    .din1(grp_fu_1337_p1),
    .ce(1'b1),
    .dout(grp_fu_1337_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1016(
    .din0(36'd49188),
    .din1(36'd40999),
    .din2(36'd63703),
    .din3(36'd52185),
    .din4(trunc_ln307_reg_2231_pp0_iter9_reg),
    .dout(aux2_V_10_fu_1342_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1017(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_10_reg_2505),
    .din1(grp_fu_1427_p1),
    .ce(1'b1),
    .dout(grp_fu_1427_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1018(
    .din0(36'd7366),
    .din1(36'd193555),
    .din2(36'd180751),
    .din3(36'd217179),
    .din4(trunc_ln307_reg_2231_pp0_iter10_reg),
    .dout(aux2_V_11_fu_1432_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1019(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_11_reg_2530),
    .din1(grp_fu_1517_p1),
    .ce(1'b1),
    .dout(grp_fu_1517_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1020(
    .din0(36'd68719336478),
    .din1(36'd68719353732),
    .din2(36'd68719332761),
    .din3(36'd68719339868),
    .din4(trunc_ln307_reg_2231_pp0_iter11_reg),
    .dout(aux2_V_12_fu_1522_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1021(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_12_reg_2555),
    .din1(grp_fu_1607_p1),
    .ce(1'b1),
    .dout(grp_fu_1607_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1022(
    .din0(36'd68719398386),
    .din1(36'd68719357000),
    .din2(36'd68719375805),
    .din3(36'd68719425484),
    .din4(trunc_ln307_reg_2231_pp0_iter12_reg),
    .dout(aux2_V_13_fu_1612_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1023(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_13_reg_2580),
    .din1(grp_fu_1697_p1),
    .ce(1'b1),
    .dout(grp_fu_1697_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1024(
    .din0(36'd68719293139),
    .din1(36'd68719320317),
    .din2(36'd68719343598),
    .din3(36'd68719300599),
    .din4(trunc_ln307_reg_2231_pp0_iter13_reg),
    .dout(aux2_V_14_fu_1702_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1025(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_14_reg_2605),
    .din1(grp_fu_1787_p1),
    .ce(1'b1),
    .dout(grp_fu_1787_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1026(
    .din0(36'd145266),
    .din1(36'd131943),
    .din2(36'd140157),
    .din3(36'd161877),
    .din4(trunc_ln307_reg_2231_pp0_iter14_reg),
    .dout(aux2_V_15_fu_1792_p6)
);

master_fix_mul_36s_35ns_55_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 55 ))
mul_36s_35ns_55_2_1_U1027(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(aux2_V_15_reg_2630),
    .din1(grp_fu_1877_p1),
    .ce(1'b1),
    .dout(grp_fu_1877_p2)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1028(
    .din0(out_03_04_fu_232),
    .din1(out_03_04_fu_232),
    .din2(out_03_04_fu_232),
    .din3(num_V_reg_2670),
    .din4(trunc_ln307_reg_2231_pp0_iter18_reg),
    .dout(out_03_1_fu_2028_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1029(
    .din0(out_02_05_fu_236),
    .din1(out_02_05_fu_236),
    .din2(num_V_reg_2670),
    .din3(out_02_05_fu_236),
    .din4(trunc_ln307_reg_2231_pp0_iter18_reg),
    .dout(out_02_1_fu_2040_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1030(
    .din0(num_V_reg_2670),
    .din1(out_0_06_fu_240),
    .din2(out_0_06_fu_240),
    .din3(out_0_06_fu_240),
    .din4(trunc_ln307_reg_2231_pp0_iter18_reg),
    .dout(out_0_1_fu_2052_p6)
);

master_fix_mux_42_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .din2_WIDTH( 36 ),
    .din3_WIDTH( 36 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 36 ))
mux_42_36_1_1_U1031(
    .din0(out_016_07_fu_244),
    .din1(num_V_reg_2670),
    .din2(out_016_07_fu_244),
    .din3(out_016_07_fu_244),
    .din4(trunc_ln307_reg_2231_pp0_iter18_reg),
    .dout(out_016_1_fu_2064_p6)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln306_fu_484_p2 == 1'd0))) begin
            d_fu_228 <= add_ln306_fu_490_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            d_fu_228 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln306_reg_2227_pp0_iter10_reg <= icmp_ln306_reg_2227_pp0_iter9_reg;
        icmp_ln306_reg_2227_pp0_iter11_reg <= icmp_ln306_reg_2227_pp0_iter10_reg;
        icmp_ln306_reg_2227_pp0_iter12_reg <= icmp_ln306_reg_2227_pp0_iter11_reg;
        icmp_ln306_reg_2227_pp0_iter13_reg <= icmp_ln306_reg_2227_pp0_iter12_reg;
        icmp_ln306_reg_2227_pp0_iter14_reg <= icmp_ln306_reg_2227_pp0_iter13_reg;
        icmp_ln306_reg_2227_pp0_iter15_reg <= icmp_ln306_reg_2227_pp0_iter14_reg;
        icmp_ln306_reg_2227_pp0_iter16_reg <= icmp_ln306_reg_2227_pp0_iter15_reg;
        icmp_ln306_reg_2227_pp0_iter17_reg <= icmp_ln306_reg_2227_pp0_iter16_reg;
        icmp_ln306_reg_2227_pp0_iter18_reg <= icmp_ln306_reg_2227_pp0_iter17_reg;
        icmp_ln306_reg_2227_pp0_iter2_reg <= icmp_ln306_reg_2227_pp0_iter1_reg;
        icmp_ln306_reg_2227_pp0_iter3_reg <= icmp_ln306_reg_2227_pp0_iter2_reg;
        icmp_ln306_reg_2227_pp0_iter4_reg <= icmp_ln306_reg_2227_pp0_iter3_reg;
        icmp_ln306_reg_2227_pp0_iter5_reg <= icmp_ln306_reg_2227_pp0_iter4_reg;
        icmp_ln306_reg_2227_pp0_iter6_reg <= icmp_ln306_reg_2227_pp0_iter5_reg;
        icmp_ln306_reg_2227_pp0_iter7_reg <= icmp_ln306_reg_2227_pp0_iter6_reg;
        icmp_ln306_reg_2227_pp0_iter8_reg <= icmp_ln306_reg_2227_pp0_iter7_reg;
        icmp_ln306_reg_2227_pp0_iter9_reg <= icmp_ln306_reg_2227_pp0_iter8_reg;
        trunc_ln307_reg_2231_pp0_iter10_reg <= trunc_ln307_reg_2231_pp0_iter9_reg;
        trunc_ln307_reg_2231_pp0_iter11_reg <= trunc_ln307_reg_2231_pp0_iter10_reg;
        trunc_ln307_reg_2231_pp0_iter12_reg <= trunc_ln307_reg_2231_pp0_iter11_reg;
        trunc_ln307_reg_2231_pp0_iter13_reg <= trunc_ln307_reg_2231_pp0_iter12_reg;
        trunc_ln307_reg_2231_pp0_iter14_reg <= trunc_ln307_reg_2231_pp0_iter13_reg;
        trunc_ln307_reg_2231_pp0_iter15_reg <= trunc_ln307_reg_2231_pp0_iter14_reg;
        trunc_ln307_reg_2231_pp0_iter16_reg <= trunc_ln307_reg_2231_pp0_iter15_reg;
        trunc_ln307_reg_2231_pp0_iter17_reg <= trunc_ln307_reg_2231_pp0_iter16_reg;
        trunc_ln307_reg_2231_pp0_iter18_reg <= trunc_ln307_reg_2231_pp0_iter17_reg;
        trunc_ln307_reg_2231_pp0_iter2_reg <= trunc_ln307_reg_2231_pp0_iter1_reg;
        trunc_ln307_reg_2231_pp0_iter3_reg <= trunc_ln307_reg_2231_pp0_iter2_reg;
        trunc_ln307_reg_2231_pp0_iter4_reg <= trunc_ln307_reg_2231_pp0_iter3_reg;
        trunc_ln307_reg_2231_pp0_iter5_reg <= trunc_ln307_reg_2231_pp0_iter4_reg;
        trunc_ln307_reg_2231_pp0_iter6_reg <= trunc_ln307_reg_2231_pp0_iter5_reg;
        trunc_ln307_reg_2231_pp0_iter7_reg <= trunc_ln307_reg_2231_pp0_iter6_reg;
        trunc_ln307_reg_2231_pp0_iter8_reg <= trunc_ln307_reg_2231_pp0_iter7_reg;
        trunc_ln307_reg_2231_pp0_iter9_reg <= trunc_ln307_reg_2231_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln306_reg_2227 <= icmp_ln306_fu_484_p2;
        icmp_ln306_reg_2227_pp0_iter1_reg <= icmp_ln306_reg_2227;
        r_V_10_cast_cast_reg_2197[34 : 0] <= r_V_10_cast_cast_fu_452_p1[34 : 0];
        r_V_12_cast_cast_reg_2192[34 : 0] <= r_V_12_cast_cast_fu_448_p1[34 : 0];
        r_V_14_cast_cast_reg_2187[34 : 0] <= r_V_14_cast_cast_fu_444_p1[34 : 0];
        r_V_16_cast_cast_reg_2182[34 : 0] <= r_V_16_cast_cast_fu_440_p1[34 : 0];
        r_V_18_cast_cast_reg_2177[34 : 0] <= r_V_18_cast_cast_fu_436_p1[34 : 0];
        r_V_20_cast_cast_reg_2172[34 : 0] <= r_V_20_cast_cast_fu_432_p1[34 : 0];
        r_V_22_cast_cast_reg_2167[34 : 0] <= r_V_22_cast_cast_fu_428_p1[34 : 0];
        r_V_24_cast_cast_reg_2162[34 : 0] <= r_V_24_cast_cast_fu_424_p1[34 : 0];
        r_V_26_cast_cast_reg_2157[34 : 0] <= r_V_26_cast_cast_fu_420_p1[34 : 0];
        r_V_28_cast_cast_reg_2152[34 : 0] <= r_V_28_cast_cast_fu_416_p1[34 : 0];
        r_V_2_cast_cast_reg_2217[34 : 0] <= r_V_2_cast_cast_fu_468_p1[34 : 0];
        r_V_4_cast_cast_reg_2212[34 : 0] <= r_V_4_cast_cast_fu_464_p1[34 : 0];
        r_V_6_cast_cast_reg_2207[34 : 0] <= r_V_6_cast_cast_fu_460_p1[34 : 0];
        r_V_8_cast_cast_reg_2202[34 : 0] <= r_V_8_cast_cast_fu_456_p1[34 : 0];
        r_V_cast_cast_reg_2222[34 : 0] <= r_V_cast_cast_fu_472_p1[34 : 0];
        trunc_ln307_reg_2231_pp0_iter1_reg <= trunc_ln307_reg_2231;
        zext_ln306_cast_reg_2147[34 : 0] <= zext_ln306_cast_fu_412_p1[34 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_10_reg_2505 <= aux2_V_10_fu_1342_p6;
        num_V_49_reg_2485 <= num_V_49_fu_1324_p2;
        r_V_9_reg_2490 <= grp_fu_1247_p2;
        trunc_ln727_8_reg_2495 <= trunc_ln727_8_fu_1330_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_11_reg_2530 <= aux2_V_11_fu_1432_p6;
        num_V_51_reg_2510 <= num_V_51_fu_1414_p2;
        r_V_10_reg_2515 <= grp_fu_1337_p2;
        trunc_ln727_9_reg_2520 <= trunc_ln727_9_fu_1420_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_12_reg_2555 <= aux2_V_12_fu_1522_p6;
        num_V_53_reg_2535 <= num_V_53_fu_1504_p2;
        r_V_11_reg_2540 <= grp_fu_1427_p2;
        trunc_ln727_10_reg_2545 <= trunc_ln727_10_fu_1510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_13_reg_2580 <= aux2_V_13_fu_1612_p6;
        num_V_55_reg_2560 <= num_V_55_fu_1594_p2;
        r_V_12_reg_2565 <= grp_fu_1517_p2;
        trunc_ln727_11_reg_2570 <= trunc_ln727_11_fu_1600_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_14_reg_2605 <= aux2_V_14_fu_1702_p6;
        num_V_57_reg_2585 <= num_V_57_fu_1684_p2;
        r_V_13_reg_2590 <= grp_fu_1607_p2;
        trunc_ln727_12_reg_2595 <= trunc_ln727_12_fu_1690_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_15_reg_2630 <= aux2_V_15_fu_1792_p6;
        num_V_59_reg_2610 <= num_V_59_fu_1774_p2;
        r_V_14_reg_2615 <= grp_fu_1697_p2;
        trunc_ln727_13_reg_2620 <= trunc_ln727_13_fu_1780_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_1_reg_2285 <= aux2_V_1_fu_583_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_2_reg_2305 <= aux2_V_2_fu_608_p6;
        r_V_reg_2290 <= grp_fu_578_p2;
        trunc_ln727_reg_2295 <= trunc_ln727_fu_596_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_3_reg_2330 <= aux2_V_3_fu_712_p6;
        num_V_35_reg_2310 <= num_V_35_fu_694_p2;
        r_V_2_reg_2315 <= grp_fu_603_p2;
        trunc_ln727_1_reg_2320 <= trunc_ln727_1_fu_700_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_4_reg_2355 <= aux2_V_4_fu_802_p6;
        num_V_37_reg_2335 <= num_V_37_fu_784_p2;
        r_V_3_reg_2340 <= grp_fu_707_p2;
        trunc_ln727_2_reg_2345 <= trunc_ln727_2_fu_790_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_5_reg_2380 <= aux2_V_5_fu_892_p6;
        num_V_39_reg_2360 <= num_V_39_fu_874_p2;
        r_V_4_reg_2365 <= grp_fu_797_p2;
        trunc_ln727_3_reg_2370 <= trunc_ln727_3_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_6_reg_2405 <= aux2_V_6_fu_982_p6;
        num_V_41_reg_2385 <= num_V_41_fu_964_p2;
        r_V_5_reg_2390 <= grp_fu_887_p2;
        trunc_ln727_4_reg_2395 <= trunc_ln727_4_fu_970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_7_reg_2430 <= aux2_V_7_fu_1072_p6;
        num_V_43_reg_2410 <= num_V_43_fu_1054_p2;
        r_V_6_reg_2415 <= grp_fu_977_p2;
        trunc_ln727_5_reg_2420 <= trunc_ln727_5_fu_1060_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_8_reg_2455 <= aux2_V_8_fu_1162_p6;
        num_V_45_reg_2435 <= num_V_45_fu_1144_p2;
        r_V_7_reg_2440 <= grp_fu_1067_p2;
        trunc_ln727_6_reg_2445 <= trunc_ln727_6_fu_1150_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_9_reg_2480 <= aux2_V_9_fu_1252_p6;
        num_V_47_reg_2460 <= num_V_47_fu_1234_p2;
        r_V_8_reg_2465 <= grp_fu_1157_p2;
        trunc_ln727_7_reg_2470 <= trunc_ln727_7_fu_1240_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln306_fu_484_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aux2_V_reg_2255 <= aux2_V_fu_500_p6;
        trunc_ln307_reg_2231 <= trunc_ln307_fu_496_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_V_61_reg_2635 <= num_V_61_fu_1864_p2;
        r_V_15_reg_2640 <= grp_fu_1787_p2;
        trunc_ln727_14_reg_2645 <= trunc_ln727_14_fu_1870_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_V_63_reg_2655 <= num_V_63_fu_1941_p2;
        r_V_16_reg_2660 <= grp_fu_1877_p2;
        trunc_ln727_15_reg_2665 <= trunc_ln727_15_fu_1947_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln306_reg_2227_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        num_V_reg_2670 <= num_V_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln306_reg_2227_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_016_07_fu_244 <= out_016_1_fu_2064_p6;
        out_02_05_fu_236 <= out_02_1_fu_2040_p6;
        out_03_04_fu_232 <= out_03_1_fu_2028_p6;
        out_0_06_fu_240 <= out_0_1_fu_2052_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln306_fu_484_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag11_0_reg_392 <= write_flag11_1_fu_528_p6;
        write_flag4_0_reg_372 <= write_flag4_1_fu_556_p6;
        write_flag8_0_reg_382 <= write_flag8_1_fu_542_p6;
        write_flag_0_reg_402 <= write_flag_1_fu_514_p6;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln306_fu_484_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_write_flag11_0_phi_fu_395_p4 = 1'd0;
    end else begin
        ap_phi_mux_write_flag11_0_phi_fu_395_p4 = write_flag11_0_reg_392;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_write_flag4_0_phi_fu_375_p4 = 1'd0;
    end else begin
        ap_phi_mux_write_flag4_0_phi_fu_375_p4 = write_flag4_0_reg_372;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_write_flag8_0_phi_fu_385_p4 = 1'd0;
    end else begin
        ap_phi_mux_write_flag8_0_phi_fu_385_p4 = write_flag8_0_reg_382;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_write_flag_0_phi_fu_405_p4 = 1'd0;
    end else begin
        ap_phi_mux_write_flag_0_phi_fu_405_p4 = write_flag_0_reg_402;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_d_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_d_1 = d_fu_228;
    end
end

always @ (*) begin
    if (((icmp_ln306_reg_2227_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_016_07_out_ap_vld = 1'b1;
    end else begin
        out_016_07_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln306_reg_2227_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_02_05_out_ap_vld = 1'b1;
    end else begin
        out_02_05_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln306_reg_2227_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_03_04_out_ap_vld = 1'b1;
    end else begin
        out_03_04_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln306_reg_2227_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_0_06_out_ap_vld = 1'b1;
    end else begin
        out_0_06_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln306_fu_490_p2 = (ap_sig_allocacmp_d_1 + 3'd1);

assign and_ln412_10_fu_1584_p2 = (p_Result_50_fu_1565_p3 & or_ln412_10_fu_1578_p2);

assign and_ln412_11_fu_1674_p2 = (p_Result_51_fu_1655_p3 & or_ln412_11_fu_1668_p2);

assign and_ln412_12_fu_1764_p2 = (p_Result_52_fu_1745_p3 & or_ln412_12_fu_1758_p2);

assign and_ln412_13_fu_1854_p2 = (p_Result_53_fu_1835_p3 & or_ln412_13_fu_1848_p2);

assign and_ln412_14_fu_1931_p2 = (p_Result_54_fu_1912_p3 & or_ln412_14_fu_1925_p2);

assign and_ln412_15_fu_2000_p2 = (p_Result_55_fu_1981_p3 & or_ln412_15_fu_1994_p2);

assign and_ln412_1_fu_774_p2 = (p_Result_41_fu_755_p3 & or_ln412_1_fu_768_p2);

assign and_ln412_2_fu_864_p2 = (p_Result_42_fu_845_p3 & or_ln412_2_fu_858_p2);

assign and_ln412_3_fu_954_p2 = (p_Result_43_fu_935_p3 & or_ln412_3_fu_948_p2);

assign and_ln412_4_fu_1044_p2 = (p_Result_44_fu_1025_p3 & or_ln412_4_fu_1038_p2);

assign and_ln412_5_fu_1134_p2 = (p_Result_45_fu_1115_p3 & or_ln412_5_fu_1128_p2);

assign and_ln412_6_fu_1224_p2 = (p_Result_46_fu_1205_p3 & or_ln412_6_fu_1218_p2);

assign and_ln412_7_fu_1314_p2 = (p_Result_47_fu_1295_p3 & or_ln412_7_fu_1308_p2);

assign and_ln412_8_fu_1404_p2 = (p_Result_48_fu_1385_p3 & or_ln412_8_fu_1398_p2);

assign and_ln412_9_fu_1494_p2 = (p_Result_49_fu_1475_p3 & or_ln412_9_fu_1488_p2);

assign and_ln412_fu_684_p2 = (p_Result_40_fu_665_p3 & or_ln412_fu_678_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_1067_p1 = r_V_12_cast_cast_reg_2192;

assign grp_fu_1157_p1 = r_V_14_cast_cast_reg_2187;

assign grp_fu_1247_p1 = r_V_16_cast_cast_reg_2182;

assign grp_fu_1337_p1 = r_V_18_cast_cast_reg_2177;

assign grp_fu_1427_p1 = r_V_20_cast_cast_reg_2172;

assign grp_fu_1517_p1 = r_V_22_cast_cast_reg_2167;

assign grp_fu_1607_p1 = r_V_24_cast_cast_reg_2162;

assign grp_fu_1697_p1 = r_V_26_cast_cast_reg_2157;

assign grp_fu_1787_p1 = r_V_28_cast_cast_reg_2152;

assign grp_fu_1877_p1 = zext_ln306_cast_reg_2147;

assign grp_fu_578_p1 = r_V_cast_cast_reg_2222;

assign grp_fu_603_p1 = r_V_2_cast_cast_reg_2217;

assign grp_fu_707_p1 = r_V_4_cast_cast_reg_2212;

assign grp_fu_797_p1 = r_V_6_cast_cast_reg_2207;

assign grp_fu_887_p1 = r_V_8_cast_cast_reg_2202;

assign grp_fu_977_p1 = r_V_10_cast_cast_reg_2197;

assign icmp_ln306_fu_484_p2 = ((ap_sig_allocacmp_d_1 == 3'd4) ? 1'b1 : 1'b0);

assign lhs_11_fu_1085_p3 = {{num_V_43_reg_2410}, {19'd0}};

assign lhs_13_fu_1175_p3 = {{num_V_45_reg_2435}, {19'd0}};

assign lhs_15_fu_1265_p3 = {{num_V_47_reg_2460}, {19'd0}};

assign lhs_17_fu_1355_p3 = {{num_V_49_reg_2485}, {19'd0}};

assign lhs_19_fu_1445_p3 = {{num_V_51_reg_2510}, {19'd0}};

assign lhs_1_fu_634_p3 = {{num_V_33_fu_621_p6}, {19'd0}};

assign lhs_21_fu_1535_p3 = {{num_V_53_reg_2535}, {19'd0}};

assign lhs_23_fu_1625_p3 = {{num_V_55_reg_2560}, {19'd0}};

assign lhs_25_fu_1715_p3 = {{num_V_57_reg_2585}, {19'd0}};

assign lhs_27_fu_1805_p3 = {{num_V_59_reg_2610}, {19'd0}};

assign lhs_29_fu_1882_p3 = {{num_V_61_reg_2635}, {19'd0}};

assign lhs_31_fu_1951_p3 = {{num_V_63_reg_2655}, {19'd0}};

assign lhs_3_fu_725_p3 = {{num_V_35_reg_2310}, {19'd0}};

assign lhs_5_fu_815_p3 = {{num_V_37_reg_2335}, {19'd0}};

assign lhs_7_fu_905_p3 = {{num_V_39_reg_2360}, {19'd0}};

assign lhs_9_fu_995_p3 = {{num_V_41_reg_2385}, {19'd0}};

assign num_V_34_fu_647_p4 = {{ret_V_fu_642_p2[54:19]}};

assign num_V_35_fu_694_p2 = (num_V_34_fu_647_p4 + zext_ln415_fu_690_p1);

assign num_V_36_fu_737_p4 = {{ret_V_1_fu_732_p2[54:19]}};

assign num_V_37_fu_784_p2 = (num_V_36_fu_737_p4 + zext_ln415_1_fu_780_p1);

assign num_V_38_fu_827_p4 = {{ret_V_2_fu_822_p2[54:19]}};

assign num_V_39_fu_874_p2 = (num_V_38_fu_827_p4 + zext_ln415_2_fu_870_p1);

assign num_V_40_fu_917_p4 = {{ret_V_3_fu_912_p2[54:19]}};

assign num_V_41_fu_964_p2 = (num_V_40_fu_917_p4 + zext_ln415_3_fu_960_p1);

assign num_V_42_fu_1007_p4 = {{ret_V_4_fu_1002_p2[54:19]}};

assign num_V_43_fu_1054_p2 = (num_V_42_fu_1007_p4 + zext_ln415_4_fu_1050_p1);

assign num_V_44_fu_1097_p4 = {{ret_V_5_fu_1092_p2[54:19]}};

assign num_V_45_fu_1144_p2 = (num_V_44_fu_1097_p4 + zext_ln415_5_fu_1140_p1);

assign num_V_46_fu_1187_p4 = {{ret_V_6_fu_1182_p2[54:19]}};

assign num_V_47_fu_1234_p2 = (num_V_46_fu_1187_p4 + zext_ln415_6_fu_1230_p1);

assign num_V_48_fu_1277_p4 = {{ret_V_7_fu_1272_p2[54:19]}};

assign num_V_49_fu_1324_p2 = (num_V_48_fu_1277_p4 + zext_ln415_7_fu_1320_p1);

assign num_V_50_fu_1367_p4 = {{ret_V_8_fu_1362_p2[54:19]}};

assign num_V_51_fu_1414_p2 = (num_V_50_fu_1367_p4 + zext_ln415_8_fu_1410_p1);

assign num_V_52_fu_1457_p4 = {{ret_V_9_fu_1452_p2[54:19]}};

assign num_V_53_fu_1504_p2 = (num_V_52_fu_1457_p4 + zext_ln415_9_fu_1500_p1);

assign num_V_54_fu_1547_p4 = {{ret_V_10_fu_1542_p2[54:19]}};

assign num_V_55_fu_1594_p2 = (num_V_54_fu_1547_p4 + zext_ln415_10_fu_1590_p1);

assign num_V_56_fu_1637_p4 = {{ret_V_11_fu_1632_p2[54:19]}};

assign num_V_57_fu_1684_p2 = (num_V_56_fu_1637_p4 + zext_ln415_11_fu_1680_p1);

assign num_V_58_fu_1727_p4 = {{ret_V_12_fu_1722_p2[54:19]}};

assign num_V_59_fu_1774_p2 = (num_V_58_fu_1727_p4 + zext_ln415_12_fu_1770_p1);

assign num_V_60_fu_1817_p4 = {{ret_V_13_fu_1812_p2[54:19]}};

assign num_V_61_fu_1864_p2 = (num_V_60_fu_1817_p4 + zext_ln415_13_fu_1860_p1);

assign num_V_62_fu_1894_p4 = {{ret_V_14_fu_1889_p2[54:19]}};

assign num_V_63_fu_1941_p2 = (num_V_62_fu_1894_p4 + zext_ln415_14_fu_1937_p1);

assign num_V_64_fu_1963_p4 = {{ret_V_15_fu_1958_p2[54:19]}};

assign num_V_fu_2010_p2 = (num_V_64_fu_1963_p4 + zext_ln415_15_fu_2006_p1);

assign or_ln412_10_fu_1578_p2 = (r_10_fu_1573_p2 | p_Result_29_fu_1557_p3);

assign or_ln412_11_fu_1668_p2 = (r_11_fu_1663_p2 | p_Result_31_fu_1647_p3);

assign or_ln412_12_fu_1758_p2 = (r_12_fu_1753_p2 | p_Result_33_fu_1737_p3);

assign or_ln412_13_fu_1848_p2 = (r_13_fu_1843_p2 | p_Result_35_fu_1827_p3);

assign or_ln412_14_fu_1925_p2 = (r_14_fu_1920_p2 | p_Result_37_fu_1904_p3);

assign or_ln412_15_fu_1994_p2 = (r_15_fu_1989_p2 | p_Result_39_fu_1973_p3);

assign or_ln412_1_fu_768_p2 = (r_1_fu_763_p2 | p_Result_11_fu_747_p3);

assign or_ln412_2_fu_858_p2 = (r_2_fu_853_p2 | p_Result_13_fu_837_p3);

assign or_ln412_3_fu_948_p2 = (r_3_fu_943_p2 | p_Result_15_fu_927_p3);

assign or_ln412_4_fu_1038_p2 = (r_4_fu_1033_p2 | p_Result_17_fu_1017_p3);

assign or_ln412_5_fu_1128_p2 = (r_5_fu_1123_p2 | p_Result_19_fu_1107_p3);

assign or_ln412_6_fu_1218_p2 = (r_6_fu_1213_p2 | p_Result_21_fu_1197_p3);

assign or_ln412_7_fu_1308_p2 = (r_7_fu_1303_p2 | p_Result_23_fu_1287_p3);

assign or_ln412_8_fu_1398_p2 = (r_8_fu_1393_p2 | p_Result_25_fu_1377_p3);

assign or_ln412_9_fu_1488_p2 = (r_9_fu_1483_p2 | p_Result_27_fu_1467_p3);

assign or_ln412_fu_678_p2 = (r_fu_673_p2 | p_Result_s_fu_657_p3);

assign out_016_07_out = out_016_07_fu_244;

assign out_02_05_out = out_02_05_fu_236;

assign out_03_04_out = out_03_04_fu_232;

assign out_0_06_out = out_0_06_fu_240;

assign p_Result_11_fu_747_p3 = ret_V_1_fu_732_p2[32'd19];

assign p_Result_13_fu_837_p3 = ret_V_2_fu_822_p2[32'd19];

assign p_Result_15_fu_927_p3 = ret_V_3_fu_912_p2[32'd19];

assign p_Result_17_fu_1017_p3 = ret_V_4_fu_1002_p2[32'd19];

assign p_Result_19_fu_1107_p3 = ret_V_5_fu_1092_p2[32'd19];

assign p_Result_21_fu_1197_p3 = ret_V_6_fu_1182_p2[32'd19];

assign p_Result_23_fu_1287_p3 = ret_V_7_fu_1272_p2[32'd19];

assign p_Result_25_fu_1377_p3 = ret_V_8_fu_1362_p2[32'd19];

assign p_Result_27_fu_1467_p3 = ret_V_9_fu_1452_p2[32'd19];

assign p_Result_29_fu_1557_p3 = ret_V_10_fu_1542_p2[32'd19];

assign p_Result_31_fu_1647_p3 = ret_V_11_fu_1632_p2[32'd19];

assign p_Result_33_fu_1737_p3 = ret_V_12_fu_1722_p2[32'd19];

assign p_Result_35_fu_1827_p3 = ret_V_13_fu_1812_p2[32'd19];

assign p_Result_37_fu_1904_p3 = ret_V_14_fu_1889_p2[32'd19];

assign p_Result_39_fu_1973_p3 = ret_V_15_fu_1958_p2[32'd19];

assign p_Result_40_fu_665_p3 = ret_V_fu_642_p2[32'd18];

assign p_Result_41_fu_755_p3 = ret_V_1_fu_732_p2[32'd18];

assign p_Result_42_fu_845_p3 = ret_V_2_fu_822_p2[32'd18];

assign p_Result_43_fu_935_p3 = ret_V_3_fu_912_p2[32'd18];

assign p_Result_44_fu_1025_p3 = ret_V_4_fu_1002_p2[32'd18];

assign p_Result_45_fu_1115_p3 = ret_V_5_fu_1092_p2[32'd18];

assign p_Result_46_fu_1205_p3 = ret_V_6_fu_1182_p2[32'd18];

assign p_Result_47_fu_1295_p3 = ret_V_7_fu_1272_p2[32'd18];

assign p_Result_48_fu_1385_p3 = ret_V_8_fu_1362_p2[32'd18];

assign p_Result_49_fu_1475_p3 = ret_V_9_fu_1452_p2[32'd18];

assign p_Result_50_fu_1565_p3 = ret_V_10_fu_1542_p2[32'd18];

assign p_Result_51_fu_1655_p3 = ret_V_11_fu_1632_p2[32'd18];

assign p_Result_52_fu_1745_p3 = ret_V_12_fu_1722_p2[32'd18];

assign p_Result_53_fu_1835_p3 = ret_V_13_fu_1812_p2[32'd18];

assign p_Result_54_fu_1912_p3 = ret_V_14_fu_1889_p2[32'd18];

assign p_Result_55_fu_1981_p3 = ret_V_15_fu_1958_p2[32'd18];

assign p_Result_s_fu_657_p3 = ret_V_fu_642_p2[32'd19];

assign r_10_fu_1573_p2 = ((trunc_ln727_10_reg_2545 != 18'd0) ? 1'b1 : 1'b0);

assign r_11_fu_1663_p2 = ((trunc_ln727_11_reg_2570 != 18'd0) ? 1'b1 : 1'b0);

assign r_12_fu_1753_p2 = ((trunc_ln727_12_reg_2595 != 18'd0) ? 1'b1 : 1'b0);

assign r_13_fu_1843_p2 = ((trunc_ln727_13_reg_2620 != 18'd0) ? 1'b1 : 1'b0);

assign r_14_fu_1920_p2 = ((trunc_ln727_14_reg_2645 != 18'd0) ? 1'b1 : 1'b0);

assign r_15_fu_1989_p2 = ((trunc_ln727_15_reg_2665 != 18'd0) ? 1'b1 : 1'b0);

assign r_1_fu_763_p2 = ((trunc_ln727_1_reg_2320 != 18'd0) ? 1'b1 : 1'b0);

assign r_2_fu_853_p2 = ((trunc_ln727_2_reg_2345 != 18'd0) ? 1'b1 : 1'b0);

assign r_3_fu_943_p2 = ((trunc_ln727_3_reg_2370 != 18'd0) ? 1'b1 : 1'b0);

assign r_4_fu_1033_p2 = ((trunc_ln727_4_reg_2395 != 18'd0) ? 1'b1 : 1'b0);

assign r_5_fu_1123_p2 = ((trunc_ln727_5_reg_2420 != 18'd0) ? 1'b1 : 1'b0);

assign r_6_fu_1213_p2 = ((trunc_ln727_6_reg_2445 != 18'd0) ? 1'b1 : 1'b0);

assign r_7_fu_1303_p2 = ((trunc_ln727_7_reg_2470 != 18'd0) ? 1'b1 : 1'b0);

assign r_8_fu_1393_p2 = ((trunc_ln727_8_reg_2495 != 18'd0) ? 1'b1 : 1'b0);

assign r_9_fu_1483_p2 = ((trunc_ln727_9_reg_2520 != 18'd0) ? 1'b1 : 1'b0);

assign r_V_10_cast_cast_fu_452_p1 = r_V_10_cast;

assign r_V_12_cast_cast_fu_448_p1 = r_V_12_cast;

assign r_V_14_cast_cast_fu_444_p1 = r_V_14_cast;

assign r_V_16_cast_cast_fu_440_p1 = r_V_16_cast;

assign r_V_18_cast_cast_fu_436_p1 = r_V_18_cast;

assign r_V_20_cast_cast_fu_432_p1 = r_V_20_cast;

assign r_V_22_cast_cast_fu_428_p1 = r_V_22_cast;

assign r_V_24_cast_cast_fu_424_p1 = r_V_24_cast;

assign r_V_26_cast_cast_fu_420_p1 = r_V_26_cast;

assign r_V_28_cast_cast_fu_416_p1 = r_V_28_cast;

assign r_V_2_cast_cast_fu_468_p1 = r_V_2_cast;

assign r_V_4_cast_cast_fu_464_p1 = r_V_4_cast;

assign r_V_6_cast_cast_fu_460_p1 = r_V_6_cast;

assign r_V_8_cast_cast_fu_456_p1 = r_V_8_cast;

assign r_V_cast_cast_fu_472_p1 = r_V_cast;

assign r_fu_673_p2 = ((trunc_ln727_reg_2295 != 18'd0) ? 1'b1 : 1'b0);

assign ret_V_10_fu_1542_p2 = (lhs_21_fu_1535_p3 + r_V_11_reg_2540);

assign ret_V_11_fu_1632_p2 = (lhs_23_fu_1625_p3 + r_V_12_reg_2565);

assign ret_V_12_fu_1722_p2 = (lhs_25_fu_1715_p3 + r_V_13_reg_2590);

assign ret_V_13_fu_1812_p2 = (lhs_27_fu_1805_p3 + r_V_14_reg_2615);

assign ret_V_14_fu_1889_p2 = (lhs_29_fu_1882_p3 + r_V_15_reg_2640);

assign ret_V_15_fu_1958_p2 = (lhs_31_fu_1951_p3 + r_V_16_reg_2660);

assign ret_V_1_fu_732_p2 = (lhs_3_fu_725_p3 + r_V_2_reg_2315);

assign ret_V_2_fu_822_p2 = (lhs_5_fu_815_p3 + r_V_3_reg_2340);

assign ret_V_3_fu_912_p2 = (lhs_7_fu_905_p3 + r_V_4_reg_2365);

assign ret_V_4_fu_1002_p2 = (lhs_9_fu_995_p3 + r_V_5_reg_2390);

assign ret_V_5_fu_1092_p2 = (lhs_11_fu_1085_p3 + r_V_6_reg_2415);

assign ret_V_6_fu_1182_p2 = (lhs_13_fu_1175_p3 + r_V_7_reg_2440);

assign ret_V_7_fu_1272_p2 = (lhs_15_fu_1265_p3 + r_V_8_reg_2465);

assign ret_V_8_fu_1362_p2 = (lhs_17_fu_1355_p3 + r_V_9_reg_2490);

assign ret_V_9_fu_1452_p2 = (lhs_19_fu_1445_p3 + r_V_10_reg_2515);

assign ret_V_fu_642_p2 = (lhs_1_fu_634_p3 + r_V_reg_2290);

assign trunc_ln307_fu_496_p1 = ap_sig_allocacmp_d_1[1:0];

assign trunc_ln727_10_fu_1510_p1 = grp_fu_1427_p2[17:0];

assign trunc_ln727_11_fu_1600_p1 = grp_fu_1517_p2[17:0];

assign trunc_ln727_12_fu_1690_p1 = grp_fu_1607_p2[17:0];

assign trunc_ln727_13_fu_1780_p1 = grp_fu_1697_p2[17:0];

assign trunc_ln727_14_fu_1870_p1 = grp_fu_1787_p2[17:0];

assign trunc_ln727_15_fu_1947_p1 = grp_fu_1877_p2[17:0];

assign trunc_ln727_1_fu_700_p1 = grp_fu_603_p2[17:0];

assign trunc_ln727_2_fu_790_p1 = grp_fu_707_p2[17:0];

assign trunc_ln727_3_fu_880_p1 = grp_fu_797_p2[17:0];

assign trunc_ln727_4_fu_970_p1 = grp_fu_887_p2[17:0];

assign trunc_ln727_5_fu_1060_p1 = grp_fu_977_p2[17:0];

assign trunc_ln727_6_fu_1150_p1 = grp_fu_1067_p2[17:0];

assign trunc_ln727_7_fu_1240_p1 = grp_fu_1157_p2[17:0];

assign trunc_ln727_8_fu_1330_p1 = grp_fu_1247_p2[17:0];

assign trunc_ln727_9_fu_1420_p1 = grp_fu_1337_p2[17:0];

assign trunc_ln727_fu_596_p1 = grp_fu_578_p2[17:0];

assign zext_ln306_cast_fu_412_p1 = zext_ln306;

assign zext_ln415_10_fu_1590_p1 = and_ln412_10_fu_1584_p2;

assign zext_ln415_11_fu_1680_p1 = and_ln412_11_fu_1674_p2;

assign zext_ln415_12_fu_1770_p1 = and_ln412_12_fu_1764_p2;

assign zext_ln415_13_fu_1860_p1 = and_ln412_13_fu_1854_p2;

assign zext_ln415_14_fu_1937_p1 = and_ln412_14_fu_1931_p2;

assign zext_ln415_15_fu_2006_p1 = and_ln412_15_fu_2000_p2;

assign zext_ln415_1_fu_780_p1 = and_ln412_1_fu_774_p2;

assign zext_ln415_2_fu_870_p1 = and_ln412_2_fu_864_p2;

assign zext_ln415_3_fu_960_p1 = and_ln412_3_fu_954_p2;

assign zext_ln415_4_fu_1050_p1 = and_ln412_4_fu_1044_p2;

assign zext_ln415_5_fu_1140_p1 = and_ln412_5_fu_1134_p2;

assign zext_ln415_6_fu_1230_p1 = and_ln412_6_fu_1224_p2;

assign zext_ln415_7_fu_1320_p1 = and_ln412_7_fu_1314_p2;

assign zext_ln415_8_fu_1410_p1 = and_ln412_8_fu_1404_p2;

assign zext_ln415_9_fu_1500_p1 = and_ln412_9_fu_1494_p2;

assign zext_ln415_fu_690_p1 = and_ln412_fu_684_p2;

always @ (posedge ap_clk) begin
    zext_ln306_cast_reg_2147[54:35] <= 20'b00000000000000000000;
    r_V_28_cast_cast_reg_2152[54:35] <= 20'b00000000000000000000;
    r_V_26_cast_cast_reg_2157[54:35] <= 20'b00000000000000000000;
    r_V_24_cast_cast_reg_2162[54:35] <= 20'b00000000000000000000;
    r_V_22_cast_cast_reg_2167[54:35] <= 20'b00000000000000000000;
    r_V_20_cast_cast_reg_2172[54:35] <= 20'b00000000000000000000;
    r_V_18_cast_cast_reg_2177[54:35] <= 20'b00000000000000000000;
    r_V_16_cast_cast_reg_2182[54:35] <= 20'b00000000000000000000;
    r_V_14_cast_cast_reg_2187[54:35] <= 20'b00000000000000000000;
    r_V_12_cast_cast_reg_2192[54:35] <= 20'b00000000000000000000;
    r_V_10_cast_cast_reg_2197[54:35] <= 20'b00000000000000000000;
    r_V_8_cast_cast_reg_2202[54:35] <= 20'b00000000000000000000;
    r_V_6_cast_cast_reg_2207[54:35] <= 20'b00000000000000000000;
    r_V_4_cast_cast_reg_2212[54:35] <= 20'b00000000000000000000;
    r_V_2_cast_cast_reg_2217[54:35] <= 20'b00000000000000000000;
    r_V_cast_cast_reg_2222[54:35] <= 20'b00000000000000000000;
end

endmodule //master_fix_dense2_fix_Pipeline_Dense2_Loop
