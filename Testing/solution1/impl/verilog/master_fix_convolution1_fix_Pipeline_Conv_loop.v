// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_fix_convolution1_fix_Pipeline_Conv_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp1_V_address0,
        tmp1_V_ce0,
        tmp1_V_we0,
        tmp1_V_d0,
        tmp1_V_q0,
        tmp1_V_address1,
        tmp1_V_ce1,
        tmp1_V_we1,
        tmp1_V_d1,
        tmp1_V_q1,
        tmp2_V_address0,
        tmp2_V_ce0,
        tmp2_V_we0,
        tmp2_V_d0,
        tmp2_V_q0,
        tmp2_V_address1,
        tmp2_V_ce1,
        tmp2_V_we1,
        tmp2_V_d1,
        tmp2_V_q1,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 14'd1;
parameter    ap_ST_fsm_pp0_stage1 = 14'd2;
parameter    ap_ST_fsm_pp0_stage2 = 14'd4;
parameter    ap_ST_fsm_pp0_stage3 = 14'd8;
parameter    ap_ST_fsm_pp0_stage4 = 14'd16;
parameter    ap_ST_fsm_pp0_stage5 = 14'd32;
parameter    ap_ST_fsm_pp0_stage6 = 14'd64;
parameter    ap_ST_fsm_pp0_stage7 = 14'd128;
parameter    ap_ST_fsm_pp0_stage8 = 14'd256;
parameter    ap_ST_fsm_pp0_stage9 = 14'd512;
parameter    ap_ST_fsm_pp0_stage10 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 14'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] tmp1_V_address0;
output   tmp1_V_ce0;
output   tmp1_V_we0;
output  [11:0] tmp1_V_d0;
input  [11:0] tmp1_V_q0;
output  [3:0] tmp1_V_address1;
output   tmp1_V_ce1;
output   tmp1_V_we1;
output  [11:0] tmp1_V_d1;
input  [11:0] tmp1_V_q1;
output  [3:0] tmp2_V_address0;
output   tmp2_V_ce0;
output   tmp2_V_we0;
output  [11:0] tmp2_V_d0;
input  [11:0] tmp2_V_q0;
output  [3:0] tmp2_V_address1;
output   tmp2_V_ce1;
output   tmp2_V_we1;
output  [11:0] tmp2_V_d1;
input  [11:0] tmp2_V_q1;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [34:0] out_r_d0;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [8:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;

reg ap_idle;
reg[3:0] tmp1_V_address0;
reg tmp1_V_ce0;
reg tmp1_V_we0;
reg[11:0] tmp1_V_d0;
reg[3:0] tmp1_V_address1;
reg tmp1_V_ce1;
reg tmp1_V_we1;
reg[11:0] tmp1_V_d1;
reg[3:0] tmp2_V_address0;
reg tmp2_V_ce0;
reg tmp2_V_we0;
reg[11:0] tmp2_V_d0;
reg[3:0] tmp2_V_address1;
reg tmp2_V_ce1;
reg tmp2_V_we1;
reg[11:0] tmp2_V_d1;
reg out_r_ce0;
reg out_r_we0;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg[8:0] input_r_address1;
reg input_r_ce1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
reg   [0:0] icmp_ln232_reg_2148;
reg    ap_condition_exit_pp0_iter0_stage13;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] firstKernel_f_V_0_0_address0;
reg    firstKernel_f_V_0_0_ce0;
wire   [18:0] firstKernel_f_V_0_0_q0;
wire   [2:0] firstKernel_f_V_0_1_address0;
reg    firstKernel_f_V_0_1_ce0;
wire   [18:0] firstKernel_f_V_0_1_q0;
wire   [2:0] firstKernel_f_V_0_2_address0;
reg    firstKernel_f_V_0_2_ce0;
wire   [19:0] firstKernel_f_V_0_2_q0;
wire   [2:0] firstKernel_f_V_1_0_address0;
reg    firstKernel_f_V_1_0_ce0;
wire   [17:0] firstKernel_f_V_1_0_q0;
wire   [2:0] firstKernel_f_V_1_1_address0;
reg    firstKernel_f_V_1_1_ce0;
wire   [17:0] firstKernel_f_V_1_1_q0;
wire   [2:0] firstKernel_f_V_1_2_address0;
reg    firstKernel_f_V_1_2_ce0;
wire   [17:0] firstKernel_f_V_1_2_q0;
wire   [2:0] firstKernel_f_V_2_0_address0;
reg    firstKernel_f_V_2_0_ce0;
wire   [17:0] firstKernel_f_V_2_0_q0;
wire   [2:0] firstKernel_f_V_2_1_address0;
reg    firstKernel_f_V_2_1_ce0;
wire   [17:0] firstKernel_f_V_2_1_q0;
wire   [2:0] firstKernel_f_V_2_2_address0;
reg    firstKernel_f_V_2_2_ce0;
wire   [17:0] firstKernel_f_V_2_2_q0;
wire   [2:0] firstKernel_f_V_3_0_address0;
reg    firstKernel_f_V_3_0_ce0;
wire   [17:0] firstKernel_f_V_3_0_q0;
wire   [2:0] firstKernel_f_V_3_1_address0;
reg    firstKernel_f_V_3_1_ce0;
wire   [18:0] firstKernel_f_V_3_1_q0;
wire   [2:0] firstKernel_f_V_3_2_address0;
reg    firstKernel_f_V_3_2_ce0;
wire   [18:0] firstKernel_f_V_3_2_q0;
wire   [2:0] firstBias_f_V_address0;
reg    firstBias_f_V_ce0;
wire   [21:0] firstBias_f_V_q0;
reg   [15:0] reg_869;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state17_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg  signed [11:0] reg_873;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state18_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state19_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state20_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
reg  signed [11:0] reg_878;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state21_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] tmp1_V_addr_28_reg_2143;
wire   [0:0] icmp_ln232_fu_906_p2;
wire   [1:0] trunc_ln213_fu_918_p1;
reg   [1:0] trunc_ln213_reg_2152;
wire   [0:0] trunc_ln235_fu_922_p1;
reg   [0:0] trunc_ln235_reg_2162;
wire   [0:0] icmp_ln235_fu_926_p2;
reg   [0:0] icmp_ln235_reg_2167;
reg   [0:0] icmp_ln235_reg_2167_pp0_iter1_reg;
wire   [0:0] icmp_ln243_fu_998_p2;
reg   [0:0] icmp_ln243_reg_2171;
reg   [0:0] icmp_ln243_reg_2171_pp0_iter1_reg;
wire   [63:0] idxprom82_fu_1078_p1;
reg   [63:0] idxprom82_reg_2175;
wire   [0:0] icmp_ln257_fu_1094_p2;
reg   [0:0] icmp_ln257_reg_2200;
wire   [1:0] add_ln263_fu_1100_p2;
reg   [1:0] add_ln263_reg_2204;
wire   [0:0] icmp_ln263_fu_1106_p2;
reg   [0:0] icmp_ln263_reg_2209;
wire   [1:0] t_fu_1118_p3;
reg   [1:0] t_reg_2213;
wire   [0:0] icmp_ln264_fu_1178_p2;
reg   [0:0] icmp_ln264_reg_2230;
wire   [0:0] icmp_ln265_fu_1236_p2;
reg   [0:0] icmp_ln265_reg_2240;
wire   [8:0] add_ln266_1_fu_1299_p2;
reg   [8:0] add_ln266_1_reg_2251;
wire   [0:0] icmp_ln270_fu_1305_p2;
reg   [0:0] icmp_ln270_reg_2256;
wire   [0:0] icmp_ln295_fu_1327_p2;
reg   [0:0] icmp_ln295_reg_2260;
wire   [0:0] and_ln264_1_fu_1369_p2;
reg   [0:0] and_ln264_1_reg_2274;
wire   [0:0] or_ln264_fu_1375_p2;
reg   [0:0] or_ln264_reg_2279;
wire   [11:0] select_ln264_1_fu_1389_p3;
reg   [11:0] select_ln264_1_reg_2284;
wire   [11:0] select_ln264_2_fu_1412_p3;
reg   [11:0] select_ln264_2_reg_2299;
wire   [3:0] zext_ln235_fu_1432_p1;
reg   [3:0] zext_ln235_reg_2319;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state23_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire   [2:0] zext_ln235_1_fu_1436_p1;
reg   [2:0] zext_ln235_1_reg_2327;
wire   [0:0] icmp_ln272_fu_1441_p2;
reg   [0:0] icmp_ln272_reg_2334;
wire   [3:0] tmp2_V_addr_5_reg_2358;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state24_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
wire   [3:0] tmp2_V_addr_7_reg_2393;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state25_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
wire   [3:0] tmp2_V_addr_reg_2419;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state26_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_pp0_stage13_11001;
wire   [8:0] trunc_ln320_2_fu_1591_p1;
reg   [8:0] trunc_ln320_2_reg_2479;
wire   [35:0] mul_ln712_4_fu_1613_p2;
reg   [35:0] mul_ln712_4_reg_2539;
wire   [11:0] add_ln320_1_fu_1658_p2;
reg   [11:0] add_ln320_1_reg_2544;
wire   [35:0] mul_ln712_fu_1770_p2;
reg   [35:0] mul_ln712_reg_2549;
wire   [35:0] mul_ln712_1_fu_1783_p2;
reg   [35:0] mul_ln712_1_reg_2554;
reg  signed [11:0] tmp2_V_load_10_reg_2559;
wire   [35:0] add_ln712_7_fu_1802_p2;
reg   [35:0] add_ln712_7_reg_2564;
wire   [34:0] trunc_ln712_2_fu_1807_p1;
reg   [34:0] trunc_ln712_2_reg_2569;
wire   [35:0] mul_ln712_3_fu_1818_p2;
reg   [35:0] mul_ln712_3_reg_2574;
wire   [35:0] mul_ln712_5_fu_1831_p2;
reg   [35:0] mul_ln712_5_reg_2579;
reg  signed [11:0] tmp2_V_load_7_reg_2584;
wire   [35:0] mul_ln712_6_fu_1844_p2;
reg   [35:0] mul_ln712_6_reg_2589;
reg  signed [11:0] tmp2_V_load_9_reg_2594;
wire   [35:0] add_ln712_3_fu_1868_p2;
reg   [35:0] add_ln712_3_reg_2599;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state22_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire   [34:0] trunc_ln712_1_fu_1873_p1;
reg   [34:0] trunc_ln712_1_reg_2604;
wire   [35:0] mul_ln712_8_fu_1883_p2;
reg   [35:0] mul_ln712_8_reg_2609;
wire   [35:0] mul_ln712_9_fu_1896_p2;
reg   [35:0] mul_ln712_9_reg_2614;
wire   [35:0] add_ln712_1_fu_1919_p2;
reg   [35:0] add_ln712_1_reg_2619;
wire   [34:0] trunc_ln712_fu_1924_p1;
reg   [34:0] trunc_ln712_reg_2624;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln264_1_fu_1126_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln264_3_fu_1215_p1;
wire   [63:0] zext_ln265_fu_1270_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln266_1_fu_1343_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln264_2_fu_1427_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln281_fu_1446_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln271_fu_1451_p1;
wire   [63:0] zext_ln296_fu_1456_p1;
wire   [63:0] zext_ln288_fu_1461_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln282_fu_1478_p1;
wire   [63:0] zext_ln273_fu_1483_p1;
wire   [63:0] zext_ln274_fu_1488_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln277_fu_1493_p1;
wire   [63:0] zext_ln297_fu_1497_p1;
wire   [63:0] zext_ln293_fu_1507_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln278_fu_1519_p1;
wire   [63:0] zext_ln298_fu_1524_p1;
wire   [63:0] zext_ln285_fu_1529_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln286_fu_1539_p1;
wire   [63:0] zext_ln289_fu_1551_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln269_fu_1561_p1;
wire   [63:0] zext_ln292_fu_1566_p1;
wire   [63:0] zext_ln320_fu_2025_p1;
reg   [11:0] j_fu_166;
wire   [11:0] select_ln214_fu_1583_p3;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_j_load;
reg   [11:0] grp_load_fu_843_p1;
reg   [11:0] id_fu_170;
reg   [11:0] ap_sig_allocacmp_id_1;
wire   [11:0] id_2_fu_912_p2;
reg   [35:0] b_fu_174;
wire  signed [35:0] sext_ln257_fu_1704_p1;
reg   [15:0] d_fu_178;
reg   [15:0] ap_sig_allocacmp_d_load;
wire  signed [15:0] sext_ln244_1_fu_1074_p1;
reg  signed [35:0] kr_V_0_069_fu_182;
wire  signed [35:0] sext_ln251_fu_1136_p1;
reg  signed [35:0] kr_V_1_070_fu_186;
wire  signed [35:0] sext_ln251_1_fu_1664_p1;
reg  signed [35:0] kr_V_2_071_fu_190;
wire  signed [35:0] sext_ln251_2_fu_1668_p1;
reg  signed [35:0] kr_V_3_072_fu_194;
wire  signed [35:0] sext_ln251_3_fu_1672_p1;
reg  signed [35:0] kr_V_4_073_fu_198;
wire  signed [35:0] sext_ln251_4_fu_1140_p1;
reg  signed [35:0] kr_V_5_074_fu_202;
wire  signed [35:0] sext_ln251_5_fu_1676_p1;
reg  signed [35:0] kr_V_6_075_fu_206;
wire  signed [35:0] sext_ln251_6_fu_1680_p1;
reg  signed [35:0] kr_V_7_076_fu_210;
wire  signed [35:0] sext_ln251_7_fu_1684_p1;
reg  signed [35:0] kr_V_8_077_fu_214;
wire  signed [35:0] sext_ln251_8_fu_1688_p1;
reg  signed [35:0] kr_V_9_078_fu_218;
wire  signed [35:0] sext_ln251_9_fu_1692_p1;
reg  signed [35:0] kr_V_10_079_fu_222;
wire  signed [35:0] sext_ln251_10_fu_1696_p1;
reg  signed [35:0] kr_V_11_080_fu_226;
wire  signed [35:0] sext_ln251_11_fu_1700_p1;
reg   [15:0] i_fu_230;
reg   [15:0] ap_sig_allocacmp_i_load;
wire  signed [15:0] sext_ln236_1_fu_994_p1;
reg  signed [15:0] grp_load_fu_846_p1;
reg   [2:0] grp_fu_849_p0;
reg   [3:0] grp_fu_854_p0;
reg   [2:0] grp_fu_859_p0;
wire  signed [16:0] sext_ln236_fu_932_p1;
wire   [16:0] add_ln236_fu_940_p2;
wire   [6:0] trunc_ln236_fu_936_p1;
wire   [6:0] xor_ln236_fu_958_p2;
wire   [7:0] p_and_t3_cast_fu_964_p3;
wire   [6:0] trunc_ln236_1_fu_954_p1;
wire   [0:0] tmp_fu_946_p3;
wire   [7:0] sub_ln236_fu_972_p2;
wire   [7:0] tmp_s_fu_978_p3;
wire  signed [7:0] i_7_fu_986_p3;
wire  signed [15:0] sext_ln244_fu_1012_p0;
wire  signed [15:0] trunc_ln244_fu_1016_p0;
wire  signed [16:0] sext_ln244_fu_1012_p1;
wire   [16:0] add_ln244_fu_1020_p2;
wire   [2:0] trunc_ln244_fu_1016_p1;
wire   [2:0] xor_ln244_fu_1038_p2;
wire   [3:0] p_and_t7_cast_fu_1044_p3;
wire   [2:0] trunc_ln244_1_fu_1034_p1;
wire   [0:0] tmp_19_fu_1026_p3;
wire   [3:0] sub_ln244_fu_1052_p2;
wire   [3:0] tmp_13_fu_1058_p3;
wire  signed [3:0] d_9_fu_1066_p3;
wire   [1:0] xor_ln263_fu_1112_p2;
wire  signed [16:0] sext_ln264_fu_1158_p1;
wire   [16:0] add_ln264_fu_1162_p2;
wire   [9:0] tmp_20_fu_1168_p4;
wire   [6:0] trunc_ln264_2_fu_1191_p1;
wire   [8:0] tmp_42_cast_fu_1195_p3;
wire   [8:0] trunc_ln264_1_fu_1187_p1;
wire   [8:0] sub_ln264_fu_1203_p2;
wire   [8:0] zext_ln267_fu_1184_p1;
wire   [8:0] add_ln264_2_fu_1209_p2;
wire   [16:0] add_ln265_fu_1220_p2;
wire   [9:0] tmp_21_fu_1226_p4;
wire   [6:0] trunc_ln265_1_fu_1246_p1;
wire   [8:0] tmp_43_cast_fu_1250_p3;
wire   [8:0] trunc_ln265_fu_1242_p1;
wire   [8:0] sub_ln265_fu_1258_p2;
wire   [8:0] add_ln265_1_fu_1264_p2;
wire   [6:0] trunc_ln264_fu_1154_p1;
wire   [6:0] add_ln266_fu_1275_p2;
wire   [8:0] tmp_14_fu_1285_p3;
wire   [8:0] zext_ln266_fu_1281_p1;
wire   [8:0] sub_ln266_fu_1293_p2;
wire   [16:0] add_ln295_fu_1311_p2;
wire   [9:0] tmp_22_fu_1317_p4;
wire   [0:0] icmp_ln264_1_fu_1333_p2;
wire   [0:0] and_ln264_fu_1338_p2;
wire   [0:0] xor_ln264_fu_1347_p2;
wire   [0:0] or_ln265_fu_1358_p2;
wire   [0:0] xor_ln265_fu_1363_p2;
wire   [0:0] and_ln265_fu_1353_p2;
wire   [11:0] trunc_ln264_5_fu_1381_p1;
wire   [11:0] trunc_ln264_6_fu_1385_p1;
wire   [11:0] trunc_ln264_3_fu_1397_p1;
wire   [11:0] trunc_ln264_4_fu_1401_p1;
wire   [11:0] select_ln264_fu_1405_p3;
wire   [3:0] zext_ln264_fu_1418_p1;
wire   [3:0] add_ln264_1_fu_1421_p2;
wire   [2:0] grp_fu_849_p2;
wire   [3:0] grp_fu_854_p2;
wire   [2:0] grp_fu_859_p2;
wire   [2:0] or_ln1_fu_1471_p3;
wire   [0:0] xor_ln272_fu_1466_p2;
wire   [3:0] add_ln293_fu_1502_p2;
wire   [2:0] or_ln_fu_1512_p3;
wire   [3:0] grp_fu_864_p2;
wire   [3:0] add_ln286_fu_1534_p2;
wire   [3:0] or_ln2_fu_1544_p3;
wire   [2:0] add_ln269_fu_1556_p2;
wire   [11:0] add_ln214_fu_1571_p2;
wire   [0:0] icmp_ln214_fu_1577_p2;
wire   [6:0] trunc_ln320_1_fu_1623_p1;
wire   [8:0] tmp_49_cast_fu_1627_p3;
wire   [8:0] trunc_ln320_fu_1619_p1;
wire   [8:0] sub_ln320_fu_1635_p2;
wire   [8:0] add_ln320_fu_1641_p2;
wire   [11:0] tmp_51_cast_fu_1646_p3;
wire   [11:0] trunc_ln320_3_fu_1654_p1;
wire   [35:0] mul_ln712_2_fu_1796_p2;
wire   [35:0] mul_ln712_7_fu_1857_p2;
wire   [35:0] add_ln712_2_fu_1863_p2;
wire   [35:0] mul_ln712_10_fu_1908_p2;
wire   [35:0] add_ln712_fu_1914_p2;
wire   [35:0] add_ln712_5_fu_1947_p2;
wire   [35:0] mul_ln712_11_fu_1937_p2;
wire   [35:0] add_ln712_8_fu_1957_p2;
wire   [35:0] add_ln712_6_fu_1952_p2;
wire   [34:0] trunc_ln712_3_fu_1962_p1;
wire   [35:0] add_ln712_9_fu_1966_p2;
wire   [34:0] add_ln712_10_fu_1975_p2;
wire   [34:0] trunc_ln712_4_fu_1971_p1;
wire   [35:0] add_ln712_12_fu_1980_p2;
wire   [35:0] add_ln712_4_fu_1943_p2;
wire   [34:0] add_ln712_14_fu_1990_p2;
wire   [34:0] add_ln712_13_fu_1986_p2;
wire   [35:0] add_ln712_11_fu_1996_p2;
wire   [0:0] tmp_23_fu_2008_p3;
wire   [34:0] add_ln316_fu_2002_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1877;
reg    ap_condition_1886;
reg    ap_condition_1890;
reg    ap_condition_1895;
reg    ap_condition_1902;
reg    ap_condition_1908;
reg    ap_condition_1917;
reg    ap_condition_1921;
reg    ap_condition_1928;
reg    ap_condition_1933;
reg    ap_condition_1940;
reg    ap_condition_1944;
reg    ap_condition_1949;
reg    ap_condition_1954;
reg    ap_condition_1958;
reg    ap_condition_1964;
reg    ap_condition_1969;
reg    ap_condition_1976;
reg    ap_condition_1980;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_0 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_0_address0),
    .ce0(firstKernel_f_V_0_0_ce0),
    .q0(firstKernel_f_V_0_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_1_address0),
    .ce0(firstKernel_f_V_0_1_ce0),
    .q0(firstKernel_f_V_0_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_0_2 #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_0_2_address0),
    .ce0(firstKernel_f_V_0_2_ce0),
    .q0(firstKernel_f_V_0_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_0_address0),
    .ce0(firstKernel_f_V_1_0_ce0),
    .q0(firstKernel_f_V_1_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_1_address0),
    .ce0(firstKernel_f_V_1_1_ce0),
    .q0(firstKernel_f_V_1_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_1_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_1_2_address0),
    .ce0(firstKernel_f_V_1_2_ce0),
    .q0(firstKernel_f_V_1_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_0_address0),
    .ce0(firstKernel_f_V_2_0_ce0),
    .q0(firstKernel_f_V_2_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_1 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_1_address0),
    .ce0(firstKernel_f_V_2_1_ce0),
    .q0(firstKernel_f_V_2_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_2_2 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_2_2_address0),
    .ce0(firstKernel_f_V_2_2_ce0),
    .q0(firstKernel_f_V_2_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_0 #(
    .DataWidth( 18 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_0_address0),
    .ce0(firstKernel_f_V_3_0_ce0),
    .q0(firstKernel_f_V_3_0_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_1 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_1_address0),
    .ce0(firstKernel_f_V_3_1_ce0),
    .q0(firstKernel_f_V_3_1_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstKernel_f_V_3_2 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstKernel_f_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstKernel_f_V_3_2_address0),
    .ce0(firstKernel_f_V_3_2_ce0),
    .q0(firstKernel_f_V_3_2_q0)
);

master_fix_convolution1_fix_Pipeline_Conv_loop_firstBias_f_V #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
firstBias_f_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstBias_f_V_address0),
    .ce0(firstBias_f_V_ce0),
    .q0(firstBias_f_V_q0)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U4(
    .din0(kr_V_4_073_fu_198),
    .din1(tmp1_V_q1),
    .dout(mul_ln712_4_fu_1613_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U5(
    .din0(kr_V_0_069_fu_182),
    .din1(tmp2_V_q0),
    .dout(mul_ln712_fu_1770_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U6(
    .din0(kr_V_1_070_fu_186),
    .din1(tmp2_V_q0),
    .dout(mul_ln712_1_fu_1783_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U7(
    .din0(kr_V_2_071_fu_190),
    .din1(reg_873),
    .dout(mul_ln712_2_fu_1796_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U8(
    .din0(kr_V_3_072_fu_194),
    .din1(reg_873),
    .dout(mul_ln712_3_fu_1818_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U9(
    .din0(kr_V_5_074_fu_202),
    .din1(reg_873),
    .dout(mul_ln712_5_fu_1831_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U10(
    .din0(kr_V_6_075_fu_206),
    .din1(reg_878),
    .dout(mul_ln712_6_fu_1844_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U11(
    .din0(kr_V_7_076_fu_210),
    .din1(reg_873),
    .dout(mul_ln712_7_fu_1857_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U12(
    .din0(kr_V_8_077_fu_214),
    .din1(tmp2_V_load_7_reg_2584),
    .dout(mul_ln712_8_fu_1883_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U13(
    .din0(kr_V_9_078_fu_218),
    .din1(reg_878),
    .dout(mul_ln712_9_fu_1896_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U14(
    .din0(kr_V_10_079_fu_222),
    .din1(tmp2_V_load_9_reg_2594),
    .dout(mul_ln712_10_fu_1908_p2)
);

master_fix_mul_36s_12s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 36 ))
mul_36s_12s_36_1_1_U15(
    .din0(kr_V_11_080_fu_226),
    .din1(tmp2_V_load_10_reg_2559),
    .dout(mul_ln712_11_fu_1937_p2)
);

master_fix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage13),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage13) | ((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_1877)) begin
            d_fu_178 <= sext_ln244_1_fu_1074_p1;
        end else if ((ap_loop_init == 1'b1)) begin
            d_fu_178 <= 16'd65535;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_1877)) begin
            i_fu_230 <= 16'd0;
        end else if ((1'b1 == ap_condition_1895)) begin
            i_fu_230 <= sext_ln236_1_fu_994_p1;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_230 <= 16'd65535;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln232_fu_906_p2 == 1'd0))) begin
            id_fu_170 <= id_2_fu_912_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            id_fu_170 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_166 <= 12'd0;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        j_fu_166 <= select_ln214_fu_1583_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_873 <= tmp2_V_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_873 <= tmp2_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            reg_878 <= tmp2_V_q0;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_878 <= tmp2_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln232_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln263_reg_2204 <= add_ln263_fu_1100_p2;
        icmp_ln235_reg_2167 <= icmp_ln235_fu_926_p2;
        icmp_ln257_reg_2200 <= icmp_ln257_fu_1094_p2;
        icmp_ln263_reg_2209 <= icmp_ln263_fu_1106_p2;
        t_reg_2213 <= t_fu_1118_p3;
        trunc_ln213_reg_2152 <= trunc_ln213_fu_918_p1;
        trunc_ln235_reg_2162 <= trunc_ln235_fu_922_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln266_1_reg_2251 <= add_ln266_1_fu_1299_p2;
        icmp_ln264_reg_2230 <= icmp_ln264_fu_1178_p2;
        icmp_ln265_reg_2240 <= icmp_ln265_fu_1236_p2;
        icmp_ln270_reg_2256 <= icmp_ln270_fu_1305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln320_1_reg_2544 <= add_ln320_1_fu_1658_p2;
        icmp_ln232_reg_2148 <= icmp_ln232_fu_906_p2;
        icmp_ln235_reg_2167_pp0_iter1_reg <= icmp_ln235_reg_2167;
        icmp_ln243_reg_2171_pp0_iter1_reg <= icmp_ln243_reg_2171;
        mul_ln712_4_reg_2539 <= mul_ln712_4_fu_1613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln712_1_reg_2619 <= add_ln712_1_fu_1919_p2;
        trunc_ln712_reg_2624 <= trunc_ln712_fu_1924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln712_3_reg_2599 <= add_ln712_3_fu_1868_p2;
        trunc_ln712_1_reg_2604 <= trunc_ln712_1_fu_1873_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln712_7_reg_2564 <= add_ln712_7_fu_1802_p2;
        trunc_ln712_2_reg_2569 <= trunc_ln712_2_fu_1807_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        and_ln264_1_reg_2274 <= and_ln264_1_fu_1369_p2;
        or_ln264_reg_2279 <= or_ln264_fu_1375_p2;
        select_ln264_1_reg_2284 <= select_ln264_1_fu_1389_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln243_reg_2171_pp0_iter1_reg == 1'd1) & (icmp_ln235_reg_2167_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_fu_174 <= sext_ln257_fu_1704_p1;
        kr_V_10_079_fu_222 <= sext_ln251_10_fu_1696_p1;
        kr_V_11_080_fu_226 <= sext_ln251_11_fu_1700_p1;
        kr_V_1_070_fu_186 <= sext_ln251_1_fu_1664_p1;
        kr_V_2_071_fu_190 <= sext_ln251_2_fu_1668_p1;
        kr_V_3_072_fu_194 <= sext_ln251_3_fu_1672_p1;
        kr_V_5_074_fu_202 <= sext_ln251_5_fu_1676_p1;
        kr_V_6_075_fu_206 <= sext_ln251_6_fu_1680_p1;
        kr_V_7_076_fu_210 <= sext_ln251_7_fu_1684_p1;
        kr_V_8_077_fu_214 <= sext_ln251_8_fu_1688_p1;
        kr_V_9_078_fu_218 <= sext_ln251_9_fu_1692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln235_fu_926_p2 == 1'd1) & (icmp_ln232_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln243_reg_2171 <= icmp_ln243_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        icmp_ln272_reg_2334 <= icmp_ln272_fu_1441_p2;
        zext_ln235_1_reg_2327[1 : 0] <= zext_ln235_1_fu_1436_p1[1 : 0];
        zext_ln235_reg_2319[1 : 0] <= zext_ln235_fu_1432_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln264_fu_1178_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln295_reg_2260 <= icmp_ln295_fu_1327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln243_fu_998_p2 == 1'd1) & (icmp_ln235_fu_926_p2 == 1'd1) & (icmp_ln232_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idxprom82_reg_2175[3 : 0] <= idxprom82_fu_1078_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln243_reg_2171 == 1'd1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        kr_V_0_069_fu_182 <= sext_ln251_fu_1136_p1;
        kr_V_4_073_fu_198 <= sext_ln251_4_fu_1140_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln712_1_reg_2554 <= mul_ln712_1_fu_1783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_ln712_3_reg_2574 <= mul_ln712_3_fu_1818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_ln712_5_reg_2579 <= mul_ln712_5_fu_1831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_ln712_6_reg_2589 <= mul_ln712_6_fu_1844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_ln712_8_reg_2609 <= mul_ln712_8_fu_1883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_ln712_9_reg_2614 <= mul_ln712_9_fu_1896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln712_reg_2549 <= mul_ln712_fu_1770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_869 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln264_2_reg_2299 <= select_ln264_2_fu_1412_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp2_V_load_10_reg_2559 <= tmp2_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp2_V_load_7_reg_2584 <= tmp2_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp2_V_load_9_reg_2594 <= tmp2_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        trunc_ln320_2_reg_2479 <= trunc_ln320_2_fu_1591_p1;
    end
end

always @ (*) begin
    if (((icmp_ln232_reg_2148 == 1'd1) & (1'b0 == ap_block_pp0_stage13_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        ap_condition_exit_pp0_iter0_stage13 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_d_load = 16'd65535;
    end else begin
        ap_sig_allocacmp_d_load = d_fu_178;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 16'd65535;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_230;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_id_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_id_1 = id_fu_170;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 12'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstBias_f_V_ce0 = 1'b1;
    end else begin
        firstBias_f_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_0_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_0_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_0_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_1_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_1_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_1_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_2_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_2_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_2_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_3_0_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_3_1_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        firstKernel_f_V_3_2_ce0 = 1'b1;
    end else begin
        firstKernel_f_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_849_p0 = zext_ln235_1_reg_2327;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_849_p0 = zext_ln235_1_fu_1436_p1;
        end else begin
            grp_fu_849_p0 = 'bx;
        end
    end else begin
        grp_fu_849_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_854_p0 = zext_ln235_reg_2319;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_854_p0 = zext_ln235_fu_1432_p1;
        end else begin
            grp_fu_854_p0 = 'bx;
        end
    end else begin
        grp_fu_854_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_859_p0 = zext_ln235_1_reg_2327;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_859_p0 = zext_ln235_1_fu_1436_p1;
        end else begin
            grp_fu_859_p0 = 'bx;
        end
    end else begin
        grp_fu_859_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        grp_load_fu_843_p1 = j_fu_166;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln232_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_load_fu_843_p1 = ap_sig_allocacmp_j_load;
    end else begin
        grp_load_fu_843_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1890)) begin
            grp_load_fu_846_p1 = i_fu_230;
        end else if ((1'b1 == ap_condition_1886)) begin
            grp_load_fu_846_p1 = ap_sig_allocacmp_i_load;
        end else begin
            grp_load_fu_846_p1 = 'bx;
        end
    end else begin
        grp_load_fu_846_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln265_fu_1270_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln264_1_fu_1126_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln266_1_fu_1343_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln264_3_fu_1215_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            tmp1_V_address0 = zext_ln292_fu_1566_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            tmp1_V_address0 = zext_ln289_fu_1551_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            tmp1_V_address0 = zext_ln278_fu_1519_p1;
        end else if ((1'b1 == ap_condition_1933)) begin
            tmp1_V_address0 = zext_ln293_fu_1507_p1;
        end else if ((1'b1 == ap_condition_1928)) begin
            tmp1_V_address0 = zext_ln297_fu_1497_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            tmp1_V_address0 = zext_ln273_fu_1483_p1;
        end else if ((1'b1 == ap_condition_1921)) begin
            tmp1_V_address0 = zext_ln271_fu_1451_p1;
        end else if ((1'b1 == ap_condition_1917)) begin
            tmp1_V_address0 = zext_ln281_fu_1446_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            tmp1_V_address0 = zext_ln264_2_fu_1427_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            tmp1_V_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            tmp1_V_address0 = 64'd0;
        end else if ((1'b1 == ap_condition_1908)) begin
            tmp1_V_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            tmp1_V_address0 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            tmp1_V_address0 = 64'd9;
        end else if ((1'b1 == ap_condition_1902)) begin
            tmp1_V_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_address0 = 64'd11;
        end else begin
            tmp1_V_address0 = 'bx;
        end
    end else begin
        tmp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            tmp1_V_address1 = zext_ln269_fu_1561_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            tmp1_V_address1 = zext_ln286_fu_1539_p1;
        end else if ((1'b1 == ap_condition_1980)) begin
            tmp1_V_address1 = zext_ln285_fu_1529_p1;
        end else if ((1'b1 == ap_condition_1976)) begin
            tmp1_V_address1 = zext_ln298_fu_1524_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            tmp1_V_address1 = zext_ln277_fu_1493_p1;
        end else if ((1'b1 == ap_condition_1969)) begin
            tmp1_V_address1 = zext_ln274_fu_1488_p1;
        end else if ((1'b1 == ap_condition_1964)) begin
            tmp1_V_address1 = zext_ln282_fu_1478_p1;
        end else if ((1'b1 == ap_condition_1958)) begin
            tmp1_V_address1 = zext_ln288_fu_1461_p1;
        end else if ((1'b1 == ap_condition_1954)) begin
            tmp1_V_address1 = zext_ln296_fu_1456_p1;
        end else if ((1'b1 == ap_condition_1949)) begin
            tmp1_V_address1 = 64'd4;
        end else if ((1'b1 == ap_condition_1944)) begin
            tmp1_V_address1 = 64'd7;
        end else if ((1'b1 == ap_condition_1940)) begin
            tmp1_V_address1 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            tmp1_V_address1 = tmp1_V_addr_28_reg_2143;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp1_V_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp1_V_address1 = 64'd5;
        end else begin
            tmp1_V_address1 = 'bx;
        end
    end else begin
        tmp1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln272_fu_1441_p2 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp1_V_ce0 = 1'b1;
    end else begin
        tmp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln272_fu_1441_p2 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp1_V_ce1 = 1'b1;
    end else begin
        tmp1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp1_V_d0 = select_ln264_2_reg_2299;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        tmp1_V_d0 = tmp1_V_q1;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp1_V_d0 = tmp1_V_q0;
    end else begin
        tmp1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        tmp1_V_d1 = tmp1_V_q0;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        tmp1_V_d1 = tmp1_V_q1;
    end else begin
        tmp1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp1_V_we0 = 1'b1;
    end else begin
        tmp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln257_reg_2200 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp1_V_we1 = 1'b1;
    end else begin
        tmp1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp2_V_address0 = 64'd9;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp2_V_address0 = tmp2_V_addr_7_reg_2393;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp2_V_address0 = 64'd1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp2_V_address0 = 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp2_V_address0 = 64'd10;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        tmp2_V_address0 = tmp2_V_addr_5_reg_2358;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp2_V_address0 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp2_V_address0 = 64'd2;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        tmp2_V_address0 = 64'd3;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp2_V_address0 = 64'd5;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp2_V_address0 = 64'd6;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp2_V_address0 = 64'd7;
    end else begin
        tmp2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp2_V_address1 = 64'd10;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp2_V_address1 = tmp2_V_addr_reg_2419;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp2_V_address1 = 64'd2;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp2_V_address1 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp2_V_address1 = 64'd9;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp2_V_address1 = 64'd5;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp2_V_address1 = 64'd11;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        tmp2_V_address1 = 64'd6;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp2_V_address1 = 64'd0;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp2_V_address1 = 64'd1;
    end else if (((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp2_V_address1 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp2_V_address1 = 64'd4;
    end else begin
        tmp2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp2_V_ce0 = 1'b1;
    end else begin
        tmp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp2_V_ce1 = 1'b1;
    end else begin
        tmp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp2_V_d0 = 12'd0;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        tmp2_V_d0 = tmp1_V_q1;
    end else begin
        tmp2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        tmp2_V_d1 = tmp1_V_q0;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp2_V_d1 = 12'd0;
    end else begin
        tmp2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln270_reg_2256 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp2_V_we0 = 1'b1;
    end else begin
        tmp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln263_reg_2209 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln270_reg_2256 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln270_reg_2256 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp2_V_we1 = 1'b1;
    end else begin
        tmp2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln214_fu_1571_p2 = (grp_load_fu_843_p1 + 12'd1);

assign add_ln236_fu_940_p2 = ($signed(sext_ln236_fu_932_p1) + $signed(17'd1));

assign add_ln244_fu_1020_p2 = ($signed(sext_ln244_fu_1012_p1) + $signed(17'd1));

assign add_ln263_fu_1100_p2 = (trunc_ln213_fu_918_p1 + 2'd1);

assign add_ln264_1_fu_1421_p2 = ($signed(zext_ln264_fu_1418_p1) + $signed(4'd9));

assign add_ln264_2_fu_1209_p2 = (sub_ln264_fu_1203_p2 + zext_ln267_fu_1184_p1);

assign add_ln264_fu_1162_p2 = ($signed(sext_ln264_fu_1158_p1) + $signed(17'd2));

assign add_ln265_1_fu_1264_p2 = (sub_ln265_fu_1258_p2 + zext_ln267_fu_1184_p1);

assign add_ln265_fu_1220_p2 = ($signed(sext_ln264_fu_1158_p1) + $signed(17'd3));

assign add_ln266_1_fu_1299_p2 = (sub_ln266_fu_1293_p2 + zext_ln267_fu_1184_p1);

assign add_ln266_fu_1275_p2 = (trunc_ln264_fu_1154_p1 + 7'd2);

assign add_ln269_fu_1556_p2 = (zext_ln235_1_reg_2327 + 3'd3);

assign add_ln286_fu_1534_p2 = ($signed(zext_ln235_reg_2319) + $signed(4'd9));

assign add_ln293_fu_1502_p2 = ($signed(zext_ln235_reg_2319) + $signed(4'd10));

assign add_ln295_fu_1311_p2 = ($signed(sext_ln264_fu_1158_p1) + $signed(17'd1));

assign add_ln316_fu_2002_p2 = (add_ln712_14_fu_1990_p2 + add_ln712_13_fu_1986_p2);

assign add_ln320_1_fu_1658_p2 = (tmp_51_cast_fu_1646_p3 + trunc_ln320_3_fu_1654_p1);

assign add_ln320_fu_1641_p2 = (sub_ln320_fu_1635_p2 + trunc_ln320_2_reg_2479);

assign add_ln712_10_fu_1975_p2 = (trunc_ln712_3_fu_1962_p1 + trunc_ln712_2_reg_2569);

assign add_ln712_11_fu_1996_p2 = (add_ln712_12_fu_1980_p2 + add_ln712_4_fu_1943_p2);

assign add_ln712_12_fu_1980_p2 = (add_ln712_9_fu_1966_p2 + add_ln712_6_fu_1952_p2);

assign add_ln712_13_fu_1986_p2 = (trunc_ln712_1_reg_2604 + trunc_ln712_reg_2624);

assign add_ln712_14_fu_1990_p2 = (add_ln712_10_fu_1975_p2 + trunc_ln712_4_fu_1971_p1);

assign add_ln712_1_fu_1919_p2 = (add_ln712_fu_1914_p2 + mul_ln712_9_reg_2614);

assign add_ln712_2_fu_1863_p2 = (mul_ln712_7_fu_1857_p2 + mul_ln712_6_reg_2589);

assign add_ln712_3_fu_1868_p2 = (add_ln712_2_fu_1863_p2 + mul_ln712_5_reg_2579);

assign add_ln712_4_fu_1943_p2 = (add_ln712_3_reg_2599 + add_ln712_1_reg_2619);

assign add_ln712_5_fu_1947_p2 = (mul_ln712_1_reg_2554 + b_fu_174);

assign add_ln712_6_fu_1952_p2 = (add_ln712_5_fu_1947_p2 + mul_ln712_reg_2549);

assign add_ln712_7_fu_1802_p2 = (mul_ln712_2_fu_1796_p2 + mul_ln712_4_reg_2539);

assign add_ln712_8_fu_1957_p2 = (mul_ln712_3_reg_2574 + mul_ln712_11_fu_1937_p2);

assign add_ln712_9_fu_1966_p2 = (add_ln712_8_fu_1957_p2 + add_ln712_7_reg_2564);

assign add_ln712_fu_1914_p2 = (mul_ln712_10_fu_1908_p2 + mul_ln712_8_reg_2609);

assign and_ln264_1_fu_1369_p2 = (xor_ln265_fu_1363_p2 & icmp_ln264_1_fu_1333_p2);

assign and_ln264_fu_1338_p2 = (icmp_ln264_reg_2230 & icmp_ln264_1_fu_1333_p2);

assign and_ln265_fu_1353_p2 = (xor_ln264_fu_1347_p2 & icmp_ln265_reg_2240);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1877 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln243_fu_998_p2 == 1'd1) & (icmp_ln235_fu_926_p2 == 1'd1) & (icmp_ln232_fu_906_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1886 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln235_fu_926_p2 == 1'd1) & (icmp_ln232_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1890 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_1895 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln243_fu_998_p2 == 1'd0) & (icmp_ln235_fu_926_p2 == 1'd1) & (icmp_ln232_fu_906_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1902 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_1908 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln257_reg_2200 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_1917 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln272_fu_1441_p2 == 1'd1) & (icmp_ln270_reg_2256 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1921 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln270_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1928 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_1933 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln264_reg_2230 == 1'd1) & (icmp_ln263_reg_2209 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_1940 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln257_reg_2200 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_1944 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_1949 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln235_reg_2167 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_1954 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1958 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln272_fu_1441_p2 == 1'd1) & (icmp_ln264_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_1964 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln270_reg_2256 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_1969 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln272_reg_2334 == 1'd1) & (icmp_ln270_reg_2256 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_1976 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln295_reg_2260 == 1'd1) & (icmp_ln264_reg_2230 == 1'd0) & (icmp_ln263_reg_2209 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_1980 = ((icmp_ln232_reg_2148 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln264_reg_2230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage13;

assign d_9_fu_1066_p3 = ((tmp_19_fu_1026_p3[0:0] == 1'b1) ? sub_ln244_fu_1052_p2 : tmp_13_fu_1058_p3);

assign firstBias_f_V_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_0_0_address0 = idxprom82_fu_1078_p1;

assign firstKernel_f_V_0_1_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_0_2_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_1_0_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_1_1_address0 = idxprom82_fu_1078_p1;

assign firstKernel_f_V_1_2_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_2_0_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_2_1_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_2_2_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_3_0_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_3_1_address0 = idxprom82_reg_2175;

assign firstKernel_f_V_3_2_address0 = idxprom82_reg_2175;

assign grp_fu_849_p2 = (grp_fu_849_p0 + 3'd2);

assign grp_fu_854_p2 = (grp_fu_854_p0 + 4'd6);

assign grp_fu_859_p2 = ($signed(grp_fu_859_p0) + $signed(3'd5));

assign grp_fu_864_p2 = (zext_ln235_reg_2319 + 4'd7);

assign i_7_fu_986_p3 = ((tmp_fu_946_p3[0:0] == 1'b1) ? sub_ln236_fu_972_p2 : tmp_s_fu_978_p3);

assign icmp_ln214_fu_1577_p2 = ((add_ln214_fu_1571_p2 < 12'd3) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_906_p2 = ((ap_sig_allocacmp_id_1 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_926_p2 = ((trunc_ln213_fu_918_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_998_p2 = ((i_7_fu_986_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_1094_p2 = ((trunc_ln213_fu_918_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_1106_p2 = ((add_ln263_fu_1100_p2 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln264_1_fu_1333_p2 = ((t_reg_2213 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln264_fu_1178_p2 = (($signed(tmp_20_fu_1168_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_1236_p2 = (($signed(tmp_21_fu_1226_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign icmp_ln270_fu_1305_p2 = (($signed(grp_load_fu_846_p1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_1441_p2 = ((trunc_ln213_reg_2152 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_1327_p2 = (($signed(tmp_22_fu_1317_p4) < $signed(10'd1)) ? 1'b1 : 1'b0);

assign id_2_fu_912_p2 = (ap_sig_allocacmp_id_1 + 12'd1);

assign idxprom82_fu_1078_p1 = $unsigned(d_9_fu_1066_p3);

assign or_ln1_fu_1471_p3 = {{1'd1}, {trunc_ln213_reg_2152}};

assign or_ln264_fu_1375_p2 = (and_ln265_fu_1353_p2 | and_ln264_1_fu_1369_p2);

assign or_ln265_fu_1358_p2 = (icmp_ln265_reg_2240 | and_ln264_fu_1338_p2);

assign or_ln2_fu_1544_p3 = {{2'd2}, {trunc_ln213_reg_2152}};

assign or_ln_fu_1512_p3 = {{1'd1}, {trunc_ln213_reg_2152}};

assign out_r_address0 = zext_ln320_fu_2025_p1;

assign out_r_d0 = ((tmp_23_fu_2008_p3[0:0] == 1'b1) ? 35'd0 : add_ln316_fu_2002_p2);

assign p_and_t3_cast_fu_964_p3 = {{1'd0}, {xor_ln236_fu_958_p2}};

assign p_and_t7_cast_fu_1044_p3 = {{1'd0}, {xor_ln244_fu_1038_p2}};

assign select_ln214_fu_1583_p3 = ((icmp_ln214_fu_1577_p2[0:0] == 1'b1) ? add_ln214_fu_1571_p2 : 12'd0);

assign select_ln264_1_fu_1389_p3 = ((and_ln264_fu_1338_p2[0:0] == 1'b1) ? trunc_ln264_5_fu_1381_p1 : trunc_ln264_6_fu_1385_p1);

assign select_ln264_2_fu_1412_p3 = ((or_ln264_reg_2279[0:0] == 1'b1) ? select_ln264_fu_1405_p3 : select_ln264_1_reg_2284);

assign select_ln264_fu_1405_p3 = ((and_ln264_1_reg_2274[0:0] == 1'b1) ? trunc_ln264_3_fu_1397_p1 : trunc_ln264_4_fu_1401_p1);

assign sext_ln236_1_fu_994_p1 = i_7_fu_986_p3;

assign sext_ln236_fu_932_p1 = grp_load_fu_846_p1;

assign sext_ln244_1_fu_1074_p1 = d_9_fu_1066_p3;

assign sext_ln244_fu_1012_p0 = ap_sig_allocacmp_d_load;

assign sext_ln244_fu_1012_p1 = sext_ln244_fu_1012_p0;

assign sext_ln251_10_fu_1696_p1 = $signed(firstKernel_f_V_3_1_q0);

assign sext_ln251_11_fu_1700_p1 = $signed(firstKernel_f_V_3_2_q0);

assign sext_ln251_1_fu_1664_p1 = $signed(firstKernel_f_V_0_1_q0);

assign sext_ln251_2_fu_1668_p1 = $signed(firstKernel_f_V_0_2_q0);

assign sext_ln251_3_fu_1672_p1 = $signed(firstKernel_f_V_1_0_q0);

assign sext_ln251_4_fu_1140_p1 = $signed(firstKernel_f_V_1_1_q0);

assign sext_ln251_5_fu_1676_p1 = $signed(firstKernel_f_V_1_2_q0);

assign sext_ln251_6_fu_1680_p1 = $signed(firstKernel_f_V_2_0_q0);

assign sext_ln251_7_fu_1684_p1 = $signed(firstKernel_f_V_2_1_q0);

assign sext_ln251_8_fu_1688_p1 = $signed(firstKernel_f_V_2_2_q0);

assign sext_ln251_9_fu_1692_p1 = $signed(firstKernel_f_V_3_0_q0);

assign sext_ln251_fu_1136_p1 = $signed(firstKernel_f_V_0_0_q0);

assign sext_ln257_fu_1704_p1 = $signed(firstBias_f_V_q0);

assign sext_ln264_fu_1158_p1 = grp_load_fu_846_p1;

assign sub_ln236_fu_972_p2 = (8'd0 - p_and_t3_cast_fu_964_p3);

assign sub_ln244_fu_1052_p2 = (4'd0 - p_and_t7_cast_fu_1044_p3);

assign sub_ln264_fu_1203_p2 = (tmp_42_cast_fu_1195_p3 - trunc_ln264_1_fu_1187_p1);

assign sub_ln265_fu_1258_p2 = (tmp_43_cast_fu_1250_p3 - trunc_ln265_fu_1242_p1);

assign sub_ln266_fu_1293_p2 = (tmp_14_fu_1285_p3 - zext_ln266_fu_1281_p1);

assign sub_ln320_fu_1635_p2 = (tmp_49_cast_fu_1627_p3 - trunc_ln320_fu_1619_p1);

assign t_fu_1118_p3 = ((icmp_ln263_fu_1106_p2[0:0] == 1'b1) ? add_ln263_fu_1100_p2 : xor_ln263_fu_1112_p2);

assign tmp1_V_addr_28_reg_2143 = 64'd5;

assign tmp2_V_addr_5_reg_2358 = 64'd7;

assign tmp2_V_addr_7_reg_2393 = 64'd5;

assign tmp2_V_addr_reg_2419 = 64'd11;

assign tmp_13_fu_1058_p3 = {{1'd0}, {trunc_ln244_1_fu_1034_p1}};

assign tmp_14_fu_1285_p3 = {{add_ln266_fu_1275_p2}, {2'd0}};

assign tmp_19_fu_1026_p3 = add_ln244_fu_1020_p2[32'd16];

assign tmp_20_fu_1168_p4 = {{add_ln264_fu_1162_p2[16:7]}};

assign tmp_21_fu_1226_p4 = {{add_ln265_fu_1220_p2[16:7]}};

assign tmp_22_fu_1317_p4 = {{add_ln295_fu_1311_p2[16:7]}};

assign tmp_23_fu_2008_p3 = add_ln712_11_fu_1996_p2[32'd35];

assign tmp_42_cast_fu_1195_p3 = {{trunc_ln264_2_fu_1191_p1}, {2'd0}};

assign tmp_43_cast_fu_1250_p3 = {{trunc_ln265_1_fu_1246_p1}, {2'd0}};

assign tmp_49_cast_fu_1627_p3 = {{trunc_ln320_1_fu_1623_p1}, {2'd0}};

assign tmp_51_cast_fu_1646_p3 = {{add_ln320_fu_1641_p2}, {3'd0}};

assign tmp_fu_946_p3 = add_ln236_fu_940_p2[32'd16];

assign tmp_s_fu_978_p3 = {{1'd0}, {trunc_ln236_1_fu_954_p1}};

assign trunc_ln213_fu_918_p1 = grp_load_fu_843_p1[1:0];

assign trunc_ln235_fu_922_p1 = grp_load_fu_843_p1[0:0];

assign trunc_ln236_1_fu_954_p1 = add_ln236_fu_940_p2[6:0];

assign trunc_ln236_fu_936_p1 = grp_load_fu_846_p1[6:0];

assign trunc_ln244_1_fu_1034_p1 = add_ln244_fu_1020_p2[2:0];

assign trunc_ln244_fu_1016_p0 = ap_sig_allocacmp_d_load;

assign trunc_ln244_fu_1016_p1 = trunc_ln244_fu_1016_p0[2:0];

assign trunc_ln264_1_fu_1187_p1 = add_ln264_fu_1162_p2[8:0];

assign trunc_ln264_2_fu_1191_p1 = add_ln264_fu_1162_p2[6:0];

assign trunc_ln264_3_fu_1397_p1 = input_r_q1[11:0];

assign trunc_ln264_4_fu_1401_p1 = reg_869[11:0];

assign trunc_ln264_5_fu_1381_p1 = input_r_q1[11:0];

assign trunc_ln264_6_fu_1385_p1 = reg_869[11:0];

assign trunc_ln264_fu_1154_p1 = grp_load_fu_846_p1[6:0];

assign trunc_ln265_1_fu_1246_p1 = add_ln265_fu_1220_p2[6:0];

assign trunc_ln265_fu_1242_p1 = add_ln265_fu_1220_p2[8:0];

assign trunc_ln320_1_fu_1623_p1 = i_fu_230[6:0];

assign trunc_ln320_2_fu_1591_p1 = grp_load_fu_843_p1[8:0];

assign trunc_ln320_3_fu_1654_p1 = d_fu_178[11:0];

assign trunc_ln320_fu_1619_p1 = i_fu_230[8:0];

assign trunc_ln712_1_fu_1873_p1 = add_ln712_3_fu_1868_p2[34:0];

assign trunc_ln712_2_fu_1807_p1 = add_ln712_7_fu_1802_p2[34:0];

assign trunc_ln712_3_fu_1962_p1 = add_ln712_8_fu_1957_p2[34:0];

assign trunc_ln712_4_fu_1971_p1 = add_ln712_6_fu_1952_p2[34:0];

assign trunc_ln712_fu_1924_p1 = add_ln712_1_fu_1919_p2[34:0];

assign xor_ln236_fu_958_p2 = (trunc_ln236_fu_936_p1 ^ 7'd127);

assign xor_ln244_fu_1038_p2 = (trunc_ln244_fu_1016_p1 ^ 3'd7);

assign xor_ln263_fu_1112_p2 = (trunc_ln213_fu_918_p1 ^ 2'd2);

assign xor_ln264_fu_1347_p2 = (1'd1 ^ and_ln264_fu_1338_p2);

assign xor_ln265_fu_1363_p2 = (or_ln265_fu_1358_p2 ^ 1'd1);

assign xor_ln272_fu_1466_p2 = (trunc_ln235_reg_2162 ^ 1'd1);

assign zext_ln235_1_fu_1436_p1 = trunc_ln213_reg_2152;

assign zext_ln235_fu_1432_p1 = trunc_ln213_reg_2152;

assign zext_ln264_1_fu_1126_p1 = t_fu_1118_p3;

assign zext_ln264_2_fu_1427_p1 = add_ln264_1_fu_1421_p2;

assign zext_ln264_3_fu_1215_p1 = add_ln264_2_fu_1209_p2;

assign zext_ln264_fu_1418_p1 = t_reg_2213;

assign zext_ln265_fu_1270_p1 = add_ln265_1_fu_1264_p2;

assign zext_ln266_1_fu_1343_p1 = add_ln266_1_reg_2251;

assign zext_ln266_fu_1281_p1 = add_ln266_fu_1275_p2;

assign zext_ln267_fu_1184_p1 = t_reg_2213;

assign zext_ln269_fu_1561_p1 = add_ln269_fu_1556_p2;

assign zext_ln271_fu_1451_p1 = grp_load_fu_843_p1;

assign zext_ln273_fu_1483_p1 = xor_ln272_fu_1466_p2;

assign zext_ln274_fu_1488_p1 = grp_fu_849_p2;

assign zext_ln277_fu_1493_p1 = add_ln263_reg_2204;

assign zext_ln278_fu_1519_p1 = or_ln_fu_1512_p3;

assign zext_ln281_fu_1446_p1 = grp_fu_849_p2;

assign zext_ln282_fu_1478_p1 = or_ln1_fu_1471_p3;

assign zext_ln285_fu_1529_p1 = grp_fu_854_p2;

assign zext_ln286_fu_1539_p1 = add_ln286_fu_1534_p2;

assign zext_ln288_fu_1461_p1 = grp_fu_859_p2;

assign zext_ln289_fu_1551_p1 = or_ln2_fu_1544_p3;

assign zext_ln292_fu_1566_p1 = grp_fu_864_p2;

assign zext_ln293_fu_1507_p1 = add_ln293_fu_1502_p2;

assign zext_ln296_fu_1456_p1 = grp_fu_854_p2;

assign zext_ln297_fu_1497_p1 = grp_fu_859_p2;

assign zext_ln298_fu_1524_p1 = grp_fu_864_p2;

assign zext_ln320_fu_2025_p1 = add_ln320_1_reg_2544;

always @ (posedge ap_clk) begin
    idxprom82_reg_2175[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln235_reg_2319[3:2] <= 2'b00;
    zext_ln235_1_reg_2327[2] <= 1'b0;
end

endmodule //master_fix_convolution1_fix_Pipeline_Conv_loop
